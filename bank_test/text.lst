                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.3.1 Mon Mar 11 10:29:22 2019
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module lcc191630
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _arrow_y
                             12 	.globl _arrow_x
                             13 	.globl _LETTER_COUNT
                             14 	.globl _cushion
                             15 	.globl _j
                             16 	.globl _i
                             17 	.globl _chars
                             18 	.globl _print
                             19 	.globl _bkg_clean
                             20 	.globl _sprite_clean
                             21 	.globl _hide_sprites
                             22 ;--------------------------------------------------------
                             23 ; special function registers
                             24 ;--------------------------------------------------------
                             25 ;--------------------------------------------------------
                             26 ; special function bits 
                             27 ;--------------------------------------------------------
                             28 ;--------------------------------------------------------
                             29 ; internal ram data
                             30 ;--------------------------------------------------------
                             31 	.area _DATA
   0000                      32 _chars::
   0000                      33 	.ds 40
   0028                      34 _i::
   0028                      35 	.ds 1
   0029                      36 _j::
   0029                      37 	.ds 1
   002A                      38 _cushion::
   002A                      39 	.ds 1
   002B                      40 _LETTER_COUNT::
   002B                      41 	.ds 1
   002C                      42 _arrow_x::
   002C                      43 	.ds 1
   002D                      44 _arrow_y::
   002D                      45 	.ds 1
                             46 ;--------------------------------------------------------
                             47 ; overlayable items in internal ram 
                             48 ;--------------------------------------------------------
                             49 	.area _OVERLAY
                             50 ;--------------------------------------------------------
                             51 ; indirectly addressable internal ram data
                             52 ;--------------------------------------------------------
                             53 	.area _ISEG
                             54 ;--------------------------------------------------------
                             55 ; bit data
                             56 ;--------------------------------------------------------
                             57 	.area _BSEG
                             58 ;--------------------------------------------------------
                             59 ; external ram data
                             60 ;--------------------------------------------------------
                             61 	.area _XSEG
                             62 ;--------------------------------------------------------
                             63 ; global & static initialisations
                             64 ;--------------------------------------------------------
                             65 	.area _GSINIT
                             66 	.area _GSFINAL
                             67 	.area _GSINIT
                             68 ;	text.c 86
                             69 ;	genAssign (pointer)
   0000 11 00 00             70 	ld	de,#_chars
   0003 3E 61                71 	ld	a,#0x61
   0005 12                   72 	ld	(de),a
                             73 ;	genPlus
                             74 ;	genPlusIncr
   0006 21 01 00             75 	ld	hl,#_chars + 1
                             76 ;	genAssign (pointer)
   0009 36 62                77 	ld	(hl),#0x62
                             78 ;	genPlus
                             79 ;	genPlusIncr
   000B 23                   80 	inc	hl
                             81 ;	genAssign (pointer)
   000C 36 63                82 	ld	(hl),#0x63
                             83 ;	genPlus
                             84 ;	genPlusIncr
   000E 23                   85 	inc	hl
                             86 ;	genAssign (pointer)
   000F 36 64                87 	ld	(hl),#0x64
                             88 ;	genPlus
                             89 ;	genPlusIncr
   0011 23                   90 	inc	hl
                             91 ;	genAssign (pointer)
   0012 36 65                92 	ld	(hl),#0x65
                             93 ;	genPlus
                             94 ;	genPlusIncr
   0014 23                   95 	inc	hl
                             96 ;	genAssign (pointer)
   0015 36 66                97 	ld	(hl),#0x66
                             98 ;	genPlus
                             99 ;	genPlusIncr
   0017 23                  100 	inc	hl
                            101 ;	genAssign (pointer)
   0018 36 67               102 	ld	(hl),#0x67
                            103 ;	genPlus
                            104 ;	genPlusIncr
   001A 23                  105 	inc	hl
                            106 ;	genAssign (pointer)
   001B 36 68               107 	ld	(hl),#0x68
                            108 ;	genPlus
                            109 ;	genPlusIncr
   001D 23                  110 	inc	hl
                            111 ;	genAssign (pointer)
   001E 36 69               112 	ld	(hl),#0x69
                            113 ;	genPlus
                            114 ;	genPlusIncr
   0020 23                  115 	inc	hl
                            116 ;	genAssign (pointer)
   0021 36 6A               117 	ld	(hl),#0x6A
                            118 ;	genPlus
                            119 ;	genPlusIncr
   0023 23                  120 	inc	hl
                            121 ;	genAssign (pointer)
   0024 36 6B               122 	ld	(hl),#0x6B
                            123 ;	genPlus
                            124 ;	genPlusIncr
   0026 23                  125 	inc	hl
                            126 ;	genAssign (pointer)
   0027 36 6C               127 	ld	(hl),#0x6C
                            128 ;	genPlus
                            129 ;	genPlusIncr
   0029 23                  130 	inc	hl
                            131 ;	genAssign (pointer)
   002A 36 6D               132 	ld	(hl),#0x6D
                            133 ;	genPlus
                            134 ;	genPlusIncr
   002C 23                  135 	inc	hl
                            136 ;	genAssign (pointer)
   002D 36 6E               137 	ld	(hl),#0x6E
                            138 ;	genPlus
                            139 ;	genPlusIncr
   002F 23                  140 	inc	hl
                            141 ;	genAssign (pointer)
   0030 36 6F               142 	ld	(hl),#0x6F
                            143 ;	genPlus
                            144 ;	genPlusIncr
   0032 23                  145 	inc	hl
                            146 ;	genAssign (pointer)
   0033 36 70               147 	ld	(hl),#0x70
                            148 ;	genPlus
                            149 ;	genPlusIncr
   0035 23                  150 	inc	hl
                            151 ;	genAssign (pointer)
   0036 36 71               152 	ld	(hl),#0x71
                            153 ;	genPlus
                            154 ;	genPlusIncr
   0038 23                  155 	inc	hl
                            156 ;	genAssign (pointer)
   0039 36 72               157 	ld	(hl),#0x72
                            158 ;	genPlus
                            159 ;	genPlusIncr
   003B 23                  160 	inc	hl
                            161 ;	genAssign (pointer)
   003C 36 73               162 	ld	(hl),#0x73
                            163 ;	genPlus
                            164 ;	genPlusIncr
   003E 23                  165 	inc	hl
                            166 ;	genAssign (pointer)
   003F 36 74               167 	ld	(hl),#0x74
                            168 ;	genPlus
                            169 ;	genPlusIncr
   0041 23                  170 	inc	hl
                            171 ;	genAssign (pointer)
   0042 36 75               172 	ld	(hl),#0x75
                            173 ;	genPlus
                            174 ;	genPlusIncr
   0044 23                  175 	inc	hl
                            176 ;	genAssign (pointer)
   0045 36 76               177 	ld	(hl),#0x76
                            178 ;	genPlus
                            179 ;	genPlusIncr
   0047 23                  180 	inc	hl
                            181 ;	genAssign (pointer)
   0048 36 77               182 	ld	(hl),#0x77
                            183 ;	genPlus
                            184 ;	genPlusIncr
   004A 23                  185 	inc	hl
                            186 ;	genAssign (pointer)
   004B 36 78               187 	ld	(hl),#0x78
                            188 ;	genPlus
                            189 ;	genPlusIncr
   004D 23                  190 	inc	hl
                            191 ;	genAssign (pointer)
   004E 36 79               192 	ld	(hl),#0x79
                            193 ;	genPlus
                            194 ;	genPlusIncr
   0050 23                  195 	inc	hl
                            196 ;	genAssign (pointer)
   0051 36 7A               197 	ld	(hl),#0x7A
                            198 ;	genPlus
                            199 ;	genPlusIncr
   0053 23                  200 	inc	hl
                            201 ;	genAssign (pointer)
   0054 36 30               202 	ld	(hl),#0x30
                            203 ;	genPlus
                            204 ;	genPlusIncr
   0056 23                  205 	inc	hl
                            206 ;	genAssign (pointer)
   0057 36 31               207 	ld	(hl),#0x31
                            208 ;	genPlus
                            209 ;	genPlusIncr
   0059 23                  210 	inc	hl
                            211 ;	genAssign (pointer)
   005A 36 32               212 	ld	(hl),#0x32
                            213 ;	genPlus
                            214 ;	genPlusIncr
   005C 23                  215 	inc	hl
                            216 ;	genAssign (pointer)
   005D 36 33               217 	ld	(hl),#0x33
                            218 ;	genPlus
                            219 ;	genPlusIncr
   005F 23                  220 	inc	hl
                            221 ;	genAssign (pointer)
   0060 36 34               222 	ld	(hl),#0x34
                            223 ;	genPlus
                            224 ;	genPlusIncr
   0062 23                  225 	inc	hl
                            226 ;	genAssign (pointer)
   0063 36 35               227 	ld	(hl),#0x35
                            228 ;	genPlus
                            229 ;	genPlusIncr
   0065 23                  230 	inc	hl
                            231 ;	genAssign (pointer)
   0066 36 36               232 	ld	(hl),#0x36
                            233 ;	genPlus
                            234 ;	genPlusIncr
   0068 23                  235 	inc	hl
                            236 ;	genAssign (pointer)
   0069 36 37               237 	ld	(hl),#0x37
                            238 ;	genPlus
                            239 ;	genPlusIncr
   006B 23                  240 	inc	hl
                            241 ;	genAssign (pointer)
   006C 36 38               242 	ld	(hl),#0x38
                            243 ;	genPlus
                            244 ;	genPlusIncr
   006E 23                  245 	inc	hl
                            246 ;	genAssign (pointer)
   006F 36 39               247 	ld	(hl),#0x39
                            248 ;	genPlus
                            249 ;	genPlusIncr
   0071 23                  250 	inc	hl
                            251 ;	genAssign (pointer)
   0072 36 2E               252 	ld	(hl),#0x2E
                            253 ;	genPlus
                            254 ;	genPlusIncr
   0074 23                  255 	inc	hl
                            256 ;	genAssign (pointer)
   0075 36 2C               257 	ld	(hl),#0x2C
                            258 ;	genPlus
                            259 ;	genPlusIncr
   0077 23                  260 	inc	hl
                            261 ;	genAssign (pointer)
   0078 36 3B               262 	ld	(hl),#0x3B
                            263 ;	genPlus
                            264 ;	genPlusIncr
   007A 23                  265 	inc	hl
                            266 ;	genAssign (pointer)
   007B 36 2F               267 	ld	(hl),#0x2F
                            268 ;	genPlus
                            269 ;	genPlusIncr
   007D 23                  270 	inc	hl
                            271 ;	genAssign (pointer)
   007E 36 00               272 	ld	(hl),#0x00
                            273 ;	text.c 7
                            274 ;	genAssign
                            275 ;	AOP_HL for _LETTER_COUNT
   0080 21 2B 00            276 	ld	hl,#_LETTER_COUNT
   0083 36 00               277 	ld	(hl),#0x00
                            278 ;	text.c 9
                            279 ;	genAssign
                            280 ;	AOP_HL for _arrow_x
   0085 21 2C 00            281 	ld	hl,#_arrow_x
   0088 36 18               282 	ld	(hl),#0x18
                            283 ;	text.c 10
                            284 ;	genAssign
                            285 ;	AOP_HL for _arrow_y
   008A 21 2D 00            286 	ld	hl,#_arrow_y
   008D 36 20               287 	ld	(hl),#0x20
                            288 ;--------------------------------------------------------
                            289 ; Home
                            290 ;--------------------------------------------------------
                            291 	.area _HOME
                            292 ;	text.c 64
                            293 ;	genLabel
                            294 ;	genFunction
                            295 ;	---------------------------------
                            296 ; Function bkg_clean
                            297 ; ---------------------------------
   0000                     298 ___bkg_clean_start:
   0000                     299 _bkg_clean:
                            300 	
                            301 ;	text.c 66
                            302 ;	genIpush
                            303 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0000 21 00 00            304 	ld	hl,#_chain_border_tiles
   0003 E5                  305 	push	hl
                            306 ;	genIpush
   0004 21 00 0A            307 	ld	hl,#0x0A00
   0007 E5                  308 	push	hl
                            309 ;	genCall
   0008 CD 00 00            310 	call	_set_bkg_data
   000B E8 04               311 	lda	sp,4(sp)
                            312 ;	text.c 67
                            313 ;	genIpush
                            314 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   000D 21 00 00            315 	ld	hl,#_chain_border
   0010 E5                  316 	push	hl
                            317 ;	genIpush
   0011 21 14 12            318 	ld	hl,#0x1214
   0014 E5                  319 	push	hl
                            320 ;	genIpush
   0015 21 00 00            321 	ld	hl,#0x0000
   0018 E5                  322 	push	hl
                            323 ;	genCall
   0019 CD 00 00            324 	call	_set_bkg_tiles
   001C E8 06               325 	lda	sp,6(sp)
                            326 ;	genLabel
   001E                     327 00101$:
                            328 ;	genEndFunction
                            329 	
   001E C9                  330 	ret
   001F                     331 ___bkg_clean_end:
                            332 ;	text.c 70
                            333 ;	genLabel
                            334 ;	genFunction
                            335 ;	---------------------------------
                            336 ; Function sprite_clean
                            337 ; ---------------------------------
   001F                     338 ___sprite_clean_start:
   001F                     339 _sprite_clean:
                            340 	
                            341 ;	text.c 72
                            342 ;	genAssign
                            343 ;	AOP_HL for _i
   001F 21 28 00            344 	ld	hl,#_i
   0022 36 00               345 	ld	(hl),#0x00
                            346 ;	genLabel
   0024                     347 00101$:
                            348 ;	genCmpLt
                            349 ;	AOP_HL for _i
                            350 ;	AOP_HL for _LETTER_COUNT
   0024 21 28 00            351 	ld	hl,#_i
   0027 7E                  352 	ld	a,(hl)
   0028 21 2B 00            353 	ld	hl,#_LETTER_COUNT
   002B 96                  354 	sub	a,(hl)
   002C D2 45 00            355 	jp	nc,00104$
                            356 ;	text.c 74
                            357 ;	genIpush
                            358 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   002F 3E 28               359 	ld	a,#0x28
   0031 F5                  360 	push	af
   0032 33                  361 	inc	sp
                            362 ;	genIpush
                            363 ;	AOP_HL for _i
   0033 21 28 00            364 	ld	hl,#_i
   0036 7E                  365 	ld	a,(hl)
   0037 F5                  366 	push	af
   0038 33                  367 	inc	sp
                            368 ;	genCall
   0039 CD 00 00            369 	call	_set_sprite_tile
   003C E8 02               370 	lda	sp,2(sp)
                            371 ;	text.c 72
                            372 ;	genPlus
                            373 ;	AOP_HL for _i
                            374 ;	genPlusIncr
   003E 21 28 00            375 	ld	hl,#_i
   0041 34                  376 	inc	(hl)
                            377 ;	genGoto
   0042 C3 24 00            378 	jp	00101$
                            379 ;	genLabel
   0045                     380 00104$:
                            381 ;	text.c 76
                            382 ;	genAssign
                            383 ;	AOP_HL for _LETTER_COUNT
   0045 21 2B 00            384 	ld	hl,#_LETTER_COUNT
   0048 36 00               385 	ld	(hl),#0x00
                            386 ;	genLabel
   004A                     387 00105$:
                            388 ;	genEndFunction
                            389 	
   004A C9                  390 	ret
   004B                     391 ___sprite_clean_end:
                            392 ;	text.c 79
                            393 ;	genLabel
                            394 ;	genFunction
                            395 ;	---------------------------------
                            396 ; Function hide_sprites
                            397 ; ---------------------------------
   004B                     398 ___hide_sprites_start:
   004B                     399 _hide_sprites:
                            400 	
                            401 ;	text.c 81
                            402 ;	genAssign
                            403 ;	AOP_HL for _i
   004B 21 28 00            404 	ld	hl,#_i
   004E 36 00               405 	ld	(hl),#0x00
                            406 ;	genLabel
   0050                     407 00101$:
                            408 ;	genCmpLt
                            409 ;	AOP_HL for _i
   0050 21 28 00            410 	ld	hl,#_i
   0053 7E                  411 	ld	a,(hl)
   0054 FE 64               412 	cp	#0x64
   0056 D2 6F 00            413 	jp	nc,00105$
                            414 ;	text.c 83
                            415 ;	genIpush
                            416 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0059 21 FA FA            417 	ld	hl,#0xFAFA
   005C E5                  418 	push	hl
                            419 ;	genIpush
                            420 ;	AOP_HL for _i
   005D 21 28 00            421 	ld	hl,#_i
   0060 7E                  422 	ld	a,(hl)
   0061 F5                  423 	push	af
   0062 33                  424 	inc	sp
                            425 ;	genCall
   0063 CD 00 00            426 	call	_move_sprite
   0066 E8 03               427 	lda	sp,3(sp)
                            428 ;	text.c 81
                            429 ;	genPlus
                            430 ;	AOP_HL for _i
                            431 ;	genPlusIncr
   0068 21 28 00            432 	ld	hl,#_i
   006B 34                  433 	inc	(hl)
                            434 ;	genGoto
   006C C3 50 00            435 	jp	00101$
                            436 ;	genLabel
   006F                     437 00105$:
                            438 ;	genEndFunction
                            439 	
   006F C9                  440 	ret
   0070                     441 ___hide_sprites_end:
                            442 	.area _CODE
                            443 ;--------------------------------------------------------
                            444 ; code
                            445 ;--------------------------------------------------------
                            446 	.area _CODE
                            447 ;	text.c 12
                            448 ;	genLabel
                            449 ;	genFunction
                            450 ;	---------------------------------
                            451 ; Function print
                            452 ; ---------------------------------
   0000                     453 ___print_start:
   0000                     454 _print:
   0000 E8 F4               455 	lda	sp,-12(sp)
                            456 ;	text.c 14
                            457 ;	genAssign
   0002 01 40 FF            458 	ld	bc,#0xFF40
                            459 ;	genAssign
                            460 ;	AOP_STK for _print_sloc0_1_0
   0005 F8 0A               461 	lda	hl,10(sp)
   0007 36 40               462 	ld	(hl),#0x40
   0009 23                  463 	inc	hl
   000A 36 FF               464 	ld	(hl),#0xFF
                            465 ;	genPointerGet
                            466 ;	AOP_STK for _print_sloc0_1_0
                            467 ;	AOP_STK for _print_sloc1_1_0
   000C 2B                  468 	dec	hl
   000D 5E                  469 	ld	e,(hl)
   000E 23                  470 	inc	hl
   000F 56                  471 	ld	d,(hl)
   0010 1A                  472 	ld	a,(de)
   0011 2B                  473 	dec	hl
   0012 2B                  474 	dec	hl
                            475 ;	genAnd
                            476 ;	AOP_STK for _print_sloc1_1_0
   0013 77                  477 	ld      (hl),a
                            478 ; Removed redundent load
   0014 E6 FB               479 	and	a,#0xFB
                            480 ;	genAssign (pointer)
   0016 02                  481 	ld	(bc),a
                            482 ;	text.c 16
                            483 ;	genIpush
                            484 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0017 21 00 00            485 	ld	hl,#_font
   001A E5                  486 	push	hl
                            487 ;	genIpush
   001B 21 00 2E            488 	ld	hl,#0x2E00
   001E E5                  489 	push	hl
                            490 ;	genCall
   001F CD 00 00            491 	call	_set_sprite_data
   0022 E8 04               492 	lda	sp,4(sp)
                            493 ;	text.c 18
                            494 ;	genIpush
                            495 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0024 21 00 00            496 	ld	hl,#_chain_border_tiles
   0027 E5                  497 	push	hl
                            498 ;	genIpush
   0028 21 00 0A            499 	ld	hl,#0x0A00
   002B E5                  500 	push	hl
                            501 ;	genCall
   002C CD 00 00            502 	call	_set_bkg_data
   002F E8 04               503 	lda	sp,4(sp)
                            504 ;	text.c 19
                            505 ;	genIpush
                            506 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0031 21 00 00            507 	ld	hl,#_chain_border
   0034 E5                  508 	push	hl
                            509 ;	genIpush
   0035 21 14 12            510 	ld	hl,#0x1214
   0038 E5                  511 	push	hl
                            512 ;	genIpush
   0039 21 00 00            513 	ld	hl,#0x0000
   003C E5                  514 	push	hl
                            515 ;	genCall
   003D CD 00 00            516 	call	_set_bkg_tiles
   0040 E8 06               517 	lda	sp,6(sp)
                            518 ;	text.c 21
                            519 ;	genAssign
                            520 ;	AOP_HL for _LETTER_COUNT
                            521 ;	AOP_HL for _cushion
   0042 21 2B 00            522 	ld	hl,#_LETTER_COUNT
   0045 7E                  523 	ld	a,(hl)
   0046 21 2A 00            524 	ld	hl,#_cushion
   0049 77                  525 	ld	(hl),a
                            526 ;	text.c 22
                            527 ;	genAssign
                            528 ;	AOP_HL for _i
   004A 21 28 00            529 	ld	hl,#_i
   004D 36 00               530 	ld	(hl),#0x00
                            531 ;	genLabel
   004F                     532 00119$:
                            533 ;	genPlus
                            534 ;	AOP_STK for 
                            535 ;	AOP_HL for _i
                            536 ;	Can't optimise plus by inc, falling back to the normal way
   004F F8 0E               537 	lda	hl,14(sp)
   0051 5E                  538 	ld	e,(hl)
   0052 23                  539 	inc	hl
   0053 56                  540 	ld	d,(hl)
   0054 21 28 00            541 	ld	hl,#_i
   0057 6E                  542 	ld	l,(hl)
   0058 26 00               543 	ld	h,#0x00
   005A 19                  544 	add	hl,de
   005B 4D                  545 	ld	c,l
   005C 44                  546 	ld	b,h
                            547 ;	genPointerGet
   005D 0A                  548 	ld	a,(bc)
                            549 ;	genCmpEq
                            550 ; genCmpEq: left 1, right 1, result 0
   005E 4F                  551 	ld	c,a
   005F B7                  552 	or	a,a
   0060 CA 3A 02            553 	jp	z,00123$
   0063                     554 00136$:
                            555 ;	text.c 24
                            556 ;	genAssign
                            557 ;	AOP_HL for _j
   0063 21 29 00            558 	ld	hl,#_j
   0066 36 00               559 	ld	(hl),#0x00
                            560 ;	genLabel
   0068                     561 00115$:
                            562 ;	genCmpLt
                            563 ;	AOP_HL for _j
                            564 ;	AOP_STK for _print_sloc9_1_0
   0068 21 29 00            565 	ld	hl,#_j
   006B 7E                  566 	ld	a,(hl)
   006C FE 30               567 	cp	#0x30
   006E 3E 00               568 	ld	a,#0x00
   0070 17                  569 	rla
   0071 F8 00               570 	lda	hl,0(sp)
   0073 77                  571 	ld	(hl),a
                            572 ;	genIfx
                            573 ;	AOP_STK for _print_sloc9_1_0
   0074 AF                  574 	xor	a,a
   0075 B6                  575 	or	a,(hl)
   0076 CA 29 02            576 	jp	z,00118$
                            577 ;	text.c 26
                            578 ;	genCmpEq
                            579 ; genCmpEq: left 1, right 1, result 1
   0079 79                  580 	ld	a,c
   007A FE 20               581 	cp	a,#0x20
   007C C2 83 00            582 	jp	nz,00137$
   007F 3E 01               583 	ld	a,#0x01
   0081 18 01               584 	jr	00138$
   0083                     585 00137$:
   0083 AF                  586 	xor	a,a
   0084                     587 00138$:
                            588 ;	genIfx
   0084 B7                  589 	or	a,a
   0085 C2 29 02            590 	jp	nz,00118$
                            591 ;	text.c 28
                            592 ;	genCmpEq
                            593 ; genCmpEq: left 1, right 1, result 1
   0088 79                  594 	ld	a,c
   0089 FE 3E               595 	cp	a,#0x3E
   008B C2 92 00            596 	jp	nz,00139$
   008E 3E 01               597 	ld	a,#0x01
   0090 18 01               598 	jr	00140$
   0092                     599 00139$:
   0092 AF                  600 	xor	a,a
   0093                     601 00140$:
                            602 ;	genIfx
   0093 B7                  603 	or	a,a
   0094 CA C7 00            604 	jp	z,00104$
                            605 ;	text.c 30
                            606 ;	genPlus
                            607 ;	AOP_HL for _i
                            608 ;	AOP_HL for _cushion
                            609 ;	AOP_STK for _print_sloc1_1_0
                            610 ;	Can't optimise plus by inc, falling back to the normal way
   0097 21 28 00            611 	ld	hl,#_i
   009A 7E                  612 	ld	a,(hl)
   009B 21 2A 00            613 	ld	hl,#_cushion
   009E 86                  614 	add	a,(hl)
   009F F8 09               615 	lda	hl,9(sp)
   00A1 77                  616 	ld	(hl),a
                            617 ;	genIpush
                            618 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   00A2 C5                  619 	push	bc
   00A3 3E 29               620 	ld	a,#0x29
   00A5 F5                  621 	push	af
   00A6 33                  622 	inc	sp
                            623 ;	genIpush
                            624 ;	AOP_STK for _print_sloc1_1_0
   00A7 7E                  625 	ld	a,(hl)
   00A8 F5                  626 	push	af
   00A9 33                  627 	inc	sp
                            628 ;	genCall
   00AA CD 00 00            629 	call	_set_sprite_tile
   00AD E8 02               630 	lda	sp,2(sp)
   00AF E1                  631 	pop	hl
   00B0 4D                  632 	ld	c,l
                            633 ;	text.c 31
                            634 ;	genIpush
                            635 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   00B1 C5                  636 	push	bc
                            637 ;	AOP_STK for 
   00B2 F8 13               638 	lda	hl,19(sp)
   00B4 7E                  639 	ld	a,(hl)
   00B5 F5                  640 	push	af
   00B6 33                  641 	inc	sp
                            642 ;	genIpush
                            643 ;	AOP_STK for 
   00B7 2B                  644 	dec	hl
   00B8 7E                  645 	ld	a,(hl)
   00B9 F5                  646 	push	af
   00BA 33                  647 	inc	sp
                            648 ;	genIpush
                            649 ;	AOP_STK for _print_sloc1_1_0
   00BB F8 0D               650 	lda	hl,13(sp)
   00BD 7E                  651 	ld	a,(hl)
   00BE F5                  652 	push	af
   00BF 33                  653 	inc	sp
                            654 ;	genCall
   00C0 CD 00 00            655 	call	_move_sprite
   00C3 E8 03               656 	lda	sp,3(sp)
   00C5 E1                  657 	pop	hl
   00C6 4D                  658 	ld	c,l
                            659 ;	genLabel
   00C7                     660 00104$:
                            661 ;	text.c 33
                            662 ;	genCmpEq
                            663 ; genCmpEq: left 1, right 1, result 1
   00C7 79                  664 	ld	a,c
   00C8 FE 27               665 	cp	a,#0x27
   00CA C2 D1 00            666 	jp	nz,00141$
   00CD 3E 01               667 	ld	a,#0x01
   00CF 18 01               668 	jr	00142$
   00D1                     669 00141$:
   00D1 AF                  670 	xor	a,a
   00D2                     671 00142$:
                            672 ;	genIfx
   00D2 B7                  673 	or	a,a
   00D3 CA 06 01            674 	jp	z,00106$
                            675 ;	text.c 35
                            676 ;	genPlus
                            677 ;	AOP_HL for _i
                            678 ;	AOP_HL for _cushion
                            679 ;	AOP_STK for _print_sloc0_1_0
                            680 ;	Can't optimise plus by inc, falling back to the normal way
   00D6 21 28 00            681 	ld	hl,#_i
   00D9 7E                  682 	ld	a,(hl)
   00DA 21 2A 00            683 	ld	hl,#_cushion
   00DD 86                  684 	add	a,(hl)
   00DE F8 0A               685 	lda	hl,10(sp)
   00E0 77                  686 	ld	(hl),a
                            687 ;	genIpush
                            688 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   00E1 C5                  689 	push	bc
   00E2 3E 2A               690 	ld	a,#0x2A
   00E4 F5                  691 	push	af
   00E5 33                  692 	inc	sp
                            693 ;	genIpush
                            694 ;	AOP_STK for _print_sloc0_1_0
   00E6 7E                  695 	ld	a,(hl)
   00E7 F5                  696 	push	af
   00E8 33                  697 	inc	sp
                            698 ;	genCall
   00E9 CD 00 00            699 	call	_set_sprite_tile
   00EC E8 02               700 	lda	sp,2(sp)
   00EE E1                  701 	pop	hl
   00EF 4D                  702 	ld	c,l
                            703 ;	text.c 36
                            704 ;	genIpush
                            705 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   00F0 C5                  706 	push	bc
                            707 ;	AOP_STK for 
   00F1 F8 13               708 	lda	hl,19(sp)
   00F3 7E                  709 	ld	a,(hl)
   00F4 F5                  710 	push	af
   00F5 33                  711 	inc	sp
                            712 ;	genIpush
                            713 ;	AOP_STK for 
   00F6 2B                  714 	dec	hl
   00F7 7E                  715 	ld	a,(hl)
   00F8 F5                  716 	push	af
   00F9 33                  717 	inc	sp
                            718 ;	genIpush
                            719 ;	AOP_STK for _print_sloc0_1_0
   00FA F8 0E               720 	lda	hl,14(sp)
   00FC 7E                  721 	ld	a,(hl)
   00FD F5                  722 	push	af
   00FE 33                  723 	inc	sp
                            724 ;	genCall
   00FF CD 00 00            725 	call	_move_sprite
   0102 E8 03               726 	lda	sp,3(sp)
   0104 E1                  727 	pop	hl
   0105 4D                  728 	ld	c,l
                            729 ;	genLabel
   0106                     730 00106$:
                            731 ;	text.c 38
                            732 ;	genCmpEq
                            733 ; genCmpEq: left 1, right 1, result 1
   0106 79                  734 	ld	a,c
   0107 FE 21               735 	cp	a,#0x21
   0109 C2 10 01            736 	jp	nz,00143$
   010C 3E 01               737 	ld	a,#0x01
   010E 18 01               738 	jr	00144$
   0110                     739 00143$:
   0110 AF                  740 	xor	a,a
   0111                     741 00144$:
                            742 ;	genIfx
   0111 B7                  743 	or	a,a
   0112 CA 45 01            744 	jp	z,00108$
                            745 ;	text.c 40
                            746 ;	genPlus
                            747 ;	AOP_HL for _i
                            748 ;	AOP_HL for _cushion
                            749 ;	AOP_STK for _print_sloc2_1_0
                            750 ;	Can't optimise plus by inc, falling back to the normal way
   0115 21 28 00            751 	ld	hl,#_i
   0118 7E                  752 	ld	a,(hl)
   0119 21 2A 00            753 	ld	hl,#_cushion
   011C 86                  754 	add	a,(hl)
   011D F8 08               755 	lda	hl,8(sp)
   011F 77                  756 	ld	(hl),a
                            757 ;	genIpush
                            758 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0120 C5                  759 	push	bc
   0121 3E 2B               760 	ld	a,#0x2B
   0123 F5                  761 	push	af
   0124 33                  762 	inc	sp
                            763 ;	genIpush
                            764 ;	AOP_STK for _print_sloc2_1_0
   0125 7E                  765 	ld	a,(hl)
   0126 F5                  766 	push	af
   0127 33                  767 	inc	sp
                            768 ;	genCall
   0128 CD 00 00            769 	call	_set_sprite_tile
   012B E8 02               770 	lda	sp,2(sp)
   012D E1                  771 	pop	hl
   012E 4D                  772 	ld	c,l
                            773 ;	text.c 41
                            774 ;	genIpush
                            775 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   012F C5                  776 	push	bc
                            777 ;	AOP_STK for 
   0130 F8 13               778 	lda	hl,19(sp)
   0132 7E                  779 	ld	a,(hl)
   0133 F5                  780 	push	af
   0134 33                  781 	inc	sp
                            782 ;	genIpush
                            783 ;	AOP_STK for 
   0135 2B                  784 	dec	hl
   0136 7E                  785 	ld	a,(hl)
   0137 F5                  786 	push	af
   0138 33                  787 	inc	sp
                            788 ;	genIpush
                            789 ;	AOP_STK for _print_sloc2_1_0
   0139 F8 0C               790 	lda	hl,12(sp)
   013B 7E                  791 	ld	a,(hl)
   013C F5                  792 	push	af
   013D 33                  793 	inc	sp
                            794 ;	genCall
   013E CD 00 00            795 	call	_move_sprite
   0141 E8 03               796 	lda	sp,3(sp)
   0143 E1                  797 	pop	hl
   0144 4D                  798 	ld	c,l
                            799 ;	genLabel
   0145                     800 00108$:
                            801 ;	text.c 43
                            802 ;	genCmpEq
                            803 ; genCmpEq: left 1, right 1, result 1
   0145 79                  804 	ld	a,c
   0146 FE 22               805 	cp	a,#0x22
   0148 C2 4F 01            806 	jp	nz,00145$
   014B 3E 01               807 	ld	a,#0x01
   014D 18 01               808 	jr	00146$
   014F                     809 00145$:
   014F AF                  810 	xor	a,a
   0150                     811 00146$:
                            812 ;	genIfx
   0150 B7                  813 	or	a,a
   0151 CA 84 01            814 	jp	z,00110$
                            815 ;	text.c 45
                            816 ;	genPlus
                            817 ;	AOP_HL for _i
                            818 ;	AOP_HL for _cushion
                            819 ;	AOP_STK for _print_sloc3_1_0
                            820 ;	Can't optimise plus by inc, falling back to the normal way
   0154 21 28 00            821 	ld	hl,#_i
   0157 7E                  822 	ld	a,(hl)
   0158 21 2A 00            823 	ld	hl,#_cushion
   015B 86                  824 	add	a,(hl)
   015C F8 07               825 	lda	hl,7(sp)
   015E 77                  826 	ld	(hl),a
                            827 ;	genIpush
                            828 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   015F C5                  829 	push	bc
   0160 3E 2C               830 	ld	a,#0x2C
   0162 F5                  831 	push	af
   0163 33                  832 	inc	sp
                            833 ;	genIpush
                            834 ;	AOP_STK for _print_sloc3_1_0
   0164 7E                  835 	ld	a,(hl)
   0165 F5                  836 	push	af
   0166 33                  837 	inc	sp
                            838 ;	genCall
   0167 CD 00 00            839 	call	_set_sprite_tile
   016A E8 02               840 	lda	sp,2(sp)
   016C E1                  841 	pop	hl
   016D 4D                  842 	ld	c,l
                            843 ;	text.c 46
                            844 ;	genIpush
                            845 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   016E C5                  846 	push	bc
                            847 ;	AOP_STK for 
   016F F8 13               848 	lda	hl,19(sp)
   0171 7E                  849 	ld	a,(hl)
   0172 F5                  850 	push	af
   0173 33                  851 	inc	sp
                            852 ;	genIpush
                            853 ;	AOP_STK for 
   0174 2B                  854 	dec	hl
   0175 7E                  855 	ld	a,(hl)
   0176 F5                  856 	push	af
   0177 33                  857 	inc	sp
                            858 ;	genIpush
                            859 ;	AOP_STK for _print_sloc3_1_0
   0178 F8 0B               860 	lda	hl,11(sp)
   017A 7E                  861 	ld	a,(hl)
   017B F5                  862 	push	af
   017C 33                  863 	inc	sp
                            864 ;	genCall
   017D CD 00 00            865 	call	_move_sprite
   0180 E8 03               866 	lda	sp,3(sp)
   0182 E1                  867 	pop	hl
   0183 4D                  868 	ld	c,l
                            869 ;	genLabel
   0184                     870 00110$:
                            871 ;	text.c 48
                            872 ;	genCmpEq
                            873 ; genCmpEq: left 1, right 1, result 1
   0184 79                  874 	ld	a,c
   0185 FE 3F               875 	cp	a,#0x3F
   0187 C2 8E 01            876 	jp	nz,00147$
   018A 3E 01               877 	ld	a,#0x01
   018C 18 01               878 	jr	00148$
   018E                     879 00147$:
   018E AF                  880 	xor	a,a
   018F                     881 00148$:
                            882 ;	genIfx
   018F B7                  883 	or	a,a
   0190 CA C3 01            884 	jp	z,00112$
                            885 ;	text.c 50
                            886 ;	genPlus
                            887 ;	AOP_HL for _i
                            888 ;	AOP_HL for _cushion
                            889 ;	AOP_STK for _print_sloc4_1_0
                            890 ;	Can't optimise plus by inc, falling back to the normal way
   0193 21 28 00            891 	ld	hl,#_i
   0196 7E                  892 	ld	a,(hl)
   0197 21 2A 00            893 	ld	hl,#_cushion
   019A 86                  894 	add	a,(hl)
   019B F8 06               895 	lda	hl,6(sp)
   019D 77                  896 	ld	(hl),a
                            897 ;	genIpush
                            898 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   019E C5                  899 	push	bc
   019F 3E 2D               900 	ld	a,#0x2D
   01A1 F5                  901 	push	af
   01A2 33                  902 	inc	sp
                            903 ;	genIpush
                            904 ;	AOP_STK for _print_sloc4_1_0
   01A3 7E                  905 	ld	a,(hl)
   01A4 F5                  906 	push	af
   01A5 33                  907 	inc	sp
                            908 ;	genCall
   01A6 CD 00 00            909 	call	_set_sprite_tile
   01A9 E8 02               910 	lda	sp,2(sp)
   01AB E1                  911 	pop	hl
   01AC 4D                  912 	ld	c,l
                            913 ;	text.c 51
                            914 ;	genIpush
                            915 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   01AD C5                  916 	push	bc
                            917 ;	AOP_STK for 
   01AE F8 13               918 	lda	hl,19(sp)
   01B0 7E                  919 	ld	a,(hl)
   01B1 F5                  920 	push	af
   01B2 33                  921 	inc	sp
                            922 ;	genIpush
                            923 ;	AOP_STK for 
   01B3 2B                  924 	dec	hl
   01B4 7E                  925 	ld	a,(hl)
   01B5 F5                  926 	push	af
   01B6 33                  927 	inc	sp
                            928 ;	genIpush
                            929 ;	AOP_STK for _print_sloc4_1_0
   01B7 F8 0A               930 	lda	hl,10(sp)
   01B9 7E                  931 	ld	a,(hl)
   01BA F5                  932 	push	af
   01BB 33                  933 	inc	sp
                            934 ;	genCall
   01BC CD 00 00            935 	call	_move_sprite
   01BF E8 03               936 	lda	sp,3(sp)
   01C1 E1                  937 	pop	hl
   01C2 4D                  938 	ld	c,l
                            939 ;	genLabel
   01C3                     940 00112$:
                            941 ;	text.c 53
                            942 ;	genPlus
                            943 ;	AOP_HL for _j
                            944 ;	AOP_STK for _print_sloc5_1_0
                            945 ;	Can't optimise plus by inc, falling back to the normal way
   01C3 11 00 00            946 	ld	de,#_chars
   01C6 21 29 00            947 	ld	hl,#_j
   01C9 6E                  948 	ld	l,(hl)
   01CA 26 00               949 	ld	h,#0x00
   01CC 19                  950 	add	hl,de
   01CD 7D                  951 	ld	a,l
   01CE 54                  952 	ld	d,h
   01CF F8 04               953 	lda	hl,4(sp)
                            954 ;	genPointerGet
                            955 ;	AOP_STK for _print_sloc5_1_0
                            956 ;	AOP_STK for _print_sloc6_1_0
   01D1 22                  957 	ld	(hl+),a
   01D2 72                  958 	ld	(hl),d
   01D3 5F                  959 	ld	e,a
   01D4 1A                  960 	ld	a,(de)
   01D5 2B                  961 	dec	hl
   01D6 2B                  962 	dec	hl
                            963 ;	genCmpEq
                            964 ;	AOP_STK for _print_sloc6_1_0
                            965 ; genCmpEq: left 1, right 1, result 1
   01D7 77                  966 	ld      (hl),a
                            967 ; Removed redundent load
   01D8 B9                  968 	cp	c
   01D9 20 04               969 	jr	nz,00149$
   01DB 3E 01               970 	ld	a,#0x01
   01DD 18 01               971 	jr	00150$
   01DF                     972 00149$:
   01DF AF                  973 	xor	a,a
   01E0                     974 00150$:
                            975 ;	genIfx
   01E0 B7                  976 	or	a,a
   01E1 CA 18 02            977 	jp	z,00117$
                            978 ;	text.c 55
                            979 ;	genPlus
                            980 ;	AOP_HL for _i
                            981 ;	AOP_HL for _cushion
                            982 ;	AOP_STK for _print_sloc7_1_0
                            983 ;	Can't optimise plus by inc, falling back to the normal way
   01E4 21 28 00            984 	ld	hl,#_i
   01E7 7E                  985 	ld	a,(hl)
   01E8 21 2A 00            986 	ld	hl,#_cushion
   01EB 86                  987 	add	a,(hl)
   01EC F8 02               988 	lda	hl,2(sp)
   01EE 77                  989 	ld	(hl),a
                            990 ;	genIpush
                            991 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   01EF C5                  992 	push	bc
                            993 ;	AOP_HL for _j
   01F0 21 29 00            994 	ld	hl,#_j
   01F3 7E                  995 	ld	a,(hl)
   01F4 F5                  996 	push	af
   01F5 33                  997 	inc	sp
                            998 ;	genIpush
                            999 ;	AOP_STK for _print_sloc7_1_0
   01F6 F8 05              1000 	lda	hl,5(sp)
   01F8 7E                 1001 	ld	a,(hl)
   01F9 F5                 1002 	push	af
   01FA 33                 1003 	inc	sp
                           1004 ;	genCall
   01FB CD 00 00           1005 	call	_set_sprite_tile
   01FE E8 02              1006 	lda	sp,2(sp)
   0200 E1                 1007 	pop	hl
   0201 4D                 1008 	ld	c,l
                           1009 ;	text.c 56
                           1010 ;	genIpush
                           1011 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0202 C5                 1012 	push	bc
                           1013 ;	AOP_STK for 
   0203 F8 13              1014 	lda	hl,19(sp)
   0205 7E                 1015 	ld	a,(hl)
   0206 F5                 1016 	push	af
   0207 33                 1017 	inc	sp
                           1018 ;	genIpush
                           1019 ;	AOP_STK for 
   0208 2B                 1020 	dec	hl
   0209 7E                 1021 	ld	a,(hl)
   020A F5                 1022 	push	af
   020B 33                 1023 	inc	sp
                           1024 ;	genIpush
                           1025 ;	AOP_STK for _print_sloc7_1_0
   020C F8 06              1026 	lda	hl,6(sp)
   020E 7E                 1027 	ld	a,(hl)
   020F F5                 1028 	push	af
   0210 33                 1029 	inc	sp
                           1030 ;	genCall
   0211 CD 00 00           1031 	call	_move_sprite
   0214 E8 03              1032 	lda	sp,3(sp)
   0216 E1                 1033 	pop	hl
   0217 4D                 1034 	ld	c,l
                           1035 ;	genLabel
   0218                    1036 00117$:
                           1037 ;	text.c 24
                           1038 ;	genPlus
                           1039 ;	AOP_HL for _j
                           1040 ;	AOP_STK for _print_sloc8_1_0
                           1041 ;	genPlusIncr
                           1042 ;	Can't optimise plus by inc, falling back to the normal way
   0218 21 29 00           1043 	ld	hl,#_j
   021B 7E                 1044 	ld	a,(hl)
   021C C6 01              1045 	add	a,#0x01
   021E F8 01              1046 	lda	hl,1(sp)
                           1047 ;	genAssign
                           1048 ;	AOP_STK for _print_sloc8_1_0
   0220 77                 1049 	ld      (hl),a
   0221 47                 1050 	ld      b,a
                           1051 ;	genAssign
                           1052 ;	AOP_HL for _j
   0222 21 29 00           1053 	ld	hl,#_j
   0225 70                 1054 	ld	(hl),b
                           1055 ;	genGoto
   0226 C3 68 00           1056 	jp	00115$
                           1057 ;	genLabel
   0229                    1058 00118$:
                           1059 ;	text.c 59
                           1060 ;	genPlus
                           1061 ;	AOP_HL for _LETTER_COUNT
                           1062 ;	genPlusIncr
   0229 21 2B 00           1063 	ld	hl,#_LETTER_COUNT
   022C 34                 1064 	inc	(hl)
                           1065 ;	text.c 60
                           1066 ;	genPlus
                           1067 ;	AOP_STK for 
                           1068 ;	genPlusIncr
                           1069 ;	Can't optimise plus by inc, falling back to the normal way
   022D F8 10              1070 	lda	hl,16(sp)
   022F 7E                 1071 	ld	a,(hl)
   0230 C6 08              1072 	add	a,#0x08
   0232 77                 1073 	ld	(hl),a
                           1074 ;	text.c 22
                           1075 ;	genPlus
                           1076 ;	AOP_HL for _i
                           1077 ;	genPlusIncr
   0233 21 28 00           1078 	ld	hl,#_i
   0236 34                 1079 	inc	(hl)
                           1080 ;	genGoto
   0237 C3 4F 00           1081 	jp	00119$
                           1082 ;	genLabel
   023A                    1083 00123$:
                           1084 ;	genEndFunction
   023A E8 0C              1085 	lda	sp,12(sp)
   023C C9                 1086 	ret
   023D                    1087 ___print_end:
                           1088 	.area _CODE
ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 1.

Symbol Table

  1 _LETTER_COUNT                      002B GR
  8 ___bkg_clean_end                   001F R
  8 ___bkg_clean_start                 0000 R
  8 ___hide_sprites_end                0070 R
  8 ___hide_sprites_start              004B R
  0 ___print_end                       023D R
  0 ___print_start                     0000 R
  8 ___sprite_clean_end                004B R
  8 ___sprite_clean_start              001F R
  1 _arrow_x                           002C GR
  1 _arrow_y                           002D GR
  8 _bkg_clean                         0000 GR
    _chain_border                      **** GX
    _chain_border_tiles                **** GX
  1 _chars                             0000 GR
  1 _cushion                           002A GR
    _font                              **** GX
  8 _hide_sprites                      004B GR
  1 _i                                 0028 GR
  1 _j                                 0029 GR
    _move_sprite                       **** GX
  0 _print                             0000 GR
    _set_bkg_data                      **** GX
    _set_bkg_tiles                     **** GX
    _set_sprite_data                   **** GX
    _set_sprite_tile                   **** GX
  8 _sprite_clean                      001F GR

ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 2.

Area Table

   0 _CODE                              size  23D   flags 0
   1 _DATA                              size   2E   flags 0
   2 _OVERLAY                           size    0   flags 0
   3 _ISEG                              size    0   flags 0
   4 _BSEG                              size    0   flags 0
   5 _XSEG                              size    0   flags 0
   6 _GSINIT                            size   8F   flags 0
   7 _GSFINAL                           size    0   flags 0
   8 _HOME                              size   70   flags 0
