                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.3.1 Sat Mar  2 22:53:28 2019
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module lcc13530
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _battle_toggle_down
                             13 	.globl _state
                             14 	.globl _arrow_y
                             15 	.globl _arrow_x
                             16 	.globl _asakawa_pos
                             17 	.globl _hero_pos
                             18 	.globl _blank_screen_tiles
                             19 	.globl _blank_screen
                             20 	.globl _hero_back_idle
                             21 	.globl _asakawa_front_idle
                             22 	.globl _LETTER_COUNT
                             23 	.globl _cushion
                             24 	.globl _j
                             25 	.globl _i
                             26 	.globl _chars
                             27 	.globl _small_chain_border
                             28 	.globl _chain_border_tiles
                             29 	.globl _font
                             30 	.globl _chain_border
                             31 	.globl _print
                             32 	.globl _bkg_clean
                             33 	.globl _sprite_clean
                             34 	.globl _hide_sprites
                             35 	.globl _battle_print
                             36 	.globl _battle_bkg_clean
                             37 	.globl _asakawa_battle_ctrl
                             38 	.globl _battle_nav
                             39 	.globl _run
                             40 	.globl _back
                             41 	.globl _fight_opt
                             42 	.globl _item_opt
                             43 	.globl _battle_menu
                             44 	.globl _show_fighter_stats
                             45 	.globl _battle_toggle_up
                             46 	.globl _asakawa_battle_check
                             47 	.globl _show_sprites
                             48 ;--------------------------------------------------------
                             49 ; special function registers
                             50 ;--------------------------------------------------------
                             51 ;--------------------------------------------------------
                             52 ; special function bits 
                             53 ;--------------------------------------------------------
                             54 ;--------------------------------------------------------
                             55 ; internal ram data
                             56 ;--------------------------------------------------------
                             57 	.area _DATA
   0000                      58 _chain_border::
   0000                      59 	.ds 360
   0168                      60 _font::
   0168                      61 	.ds 736
   0448                      62 _chain_border_tiles::
   0448                      63 	.ds 160
   04E8                      64 _small_chain_border::
   04E8                      65 	.ds 360
   0650                      66 _chars::
   0650                      67 	.ds 40
   0678                      68 _i::
   0678                      69 	.ds 1
   0679                      70 _j::
   0679                      71 	.ds 1
   067A                      72 _cushion::
   067A                      73 	.ds 1
   067B                      74 _LETTER_COUNT::
   067B                      75 	.ds 1
   067C                      76 _asakawa_front_idle::
   067C                      77 	.ds 128
   06FC                      78 _hero_back_idle::
   06FC                      79 	.ds 128
   077C                      80 _blank_screen::
   077C                      81 	.ds 360
   08E4                      82 _blank_screen_tiles::
   08E4                      83 	.ds 64
   0924                      84 _hero_pos::
   0924                      85 	.ds 4
   0928                      86 _asakawa_pos::
   0928                      87 	.ds 4
   092C                      88 _arrow_x::
   092C                      89 	.ds 1
   092D                      90 _arrow_y::
   092D                      91 	.ds 1
   092E                      92 _state::
   092E                      93 	.ds 1
                             94 ;--------------------------------------------------------
                             95 ; overlayable items in internal ram 
                             96 ;--------------------------------------------------------
                             97 	.area _OVERLAY
                             98 ;--------------------------------------------------------
                             99 ; indirectly addressable internal ram data
                            100 ;--------------------------------------------------------
                            101 	.area _ISEG
                            102 ;--------------------------------------------------------
                            103 ; bit data
                            104 ;--------------------------------------------------------
                            105 	.area _BSEG
                            106 ;--------------------------------------------------------
                            107 ; external ram data
                            108 ;--------------------------------------------------------
                            109 	.area _XSEG
                            110 ;--------------------------------------------------------
                            111 ; global & static initialisations
                            112 ;--------------------------------------------------------
                            113 	.area _GSINIT
                            114 	.area _GSFINAL
                            115 	.area _GSINIT
                            116 ;	asakawa_battle.c 25
                            117 ;	asakawa_battle.c 274
                            118 ;	genArrayInit
                            119 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0000 21 00 00            120 	ld	hl,#_chain_border
   0003 CD 00 00            121 	call	__initrleblock
   0006 01                  122 	.db	1
   0007 04                  123 	.db	0x04
   0008 EE 06               124 	.db	-18,0x06
   000A 02                  125 	.db	2
   000B 02 01               126 	.db	0x02, 0x01
   000D EE 00               127 	.db	-18,0x00
   000F 02                  128 	.db	2
   0010 01 01               129 	.db	0x01, 0x01
   0012 EE 00               130 	.db	-18,0x00
   0014 02                  131 	.db	2
   0015 01 01               132 	.db	0x01, 0x01
   0017 EE 00               133 	.db	-18,0x00
   0019 02                  134 	.db	2
   001A 01 01               135 	.db	0x01, 0x01
   001C EE 00               136 	.db	-18,0x00
   001E 02                  137 	.db	2
   001F 01 01               138 	.db	0x01, 0x01
   0021 EE 00               139 	.db	-18,0x00
   0023 02                  140 	.db	2
   0024 01 01               141 	.db	0x01, 0x01
   0026 EE 00               142 	.db	-18,0x00
   0028 02                  143 	.db	2
   0029 01 01               144 	.db	0x01, 0x01
   002B EE 00               145 	.db	-18,0x00
   002D 02                  146 	.db	2
   002E 01 01               147 	.db	0x01, 0x01
   0030 EE 00               148 	.db	-18,0x00
   0032 02                  149 	.db	2
   0033 01 01               150 	.db	0x01, 0x01
   0035 EE 00               151 	.db	-18,0x00
   0037 02                  152 	.db	2
   0038 01 01               153 	.db	0x01, 0x01
   003A EE 00               154 	.db	-18,0x00
   003C 02                  155 	.db	2
   003D 01 01               156 	.db	0x01, 0x01
   003F EE 00               157 	.db	-18,0x00
   0041 02                  158 	.db	2
   0042 01 01               159 	.db	0x01, 0x01
   0044 EE 00               160 	.db	-18,0x00
   0046 02                  161 	.db	2
   0047 01 01               162 	.db	0x01, 0x01
   0049 EE 00               163 	.db	-18,0x00
   004B 02                  164 	.db	2
   004C 01 01               165 	.db	0x01, 0x01
   004E EE 00               166 	.db	-18,0x00
   0050 02                  167 	.db	2
   0051 01 01               168 	.db	0x01, 0x01
   0053 F1 00               169 	.db	-15,0x00
   0055 05                  170 	.db	5
   0056 07 08 09 01 01      171 	.db	0x07, 0x08, 0x09, 0x01, 0x01
   005B EE 00               172 	.db	-18,0x00
   005D 02                  173 	.db	2
   005E 01 05               174 	.db	0x01, 0x05
   0060 EE 06               175 	.db	-18,0x06
   0062 01                  176 	.db	1
   0063 03                  177 	.db	0x03
   0064 00                  178 	.db	0
                            179 ;	asakawa_battle.c 26
                            180 ;	asakawa_battle.c 274
                            181 ;	genArrayInit
                            182 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0065 21 68 01            183 	ld	hl,#_font
   0068 CD 00 00            184 	call	__initrleblock
   006B 0A                  185 	.db	10
   006C 1C 1C 22 22 43 43   186 	.db	0x1C, 0x1C, 0x22, 0x22, 0x43, 0x43, 0x43, 0x43
        43 43
   0074 7F 7F               187 	.db	0x7F, 0x7F
   0076 FA 43               188 	.db	-6,0x43
   0078 08                  189 	.db	8
   0079 7E 7E 63 63 63 63   190 	.db	0x7E, 0x7E, 0x63, 0x63, 0x63, 0x63, 0x7E, 0x7E
        7E 7E
   0081 FA 63               191 	.db	-6,0x63
   0083 06                  192 	.db	6
   0084 7E 7E 3E 3E 63 63   193 	.db	0x7E, 0x7E, 0x3E, 0x3E, 0x63, 0x63
   008A F8 60               194 	.db	-8,0x60
   008C 06                  195 	.db	6
   008D 63 63 3E 3E 7E 7E   196 	.db	0x63, 0x63, 0x3E, 0x3E, 0x7E, 0x7E
   0093 F4 47               197 	.db	-12,0x47
   0095 0A                  198 	.db	10
   0096 7E 7E 7F 7F 60 60   199 	.db	0x7E, 0x7E, 0x7F, 0x7F, 0x60, 0x60, 0x60, 0x60
        60 60
   009E 7E 7E               200 	.db	0x7E, 0x7E
   00A0 FA 60               201 	.db	-6,0x60
   00A2 0A                  202 	.db	10
   00A3 7F 7F 7F 7F 60 60   203 	.db	0x7F, 0x7F, 0x7F, 0x7F, 0x60, 0x60, 0x60, 0x60
        60 60
   00AB 7E 7E               204 	.db	0x7E, 0x7E
   00AD F8 60               205 	.db	-8,0x60
   00AF 10                  206 	.db	16
   00B0 3E 3E 63 63 60 60   207 	.db	0x3E, 0x3E, 0x63, 0x63, 0x60, 0x60, 0x60, 0x60
        60 60
   00B8 67 67 63 63 63 63   208 	.db	0x67, 0x67, 0x63, 0x63, 0x63, 0x63, 0x3F, 0x3F
        3F 3F
   00C0 FA 43               209 	.db	-6,0x43
   00C2 02                  210 	.db	2
   00C3 7F 7F               211 	.db	0x7F, 0x7F
   00C5 F8 43               212 	.db	-8,0x43
   00C7 02                  213 	.db	2
   00C8 3C 3C               214 	.db	0x3C, 0x3C
   00CA F4 18               215 	.db	-12,0x18
   00CC 04                  216 	.db	4
   00CD 3C 3C 0F 0F         217 	.db	0x3C, 0x3C, 0x0F, 0x0F
   00D1 F8 06               218 	.db	-8,0x06
   00D3 16                  219 	.db	22
   00D4 36 36 36 36 1C 1C   220 	.db	0x36, 0x36, 0x36, 0x36, 0x1C, 0x1C, 0x66, 0x66
        66 66
   00DC 6C 6C 78 78 70 70   221 	.db	0x6C, 0x6C, 0x78, 0x78, 0x70, 0x70, 0x78, 0x78
        78 78
   00E4 6C 6C 66 66 63 63   222 	.db	0x6C, 0x6C, 0x66, 0x66, 0x63, 0x63
   00EA F2 60               223 	.db	-14,0x60
   00EC 0A                  224 	.db	10
   00ED 7F 7F 63 63 77 77   225 	.db	0x7F, 0x7F, 0x63, 0x63, 0x77, 0x77, 0x7F, 0x7F
        7F 7F
   00F5 6B 6B               226 	.db	0x6B, 0x6B
   00F7 F8 63               227 	.db	-8,0x63
   00F9 12                  228 	.db	18
   00FA 43 43 63 63 73 73   229 	.db	0x43, 0x43, 0x63, 0x63, 0x73, 0x73, 0x7B, 0x7B
        7B 7B
   0102 5F 5F 4F 4F 47 47   230 	.db	0x5F, 0x5F, 0x4F, 0x4F, 0x47, 0x47, 0x43, 0x43
        43 43
   010A 3E 3E               231 	.db	0x3E, 0x3E
   010C F4 63               232 	.db	-12,0x63
   010E 04                  233 	.db	4
   010F 3E 3E 7E 7E         234 	.db	0x3E, 0x3E, 0x7E, 0x7E
   0113 FA 63               235 	.db	-6,0x63
   0115 02                  236 	.db	2
   0116 7E 7E               237 	.db	0x7E, 0x7E
   0118 FA 60               238 	.db	-6,0x60
   011A 02                  239 	.db	2
   011B 3E 3E               240 	.db	0x3E, 0x3E
   011D F8 61               241 	.db	-8,0x61
   011F 08                  242 	.db	8
   0120 65 65 62 62 3D 3D   243 	.db	0x65, 0x65, 0x62, 0x62, 0x3D, 0x3D, 0x7E, 0x7E
        7E 7E
   0128 FA 63               244 	.db	-6,0x63
   012A 1A                  245 	.db	26
   012B 7E 7E 64 64 66 66   246 	.db	0x7E, 0x7E, 0x64, 0x64, 0x66, 0x66, 0x63, 0x63
        63 63
   0133 3E 3E 60 60 60 60   247 	.db	0x3E, 0x3E, 0x60, 0x60, 0x60, 0x60, 0x3E, 0x3E
        3E 3E
   013B 07 07 07 07 67 67   248 	.db	0x07, 0x07, 0x07, 0x07, 0x67, 0x67, 0x3E, 0x3E
        3E 3E
   0143 7E 7E               249 	.db	0x7E, 0x7E
   0145 F2 18               250 	.db	-14,0x18
   0147 F4 43               251 	.db	-12,0x43
   0149 04                  252 	.db	4
   014A 47 47 3E 3E         253 	.db	0x47, 0x47, 0x3E, 0x3E
   014E F4 43               254 	.db	-12,0x43
   0150 04                  255 	.db	4
   0151 26 26 1C 1C         256 	.db	0x26, 0x26, 0x1C, 0x1C
   0155 F8 63               257 	.db	-8,0x63
   0157 1E                  258 	.db	30
   0158 6B 6B 7F 7F 77 77   259 	.db	0x6B, 0x6B, 0x7F, 0x7F, 0x77, 0x77, 0x63, 0x63
        63 63
   0160 83 83 46 46 2C 2C   260 	.db	0x83, 0x83, 0x46, 0x46, 0x2C, 0x2C, 0x18, 0x18
        18 18
   0168 38 38 64 64 C2 C2   261 	.db	0x38, 0x38, 0x64, 0x64, 0xC2, 0xC2, 0x81, 0x81
        81 81
   0170 66 66 66 66 3C 3C   262 	.db	0x66, 0x66, 0x66, 0x66, 0x3C, 0x3C
   0176 F6 18               263 	.db	-10,0x18
   0178 24                  264 	.db	36
   0179 7F 7F 03 03 07 07   265 	.db	0x7F, 0x7F, 0x03, 0x03, 0x07, 0x07, 0x0E, 0x0E
        0E 0E
   0181 1C 1C 38 38 7F 7F   266 	.db	0x1C, 0x1C, 0x38, 0x38, 0x7F, 0x7F, 0x7F, 0x7F
        7F 7F
   0189 3C 3C 66 66 66 66   267 	.db	0x3C, 0x3C, 0x66, 0x66, 0x66, 0x66, 0x6E, 0x6E
        6E 6E
   0191 76 76 66 66 66 66   268 	.db	0x76, 0x76, 0x66, 0x66, 0x66, 0x66, 0x3C, 0x3C
        3C 3C
   0199 18 18 38 38         269 	.db	0x18, 0x18, 0x38, 0x38
   019D F6 18               270 	.db	-10,0x18
   019F 26                  271 	.db	38
   01A0 3C 3C 3C 3C 4E 4E   272 	.db	0x3C, 0x3C, 0x3C, 0x3C, 0x4E, 0x4E, 0x0E, 0x0E
        0E 0E
   01A8 0C 0C 38 38 70 70   273 	.db	0x0C, 0x0C, 0x38, 0x38, 0x70, 0x70, 0x7E, 0x7E
        7E 7E
   01B0 7E 7E 7C 7C 0E 0E   274 	.db	0x7E, 0x7E, 0x7C, 0x7C, 0x0E, 0x0E, 0x0E, 0x0E
        0E 0E
   01B8 3C 3C 0C 0C 0E 0E   275 	.db	0x3C, 0x3C, 0x0C, 0x0C, 0x0E, 0x0E, 0x0E, 0x0E
        0E 0E
   01C0 7C 7C 3C 3C 6C 6C   276 	.db	0x7C, 0x7C, 0x3C, 0x3C, 0x6C, 0x6C
   01C6 FA 4C               277 	.db	-6,0x4C
   01C8 1E                  278 	.db	30
   01C9 7E 7E 0C 0C 0C 0C   279 	.db	0x7E, 0x7E, 0x0C, 0x0C, 0x0C, 0x0C, 0x7C, 0x7C
        7C 7C
   01D1 60 60 60 60 7C 7C   280 	.db	0x60, 0x60, 0x60, 0x60, 0x7C, 0x7C, 0x0E, 0x0E
        0E 0E
   01D9 0E 0E 4E 4E 3C 3C   281 	.db	0x0E, 0x0E, 0x4E, 0x4E, 0x3C, 0x3C, 0x3C, 0x3C
        3C 3C
   01E1 60 60 60 60 7C 7C   282 	.db	0x60, 0x60, 0x60, 0x60, 0x7C, 0x7C
   01E7 FA 66               283 	.db	-6,0x66
   01E9 0E                  284 	.db	14
   01EA 3C 3C 7E 7E 06 06   285 	.db	0x3C, 0x3C, 0x7E, 0x7E, 0x06, 0x06, 0x06, 0x06
        06 06
   01F2 0C 0C 0C 0C 1C 1C   286 	.db	0x0C, 0x0C, 0x0C, 0x0C, 0x1C, 0x1C
   01F8 FA 3C               287 	.db	-6,0x3C
   01FA 06                  288 	.db	6
   01FB 4E 4E 4E 4E 3C 3C   289 	.db	0x4E, 0x4E, 0x4E, 0x4E, 0x3C, 0x3C
   0201 FA 4E               290 	.db	-6,0x4E
   0203 0A                  291 	.db	10
   0204 3C 3C 3C 3C 4E 4E   292 	.db	0x3C, 0x3C, 0x3C, 0x3C, 0x4E, 0x4E, 0x4E, 0x4E
        4E 4E
   020C 3E 3E               293 	.db	0x3E, 0x3E
   020E FA 0E               294 	.db	-6,0x0E
   0210 02                  295 	.db	2
   0211 38 38               296 	.db	0x38, 0x38
   0213 F4 00               297 	.db	-12,0x00
   0215 04                  298 	.db	4
   0216 18 18 18 18         299 	.db	0x18, 0x18, 0x18, 0x18
   021A F8 00               300 	.db	-8,0x00
   021C 28                  301 	.db	40
   021D 18 18 18 18 08 08   302 	.db	0x18, 0x18, 0x18, 0x18, 0x08, 0x08, 0x10, 0x10
        10 10
   0225 00 00 18 18 18 18   303 	.db	0x00, 0x00, 0x18, 0x18, 0x18, 0x18, 0x00, 0x00
        00 00
   022D 18 18 18 18 08 08   304 	.db	0x18, 0x18, 0x18, 0x18, 0x08, 0x08, 0x10, 0x10
        10 10
   0235 01 01 03 03 06 06   305 	.db	0x01, 0x01, 0x03, 0x03, 0x06, 0x06, 0x0C, 0x0C
        0C 0C
   023D 18 18 30 30 60 60   306 	.db	0x18, 0x18, 0x30, 0x30, 0x60, 0x60, 0x40, 0x40
        40 40
   0245 EE 00               307 	.db	-18,0x00
   0247 14                  308 	.db	20
   0248 C0 C0 F0 F0 FC FC   309 	.db	0xC0, 0xC0, 0xF0, 0xF0, 0xFC, 0xFC, 0xFC, 0xFC
        FC FC
   0250 F0 F0 C0 C0 00 00   310 	.db	0xF0, 0xF0, 0xC0, 0xC0, 0x00, 0x00, 0x0C, 0x0C
        0C 0C
   0258 0C 0C 04 04         311 	.db	0x0C, 0x0C, 0x04, 0x04
   025C F4 00               312 	.db	-12,0x00
   025E F6 18               313 	.db	-10,0x18
   0260 0A                  314 	.db	10
   0261 00 00 18 18 36 36   315 	.db	0x00, 0x00, 0x18, 0x18, 0x36, 0x36, 0x36, 0x36
        36 36
   0269 12 12               316 	.db	0x12, 0x12
   026B F6 00               317 	.db	-10,0x00
   026D 10                  318 	.db	16
   026E 3C 3C 46 46 06 06   319 	.db	0x3C, 0x3C, 0x46, 0x46, 0x06, 0x06, 0x06, 0x06
        06 06
   0276 1C 1C 18 18 00 00   320 	.db	0x1C, 0x1C, 0x18, 0x18, 0x00, 0x00, 0x18, 0x18
        18 18
   027E 00                  321 	.db	0
                            322 ;	asakawa_battle.c 26
                            323 ;	asakawa_battle.c 274
                            324 ;	genArrayInit
                            325 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   027F 21 48 04            326 	ld	hl,#_chain_border_tiles
   0282 CD 00 00            327 	call	__initrleblock
   0285 F0 00               328 	.db	-16,0x00
   0287 7F                  329 	.db	127
   0288 18 18 7E 7E DB DB   330 	.db	0x18, 0x18, 0x7E, 0x7E, 0xDB, 0xDB, 0xC3, 0xC3
        C3 C3
   0290 C3 C3 DB DB 7E 7E   331 	.db	0xC3, 0xC3, 0xDB, 0xDB, 0x7E, 0x7E, 0x18, 0x18
        18 18
   0298 3C 3C 7E 7E 43 43   332 	.db	0x3C, 0x3C, 0x7E, 0x7E, 0x43, 0x43, 0xE3, 0xE3
        E3 E3
   02A0 E3 E3 5B 5B 7E 7E   333 	.db	0xE3, 0xE3, 0x5B, 0x5B, 0x7E, 0x7E, 0x18, 0x18
        18 18
   02A8 18 18 7E 7E 5B 5B   334 	.db	0x18, 0x18, 0x7E, 0x7E, 0x5B, 0x5B, 0xE3, 0xE3
        E3 E3
   02B0 E3 E3 43 43 7E 7E   335 	.db	0xE3, 0xE3, 0x43, 0x43, 0x7E, 0x7E, 0x3C, 0x3C
        3C 3C
   02B8 3C 3C 7E 7E C2 C2   336 	.db	0x3C, 0x3C, 0x7E, 0x7E, 0xC2, 0xC2, 0xC7, 0xC7
        C7 C7
   02C0 C7 C7 DA DA 7E 7E   337 	.db	0xC7, 0xC7, 0xDA, 0xDA, 0x7E, 0x7E, 0x18, 0x18
        18 18
   02C8 18 18 7E 7E DA DA   338 	.db	0x18, 0x18, 0x7E, 0x7E, 0xDA, 0xDA, 0xC7, 0xC7
        C7 C7
   02D0 C7 C7 C2 C2 7E 7E   339 	.db	0xC7, 0xC7, 0xC2, 0xC2, 0x7E, 0x7E, 0x3C, 0x3C
        3C 3C
   02D8 3C 3C 7E 7E 42 42   340 	.db	0x3C, 0x3C, 0x7E, 0x7E, 0x42, 0x42, 0xE7, 0xE7
        E7 E7
   02E0 E7 E7 42 42 7E 7E   341 	.db	0xE7, 0xE7, 0x42, 0x42, 0x7E, 0x7E, 0x3C, 0x3C
        3C 3C
   02E8 7E 7E 81 81 99 99   342 	.db	0x7E, 0x7E, 0x81, 0x81, 0x99, 0x99, 0xA5, 0xA5
        A5 A5
   02F0 BD BD A5 A5 81 81   343 	.db	0xBD, 0xBD, 0xA5, 0xA5, 0x81, 0x81, 0x7E, 0x7E
        7E 7E
   02F8 04 04 06 06 7D 7D   344 	.db	0x04, 0x04, 0x06, 0x06, 0x7D, 0x7D, 0x40, 0x40
        40 40
   0300 40 40 7D 7D 06 06   345 	.db	0x40, 0x40, 0x7D, 0x7D, 0x06, 0x06, 0x04
        04
   0307 01                  346 	.db	1
   0308 04                  347 	.db	0x04
   0309 FA 00               348 	.db	-6,0x00
   030B 04                  349 	.db	4
   030C 80 80 80 80         350 	.db	0x80, 0x80, 0x80, 0x80
   0310 FA 00               351 	.db	-6,0x00
   0312 00                  352 	.db	0
                            353 ;	asakawa_battle.c 25
                            354 ;	asakawa_battle.c 274
                            355 ;	genArrayInit
                            356 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0313 21 E8 04            357 	ld	hl,#_small_chain_border
   0316 CD 00 00            358 	call	__initrleblock
   0319 01                  359 	.db	1
   031A 04                  360 	.db	0x04
   031B F8 06               361 	.db	-8,0x06
   031D 01                  362 	.db	1
   031E 02                  363 	.db	0x02
   031F F7 06               364 	.db	-9,0x06
   0321 02                  365 	.db	2
   0322 02 01               366 	.db	0x02, 0x01
   0324 F8 00               367 	.db	-8,0x00
   0326 01                  368 	.db	1
   0327 01                  369 	.db	0x01
   0328 F7 00               370 	.db	-9,0x00
   032A 02                  371 	.db	2
   032B 01 01               372 	.db	0x01, 0x01
   032D F8 00               373 	.db	-8,0x00
   032F 01                  374 	.db	1
   0330 01                  375 	.db	0x01
   0331 F7 00               376 	.db	-9,0x00
   0333 02                  377 	.db	2
   0334 01 01               378 	.db	0x01, 0x01
   0336 F8 00               379 	.db	-8,0x00
   0338 01                  380 	.db	1
   0339 01                  381 	.db	0x01
   033A F7 00               382 	.db	-9,0x00
   033C 02                  383 	.db	2
   033D 01 01               384 	.db	0x01, 0x01
   033F F8 00               385 	.db	-8,0x00
   0341 01                  386 	.db	1
   0342 01                  387 	.db	0x01
   0343 F7 00               388 	.db	-9,0x00
   0345 02                  389 	.db	2
   0346 01 01               390 	.db	0x01, 0x01
   0348 F8 00               391 	.db	-8,0x00
   034A 01                  392 	.db	1
   034B 01                  393 	.db	0x01
   034C F7 00               394 	.db	-9,0x00
   034E 02                  395 	.db	2
   034F 01 01               396 	.db	0x01, 0x01
   0351 F8 00               397 	.db	-8,0x00
   0353 01                  398 	.db	1
   0354 01                  399 	.db	0x01
   0355 F7 00               400 	.db	-9,0x00
   0357 02                  401 	.db	2
   0358 01 01               402 	.db	0x01, 0x01
   035A F8 00               403 	.db	-8,0x00
   035C 01                  404 	.db	1
   035D 01                  405 	.db	0x01
   035E F7 00               406 	.db	-9,0x00
   0360 02                  407 	.db	2
   0361 01 01               408 	.db	0x01, 0x01
   0363 F8 00               409 	.db	-8,0x00
   0365 01                  410 	.db	1
   0366 01                  411 	.db	0x01
   0367 F7 00               412 	.db	-9,0x00
   0369 02                  413 	.db	2
   036A 01 01               414 	.db	0x01, 0x01
   036C F8 00               415 	.db	-8,0x00
   036E 01                  416 	.db	1
   036F 01                  417 	.db	0x01
   0370 F7 00               418 	.db	-9,0x00
   0372 02                  419 	.db	2
   0373 01 01               420 	.db	0x01, 0x01
   0375 F8 00               421 	.db	-8,0x00
   0377 01                  422 	.db	1
   0378 01                  423 	.db	0x01
   0379 F7 00               424 	.db	-9,0x00
   037B 02                  425 	.db	2
   037C 01 01               426 	.db	0x01, 0x01
   037E F8 00               427 	.db	-8,0x00
   0380 01                  428 	.db	1
   0381 01                  429 	.db	0x01
   0382 F7 00               430 	.db	-9,0x00
   0384 02                  431 	.db	2
   0385 01 01               432 	.db	0x01, 0x01
   0387 F8 00               433 	.db	-8,0x00
   0389 01                  434 	.db	1
   038A 01                  435 	.db	0x01
   038B F7 00               436 	.db	-9,0x00
   038D 02                  437 	.db	2
   038E 01 01               438 	.db	0x01, 0x01
   0390 F8 00               439 	.db	-8,0x00
   0392 01                  440 	.db	1
   0393 01                  441 	.db	0x01
   0394 F7 00               442 	.db	-9,0x00
   0396 02                  443 	.db	2
   0397 01 01               444 	.db	0x01, 0x01
   0399 F8 00               445 	.db	-8,0x00
   039B 01                  446 	.db	1
   039C 01                  447 	.db	0x01
   039D F7 00               448 	.db	-9,0x00
   039F 02                  449 	.db	2
   03A0 01 01               450 	.db	0x01, 0x01
   03A2 F8 00               451 	.db	-8,0x00
   03A4 01                  452 	.db	1
   03A5 01                  453 	.db	0x01
   03A6 F7 00               454 	.db	-9,0x00
   03A8 02                  455 	.db	2
   03A9 01 01               456 	.db	0x01, 0x01
   03AB F8 00               457 	.db	-8,0x00
   03AD 01                  458 	.db	1
   03AE 01                  459 	.db	0x01
   03AF F7 00               460 	.db	-9,0x00
   03B1 02                  461 	.db	2
   03B2 01 05               462 	.db	0x01, 0x05
   03B4 F8 06               463 	.db	-8,0x06
   03B6 01                  464 	.db	1
   03B7 03                  465 	.db	0x03
   03B8 F7 06               466 	.db	-9,0x06
   03BA 01                  467 	.db	1
   03BB 03                  468 	.db	0x03
   03BC 00                  469 	.db	0
                            470 ;	asakawa_battle.c 274
                            471 ;	genAssign (pointer)
   03BD 11 50 06            472 	ld	de,#_chars
   03C0 3E 61               473 	ld	a,#0x61
   03C2 12                  474 	ld	(de),a
                            475 ;	genPlus
                            476 ;	genPlusIncr
   03C3 21 51 06            477 	ld	hl,#_chars + 1
                            478 ;	genAssign (pointer)
   03C6 36 62               479 	ld	(hl),#0x62
                            480 ;	genPlus
                            481 ;	genPlusIncr
   03C8 23                  482 	inc	hl
                            483 ;	genAssign (pointer)
   03C9 36 63               484 	ld	(hl),#0x63
                            485 ;	genPlus
                            486 ;	genPlusIncr
   03CB 23                  487 	inc	hl
                            488 ;	genAssign (pointer)
   03CC 36 64               489 	ld	(hl),#0x64
                            490 ;	genPlus
                            491 ;	genPlusIncr
   03CE 23                  492 	inc	hl
                            493 ;	genAssign (pointer)
   03CF 36 65               494 	ld	(hl),#0x65
                            495 ;	genPlus
                            496 ;	genPlusIncr
   03D1 23                  497 	inc	hl
                            498 ;	genAssign (pointer)
   03D2 36 66               499 	ld	(hl),#0x66
                            500 ;	genPlus
                            501 ;	genPlusIncr
   03D4 23                  502 	inc	hl
                            503 ;	genAssign (pointer)
   03D5 36 67               504 	ld	(hl),#0x67
                            505 ;	genPlus
                            506 ;	genPlusIncr
   03D7 23                  507 	inc	hl
                            508 ;	genAssign (pointer)
   03D8 36 68               509 	ld	(hl),#0x68
                            510 ;	genPlus
                            511 ;	genPlusIncr
   03DA 23                  512 	inc	hl
                            513 ;	genAssign (pointer)
   03DB 36 69               514 	ld	(hl),#0x69
                            515 ;	genPlus
                            516 ;	genPlusIncr
   03DD 23                  517 	inc	hl
                            518 ;	genAssign (pointer)
   03DE 36 6A               519 	ld	(hl),#0x6A
                            520 ;	genPlus
                            521 ;	genPlusIncr
   03E0 23                  522 	inc	hl
                            523 ;	genAssign (pointer)
   03E1 36 6B               524 	ld	(hl),#0x6B
                            525 ;	genPlus
                            526 ;	genPlusIncr
   03E3 23                  527 	inc	hl
                            528 ;	genAssign (pointer)
   03E4 36 6C               529 	ld	(hl),#0x6C
                            530 ;	genPlus
                            531 ;	genPlusIncr
   03E6 23                  532 	inc	hl
                            533 ;	genAssign (pointer)
   03E7 36 6D               534 	ld	(hl),#0x6D
                            535 ;	genPlus
                            536 ;	genPlusIncr
   03E9 23                  537 	inc	hl
                            538 ;	genAssign (pointer)
   03EA 36 6E               539 	ld	(hl),#0x6E
                            540 ;	genPlus
                            541 ;	genPlusIncr
   03EC 23                  542 	inc	hl
                            543 ;	genAssign (pointer)
   03ED 36 6F               544 	ld	(hl),#0x6F
                            545 ;	genPlus
                            546 ;	genPlusIncr
   03EF 23                  547 	inc	hl
                            548 ;	genAssign (pointer)
   03F0 36 70               549 	ld	(hl),#0x70
                            550 ;	genPlus
                            551 ;	genPlusIncr
   03F2 23                  552 	inc	hl
                            553 ;	genAssign (pointer)
   03F3 36 71               554 	ld	(hl),#0x71
                            555 ;	genPlus
                            556 ;	genPlusIncr
   03F5 23                  557 	inc	hl
                            558 ;	genAssign (pointer)
   03F6 36 72               559 	ld	(hl),#0x72
                            560 ;	genPlus
                            561 ;	genPlusIncr
   03F8 23                  562 	inc	hl
                            563 ;	genAssign (pointer)
   03F9 36 73               564 	ld	(hl),#0x73
                            565 ;	genPlus
                            566 ;	genPlusIncr
   03FB 23                  567 	inc	hl
                            568 ;	genAssign (pointer)
   03FC 36 74               569 	ld	(hl),#0x74
                            570 ;	genPlus
                            571 ;	genPlusIncr
   03FE 23                  572 	inc	hl
                            573 ;	genAssign (pointer)
   03FF 36 75               574 	ld	(hl),#0x75
                            575 ;	genPlus
                            576 ;	genPlusIncr
   0401 23                  577 	inc	hl
                            578 ;	genAssign (pointer)
   0402 36 76               579 	ld	(hl),#0x76
                            580 ;	genPlus
                            581 ;	genPlusIncr
   0404 23                  582 	inc	hl
                            583 ;	genAssign (pointer)
   0405 36 77               584 	ld	(hl),#0x77
                            585 ;	genPlus
                            586 ;	genPlusIncr
   0407 23                  587 	inc	hl
                            588 ;	genAssign (pointer)
   0408 36 78               589 	ld	(hl),#0x78
                            590 ;	genPlus
                            591 ;	genPlusIncr
   040A 23                  592 	inc	hl
                            593 ;	genAssign (pointer)
   040B 36 79               594 	ld	(hl),#0x79
                            595 ;	genPlus
                            596 ;	genPlusIncr
   040D 23                  597 	inc	hl
                            598 ;	genAssign (pointer)
   040E 36 7A               599 	ld	(hl),#0x7A
                            600 ;	genPlus
                            601 ;	genPlusIncr
   0410 23                  602 	inc	hl
                            603 ;	genAssign (pointer)
   0411 36 30               604 	ld	(hl),#0x30
                            605 ;	genPlus
                            606 ;	genPlusIncr
   0413 23                  607 	inc	hl
                            608 ;	genAssign (pointer)
   0414 36 31               609 	ld	(hl),#0x31
                            610 ;	genPlus
                            611 ;	genPlusIncr
   0416 23                  612 	inc	hl
                            613 ;	genAssign (pointer)
   0417 36 32               614 	ld	(hl),#0x32
                            615 ;	genPlus
                            616 ;	genPlusIncr
   0419 23                  617 	inc	hl
                            618 ;	genAssign (pointer)
   041A 36 33               619 	ld	(hl),#0x33
                            620 ;	genPlus
                            621 ;	genPlusIncr
   041C 23                  622 	inc	hl
                            623 ;	genAssign (pointer)
   041D 36 34               624 	ld	(hl),#0x34
                            625 ;	genPlus
                            626 ;	genPlusIncr
   041F 23                  627 	inc	hl
                            628 ;	genAssign (pointer)
   0420 36 35               629 	ld	(hl),#0x35
                            630 ;	genPlus
                            631 ;	genPlusIncr
   0422 23                  632 	inc	hl
                            633 ;	genAssign (pointer)
   0423 36 36               634 	ld	(hl),#0x36
                            635 ;	genPlus
                            636 ;	genPlusIncr
   0425 23                  637 	inc	hl
                            638 ;	genAssign (pointer)
   0426 36 37               639 	ld	(hl),#0x37
                            640 ;	genPlus
                            641 ;	genPlusIncr
   0428 23                  642 	inc	hl
                            643 ;	genAssign (pointer)
   0429 36 38               644 	ld	(hl),#0x38
                            645 ;	genPlus
                            646 ;	genPlusIncr
   042B 23                  647 	inc	hl
                            648 ;	genAssign (pointer)
   042C 36 39               649 	ld	(hl),#0x39
                            650 ;	genPlus
                            651 ;	genPlusIncr
   042E 23                  652 	inc	hl
                            653 ;	genAssign (pointer)
   042F 36 2E               654 	ld	(hl),#0x2E
                            655 ;	genPlus
                            656 ;	genPlusIncr
   0431 23                  657 	inc	hl
                            658 ;	genAssign (pointer)
   0432 36 2C               659 	ld	(hl),#0x2C
                            660 ;	genPlus
                            661 ;	genPlusIncr
   0434 23                  662 	inc	hl
                            663 ;	genAssign (pointer)
   0435 36 3B               664 	ld	(hl),#0x3B
                            665 ;	genPlus
                            666 ;	genPlusIncr
   0437 23                  667 	inc	hl
                            668 ;	genAssign (pointer)
   0438 36 2F               669 	ld	(hl),#0x2F
                            670 ;	genPlus
                            671 ;	genPlusIncr
   043A 23                  672 	inc	hl
                            673 ;	genAssign (pointer)
   043B 36 00               674 	ld	(hl),#0x00
                            675 ;	asakawa_battle.c 46
                            676 ;	genAssign
                            677 ;	AOP_HL for _LETTER_COUNT
   043D 21 7B 06            678 	ld	hl,#_LETTER_COUNT
   0440 36 00               679 	ld	(hl),#0x00
                            680 ;	asakawa_battle.c 26
                            681 ;	asakawa_battle.c 274
                            682 ;	genArrayInit
                            683 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0442 21 7C 06            684 	ld	hl,#_asakawa_front_idle
   0445 CD 00 00            685 	call	__initrleblock
   0448 7F                  686 	.db	127
   0449 0F 0F 1F 1F 1F 11   687 	.db	0x0F, 0x0F, 0x1F, 0x1F, 0x1F, 0x11, 0x1F, 0x04
        1F 04
   0451 1F 00 0F 00 0F 00   688 	.db	0x1F, 0x00, 0x0F, 0x00, 0x0F, 0x00, 0x03, 0x03
        03 03
   0459 01 1D 00 1F 00 1F   689 	.db	0x01, 0x1D, 0x00, 0x1F, 0x00, 0x1F, 0x00, 0x1F
        00 1F
   0461 30 0F 30 0F 00 0F   690 	.db	0x30, 0x0F, 0x30, 0x0F, 0x00, 0x0F, 0x1F, 0x1F
        1F 1F
   0469 F0 F1 F8 FB F8 8A   691 	.db	0xF0, 0xF1, 0xF8, 0xFB, 0xF8, 0x8A, 0xF8, 0x21
        F8 21
   0471 F8 01 02 FC F0 00   692 	.db	0xF8, 0x01, 0x02, 0xFC, 0xF0, 0x00, 0xC0, 0xC0
        C0 C0
   0479 80 B8 00 F8 00 F8   693 	.db	0x80, 0xB8, 0x00, 0xF8, 0x00, 0xF8, 0x00, 0xF8
        00 F8
   0481 0C F0 0C F0 00 F0   694 	.db	0x0C, 0xF0, 0x0C, 0xF0, 0x00, 0xF0, 0xF8, 0xF8
        F8 F8
   0489 0F 8F 1F DF 1F 51   695 	.db	0x0F, 0x8F, 0x1F, 0xDF, 0x1F, 0x51, 0x1F, 0x84
        1F 84
   0491 1F 80 40 3F 0F 00   696 	.db	0x1F, 0x80, 0x40, 0x3F, 0x0F, 0x00, 0x03, 0x1F
        03 1F
   0499 01 1D 00 1F 00 1F   697 	.db	0x01, 0x1D, 0x00, 0x1F, 0x00, 0x1F, 0x30, 0x0F
        30 0F
   04A1 30 0F 00 0F 00 0F   698 	.db	0x30, 0x0F, 0x00, 0x0F, 0x00, 0x0F, 0x1F, 0x1F
        1F 1F
   04A9 F0 F0 F8 F8 F8 88   699 	.db	0xF0, 0xF0, 0xF8, 0xF8, 0xF8, 0x88, 0xF8, 0x20
        F8 20
   04B1 F8 00 F0 00 F0 00   700 	.db	0xF8, 0x00, 0xF0, 0x00, 0xF0, 0x00, 0xC0, 0xF8
        C0 F8
   04B9 80 B8 00 F8 00 F8   701 	.db	0x80, 0xB8, 0x00, 0xF8, 0x00, 0xF8, 0x0C, 0xF0
        0C F0
   04C1 0C F0 00 F0 00 F0   702 	.db	0x0C, 0xF0, 0x00, 0xF0, 0x00, 0xF0, 0xF8
        F8
   04C8 01                  703 	.db	1
   04C9 F8                  704 	.db	0xF8
   04CA 00                  705 	.db	0
                            706 ;	asakawa_battle.c 26
                            707 ;	asakawa_battle.c 274
                            708 ;	genArrayInit
                            709 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   04CB 21 FC 06            710 	ld	hl,#_hero_back_idle
   04CE CD 00 00            711 	call	__initrleblock
   04D1 FB 0F               712 	.db	-5,0x0F
   04D3 01                  713 	.db	1
   04D4 00                  714 	.db	0x00
   04D5 FA 0F               715 	.db	-6,0x0F
   04D7 14                  716 	.db	20
   04D8 07 07 1F 00 1F 00   717 	.db	0x07, 0x07, 0x1F, 0x00, 0x1F, 0x00, 0x0F, 0x10
        0F 10
   04E0 0F 10 0F 10 0F 3F   718 	.db	0x0F, 0x10, 0x0F, 0x10, 0x0F, 0x3F, 0x0F, 0x30
        0F 30
   04E8 0F 00 1F 1F         719 	.db	0x0F, 0x00, 0x1F, 0x1F
   04EC FB F0               720 	.db	-5,0xF0
   04EE 01                  721 	.db	1
   04EF 00                  722 	.db	0x00
   04F0 FA F0               723 	.db	-6,0xF0
   04F2 14                  724 	.db	20
   04F3 E0 E0 F8 00 F8 00   725 	.db	0xE0, 0xE0, 0xF8, 0x00, 0xF8, 0x00, 0xF0, 0x08
        F0 08
   04FB F0 08 F0 08 F8 FC   726 	.db	0xF0, 0x08, 0xF0, 0x08, 0xF8, 0xFC, 0xF0, 0x1C
        F0 1C
   0503 F0 00 F8 F8         727 	.db	0xF0, 0x00, 0xF8, 0xF8
   0507 FB 0F               728 	.db	-5,0x0F
   0509 01                  729 	.db	1
   050A 00                  730 	.db	0x00
   050B FA 0F               731 	.db	-6,0x0F
   050D 14                  732 	.db	20
   050E 1F 07 1F 00 0F 10   733 	.db	0x1F, 0x07, 0x1F, 0x00, 0x0F, 0x10, 0x0F, 0x10
        0F 10
   0516 0F 10 0F 3F 0F 30   734 	.db	0x0F, 0x10, 0x0F, 0x3F, 0x0F, 0x30, 0x0F, 0x00
        0F 00
   051E 0F 00 1F 1F         735 	.db	0x0F, 0x00, 0x1F, 0x1F
   0522 FB F0               736 	.db	-5,0xF0
   0524 01                  737 	.db	1
   0525 00                  738 	.db	0x00
   0526 FA F0               739 	.db	-6,0xF0
   0528 14                  740 	.db	20
   0529 F8 E0 F8 00 F0 08   741 	.db	0xF8, 0xE0, 0xF8, 0x00, 0xF0, 0x08, 0xF0, 0x08
        F0 08
   0531 F0 08 F8 FC F0 1C   742 	.db	0xF0, 0x08, 0xF8, 0xFC, 0xF0, 0x1C, 0xF0, 0x00
        F0 00
   0539 F0 00 F8 F8         743 	.db	0xF0, 0x00, 0xF8, 0xF8
   053D 00                  744 	.db	0
                            745 ;	asakawa_battle.c 25
                            746 ;	asakawa_battle.c 274
                            747 ;	genArrayInit
                            748 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   053E 21 7C 07            749 	ld	hl,#_blank_screen
   0541 CD 00 00            750 	call	__initrleblock
   0544 81 00               751 	.db	-127,0x00
   0546 81 00               752 	.db	-127,0x00
   0548 96 00               753 	.db	-106,0x00
   054A 00                  754 	.db	0
                            755 ;	asakawa_battle.c 26
                            756 ;	asakawa_battle.c 274
                            757 ;	genArrayInit
                            758 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   054B 21 E4 08            759 	ld	hl,#_blank_screen_tiles
   054E CD 00 00            760 	call	__initrleblock
   0551 F0 00               761 	.db	-16,0x00
   0553 1F                  762 	.db	31
   0554 FF 00 FF 00 FF 00   763 	.db	0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00
        FF 00
   055C FF 00 FF 00 FF 00   764 	.db	0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00
        FF 00
   0564 00 FF 00 FF 00 FF   765 	.db	0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF
        00 FF
   056C 00 FF 00 FF 00 FF   766 	.db	0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00
        00
   0573 EF FF               767 	.db	-17,0xFF
   0575 00                  768 	.db	0
                            769 ;	asakawa_battle.c 43
                            770 ;	genAssign
                            771 ;	AOP_HL for _arrow_x
   0576 21 2C 09            772 	ld	hl,#_arrow_x
   0579 36 12               773 	ld	(hl),#0x12
                            774 ;	asakawa_battle.c 44
                            775 ;	genAssign
                            776 ;	AOP_HL for _arrow_y
   057B 21 2D 09            777 	ld	hl,#_arrow_y
   057E 36 20               778 	ld	(hl),#0x20
                            779 ;	asakawa_battle.c 46
                            780 ;	genAssign
                            781 ;	AOP_HL for _state
   0580 21 2E 09            782 	ld	hl,#_state
   0583 36 00               783 	ld	(hl),#0x00
                            784 ;--------------------------------------------------------
                            785 ; Home
                            786 ;--------------------------------------------------------
                            787 	.area _HOME
                            788 	.area _CODE
                            789 ;--------------------------------------------------------
                            790 ; code
                            791 ;--------------------------------------------------------
                            792 	.area _CODE
                            793 ;	../../text/text.c 3
                            794 ;	genLabel
                            795 ;	genFunction
                            796 ;	---------------------------------
                            797 ; Function print
                            798 ; ---------------------------------
   0000                     799 ___print_start:
   0000                     800 _print:
   0000 E8 F4               801 	lda	sp,-12(sp)
                            802 ;	../../text/text.c 5
                            803 ;	genAssign
   0002 01 40 FF            804 	ld	bc,#0xFF40
                            805 ;	genAssign
                            806 ;	AOP_STK for _print_sloc0_1_0
   0005 F8 0A               807 	lda	hl,10(sp)
   0007 36 40               808 	ld	(hl),#0x40
   0009 23                  809 	inc	hl
   000A 36 FF               810 	ld	(hl),#0xFF
                            811 ;	genPointerGet
                            812 ;	AOP_STK for _print_sloc0_1_0
                            813 ;	AOP_STK for _print_sloc1_1_0
   000C 2B                  814 	dec	hl
   000D 5E                  815 	ld	e,(hl)
   000E 23                  816 	inc	hl
   000F 56                  817 	ld	d,(hl)
   0010 1A                  818 	ld	a,(de)
   0011 2B                  819 	dec	hl
   0012 2B                  820 	dec	hl
                            821 ;	genAnd
                            822 ;	AOP_STK for _print_sloc1_1_0
   0013 77                  823 	ld      (hl),a
                            824 ; Removed redundent load
   0014 E6 FB               825 	and	a,#0xFB
                            826 ;	genAssign (pointer)
   0016 02                  827 	ld	(bc),a
                            828 ;	../../text/text.c 7
                            829 ;	genIpush
                            830 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0017 21 68 01            831 	ld	hl,#_font
   001A E5                  832 	push	hl
                            833 ;	genIpush
   001B 21 00 2E            834 	ld	hl,#0x2E00
   001E E5                  835 	push	hl
                            836 ;	genCall
   001F CD 00 00            837 	call	_set_sprite_data
   0022 E8 04               838 	lda	sp,4(sp)
                            839 ;	../../text/text.c 9
                            840 ;	genIpush
                            841 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0024 21 48 04            842 	ld	hl,#_chain_border_tiles
   0027 E5                  843 	push	hl
                            844 ;	genIpush
   0028 21 00 0A            845 	ld	hl,#0x0A00
   002B E5                  846 	push	hl
                            847 ;	genCall
   002C CD 00 00            848 	call	_set_bkg_data
   002F E8 04               849 	lda	sp,4(sp)
                            850 ;	../../text/text.c 10
                            851 ;	genIpush
                            852 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0031 21 00 00            853 	ld	hl,#_chain_border
   0034 E5                  854 	push	hl
                            855 ;	genIpush
   0035 21 14 12            856 	ld	hl,#0x1214
   0038 E5                  857 	push	hl
                            858 ;	genIpush
   0039 21 00 00            859 	ld	hl,#0x0000
   003C E5                  860 	push	hl
                            861 ;	genCall
   003D CD 00 00            862 	call	_set_bkg_tiles
   0040 E8 06               863 	lda	sp,6(sp)
                            864 ;	../../text/text.c 12
                            865 ;	genAssign
                            866 ;	AOP_HL for _LETTER_COUNT
                            867 ;	AOP_HL for _cushion
   0042 21 7B 06            868 	ld	hl,#_LETTER_COUNT
   0045 7E                  869 	ld	a,(hl)
   0046 21 7A 06            870 	ld	hl,#_cushion
   0049 77                  871 	ld	(hl),a
                            872 ;	../../text/text.c 13
                            873 ;	genAssign
                            874 ;	AOP_HL for _i
   004A 21 78 06            875 	ld	hl,#_i
   004D 36 00               876 	ld	(hl),#0x00
                            877 ;	genLabel
   004F                     878 00119$:
                            879 ;	genPlus
                            880 ;	AOP_STK for 
                            881 ;	AOP_HL for _i
                            882 ;	Can't optimise plus by inc, falling back to the normal way
   004F F8 0E               883 	lda	hl,14(sp)
   0051 5E                  884 	ld	e,(hl)
   0052 23                  885 	inc	hl
   0053 56                  886 	ld	d,(hl)
   0054 21 78 06            887 	ld	hl,#_i
   0057 6E                  888 	ld	l,(hl)
   0058 26 00               889 	ld	h,#0x00
   005A 19                  890 	add	hl,de
   005B 4D                  891 	ld	c,l
   005C 44                  892 	ld	b,h
                            893 ;	genPointerGet
   005D 0A                  894 	ld	a,(bc)
                            895 ;	genCmpEq
                            896 ; genCmpEq: left 1, right 1, result 0
   005E 4F                  897 	ld	c,a
   005F B7                  898 	or	a,a
   0060 CA 3A 02            899 	jp	z,00123$
   0063                     900 00136$:
                            901 ;	../../text/text.c 15
                            902 ;	genAssign
                            903 ;	AOP_HL for _j
   0063 21 79 06            904 	ld	hl,#_j
   0066 36 00               905 	ld	(hl),#0x00
                            906 ;	genLabel
   0068                     907 00115$:
                            908 ;	genCmpLt
                            909 ;	AOP_HL for _j
                            910 ;	AOP_STK for _print_sloc9_1_0
   0068 21 79 06            911 	ld	hl,#_j
   006B 7E                  912 	ld	a,(hl)
   006C FE 30               913 	cp	#0x30
   006E 3E 00               914 	ld	a,#0x00
   0070 17                  915 	rla
   0071 F8 00               916 	lda	hl,0(sp)
   0073 77                  917 	ld	(hl),a
                            918 ;	genIfx
                            919 ;	AOP_STK for _print_sloc9_1_0
   0074 AF                  920 	xor	a,a
   0075 B6                  921 	or	a,(hl)
   0076 CA 29 02            922 	jp	z,00118$
                            923 ;	../../text/text.c 17
                            924 ;	genCmpEq
                            925 ; genCmpEq: left 1, right 1, result 1
   0079 79                  926 	ld	a,c
   007A FE 20               927 	cp	a,#0x20
   007C C2 83 00            928 	jp	nz,00137$
   007F 3E 01               929 	ld	a,#0x01
   0081 18 01               930 	jr	00138$
   0083                     931 00137$:
   0083 AF                  932 	xor	a,a
   0084                     933 00138$:
                            934 ;	genIfx
   0084 B7                  935 	or	a,a
   0085 C2 29 02            936 	jp	nz,00118$
                            937 ;	../../text/text.c 19
                            938 ;	genCmpEq
                            939 ; genCmpEq: left 1, right 1, result 1
   0088 79                  940 	ld	a,c
   0089 FE 3E               941 	cp	a,#0x3E
   008B C2 92 00            942 	jp	nz,00139$
   008E 3E 01               943 	ld	a,#0x01
   0090 18 01               944 	jr	00140$
   0092                     945 00139$:
   0092 AF                  946 	xor	a,a
   0093                     947 00140$:
                            948 ;	genIfx
   0093 B7                  949 	or	a,a
   0094 CA C7 00            950 	jp	z,00104$
                            951 ;	../../text/text.c 21
                            952 ;	genPlus
                            953 ;	AOP_HL for _i
                            954 ;	AOP_HL for _cushion
                            955 ;	AOP_STK for _print_sloc1_1_0
                            956 ;	Can't optimise plus by inc, falling back to the normal way
   0097 21 78 06            957 	ld	hl,#_i
   009A 7E                  958 	ld	a,(hl)
   009B 21 7A 06            959 	ld	hl,#_cushion
   009E 86                  960 	add	a,(hl)
   009F F8 09               961 	lda	hl,9(sp)
   00A1 77                  962 	ld	(hl),a
                            963 ;	genIpush
                            964 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   00A2 C5                  965 	push	bc
   00A3 3E 29               966 	ld	a,#0x29
   00A5 F5                  967 	push	af
   00A6 33                  968 	inc	sp
                            969 ;	genIpush
                            970 ;	AOP_STK for _print_sloc1_1_0
   00A7 7E                  971 	ld	a,(hl)
   00A8 F5                  972 	push	af
   00A9 33                  973 	inc	sp
                            974 ;	genCall
   00AA CD 00 00            975 	call	_set_sprite_tile
   00AD E8 02               976 	lda	sp,2(sp)
   00AF E1                  977 	pop	hl
   00B0 4D                  978 	ld	c,l
                            979 ;	../../text/text.c 22
                            980 ;	genIpush
                            981 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   00B1 C5                  982 	push	bc
                            983 ;	AOP_STK for 
   00B2 F8 13               984 	lda	hl,19(sp)
   00B4 7E                  985 	ld	a,(hl)
   00B5 F5                  986 	push	af
   00B6 33                  987 	inc	sp
                            988 ;	genIpush
                            989 ;	AOP_STK for 
   00B7 2B                  990 	dec	hl
   00B8 7E                  991 	ld	a,(hl)
   00B9 F5                  992 	push	af
   00BA 33                  993 	inc	sp
                            994 ;	genIpush
                            995 ;	AOP_STK for _print_sloc1_1_0
   00BB F8 0D               996 	lda	hl,13(sp)
   00BD 7E                  997 	ld	a,(hl)
   00BE F5                  998 	push	af
   00BF 33                  999 	inc	sp
                           1000 ;	genCall
   00C0 CD 00 00           1001 	call	_move_sprite
   00C3 E8 03              1002 	lda	sp,3(sp)
   00C5 E1                 1003 	pop	hl
   00C6 4D                 1004 	ld	c,l
                           1005 ;	genLabel
   00C7                    1006 00104$:
                           1007 ;	../../text/text.c 24
                           1008 ;	genCmpEq
                           1009 ; genCmpEq: left 1, right 1, result 1
   00C7 79                 1010 	ld	a,c
   00C8 FE 27              1011 	cp	a,#0x27
   00CA C2 D1 00           1012 	jp	nz,00141$
   00CD 3E 01              1013 	ld	a,#0x01
   00CF 18 01              1014 	jr	00142$
   00D1                    1015 00141$:
   00D1 AF                 1016 	xor	a,a
   00D2                    1017 00142$:
                           1018 ;	genIfx
   00D2 B7                 1019 	or	a,a
   00D3 CA 06 01           1020 	jp	z,00106$
                           1021 ;	../../text/text.c 26
                           1022 ;	genPlus
                           1023 ;	AOP_HL for _i
                           1024 ;	AOP_HL for _cushion
                           1025 ;	AOP_STK for _print_sloc0_1_0
                           1026 ;	Can't optimise plus by inc, falling back to the normal way
   00D6 21 78 06           1027 	ld	hl,#_i
   00D9 7E                 1028 	ld	a,(hl)
   00DA 21 7A 06           1029 	ld	hl,#_cushion
   00DD 86                 1030 	add	a,(hl)
   00DE F8 0A              1031 	lda	hl,10(sp)
   00E0 77                 1032 	ld	(hl),a
                           1033 ;	genIpush
                           1034 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   00E1 C5                 1035 	push	bc
   00E2 3E 2A              1036 	ld	a,#0x2A
   00E4 F5                 1037 	push	af
   00E5 33                 1038 	inc	sp
                           1039 ;	genIpush
                           1040 ;	AOP_STK for _print_sloc0_1_0
   00E6 7E                 1041 	ld	a,(hl)
   00E7 F5                 1042 	push	af
   00E8 33                 1043 	inc	sp
                           1044 ;	genCall
   00E9 CD 00 00           1045 	call	_set_sprite_tile
   00EC E8 02              1046 	lda	sp,2(sp)
   00EE E1                 1047 	pop	hl
   00EF 4D                 1048 	ld	c,l
                           1049 ;	../../text/text.c 27
                           1050 ;	genIpush
                           1051 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   00F0 C5                 1052 	push	bc
                           1053 ;	AOP_STK for 
   00F1 F8 13              1054 	lda	hl,19(sp)
   00F3 7E                 1055 	ld	a,(hl)
   00F4 F5                 1056 	push	af
   00F5 33                 1057 	inc	sp
                           1058 ;	genIpush
                           1059 ;	AOP_STK for 
   00F6 2B                 1060 	dec	hl
   00F7 7E                 1061 	ld	a,(hl)
   00F8 F5                 1062 	push	af
   00F9 33                 1063 	inc	sp
                           1064 ;	genIpush
                           1065 ;	AOP_STK for _print_sloc0_1_0
   00FA F8 0E              1066 	lda	hl,14(sp)
   00FC 7E                 1067 	ld	a,(hl)
   00FD F5                 1068 	push	af
   00FE 33                 1069 	inc	sp
                           1070 ;	genCall
   00FF CD 00 00           1071 	call	_move_sprite
   0102 E8 03              1072 	lda	sp,3(sp)
   0104 E1                 1073 	pop	hl
   0105 4D                 1074 	ld	c,l
                           1075 ;	genLabel
   0106                    1076 00106$:
                           1077 ;	../../text/text.c 29
                           1078 ;	genCmpEq
                           1079 ; genCmpEq: left 1, right 1, result 1
   0106 79                 1080 	ld	a,c
   0107 FE 21              1081 	cp	a,#0x21
   0109 C2 10 01           1082 	jp	nz,00143$
   010C 3E 01              1083 	ld	a,#0x01
   010E 18 01              1084 	jr	00144$
   0110                    1085 00143$:
   0110 AF                 1086 	xor	a,a
   0111                    1087 00144$:
                           1088 ;	genIfx
   0111 B7                 1089 	or	a,a
   0112 CA 45 01           1090 	jp	z,00108$
                           1091 ;	../../text/text.c 31
                           1092 ;	genPlus
                           1093 ;	AOP_HL for _i
                           1094 ;	AOP_HL for _cushion
                           1095 ;	AOP_STK for _print_sloc2_1_0
                           1096 ;	Can't optimise plus by inc, falling back to the normal way
   0115 21 78 06           1097 	ld	hl,#_i
   0118 7E                 1098 	ld	a,(hl)
   0119 21 7A 06           1099 	ld	hl,#_cushion
   011C 86                 1100 	add	a,(hl)
   011D F8 08              1101 	lda	hl,8(sp)
   011F 77                 1102 	ld	(hl),a
                           1103 ;	genIpush
                           1104 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0120 C5                 1105 	push	bc
   0121 3E 2B              1106 	ld	a,#0x2B
   0123 F5                 1107 	push	af
   0124 33                 1108 	inc	sp
                           1109 ;	genIpush
                           1110 ;	AOP_STK for _print_sloc2_1_0
   0125 7E                 1111 	ld	a,(hl)
   0126 F5                 1112 	push	af
   0127 33                 1113 	inc	sp
                           1114 ;	genCall
   0128 CD 00 00           1115 	call	_set_sprite_tile
   012B E8 02              1116 	lda	sp,2(sp)
   012D E1                 1117 	pop	hl
   012E 4D                 1118 	ld	c,l
                           1119 ;	../../text/text.c 32
                           1120 ;	genIpush
                           1121 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   012F C5                 1122 	push	bc
                           1123 ;	AOP_STK for 
   0130 F8 13              1124 	lda	hl,19(sp)
   0132 7E                 1125 	ld	a,(hl)
   0133 F5                 1126 	push	af
   0134 33                 1127 	inc	sp
                           1128 ;	genIpush
                           1129 ;	AOP_STK for 
   0135 2B                 1130 	dec	hl
   0136 7E                 1131 	ld	a,(hl)
   0137 F5                 1132 	push	af
   0138 33                 1133 	inc	sp
                           1134 ;	genIpush
                           1135 ;	AOP_STK for _print_sloc2_1_0
   0139 F8 0C              1136 	lda	hl,12(sp)
   013B 7E                 1137 	ld	a,(hl)
   013C F5                 1138 	push	af
   013D 33                 1139 	inc	sp
                           1140 ;	genCall
   013E CD 00 00           1141 	call	_move_sprite
   0141 E8 03              1142 	lda	sp,3(sp)
   0143 E1                 1143 	pop	hl
   0144 4D                 1144 	ld	c,l
                           1145 ;	genLabel
   0145                    1146 00108$:
                           1147 ;	../../text/text.c 34
                           1148 ;	genCmpEq
                           1149 ; genCmpEq: left 1, right 1, result 1
   0145 79                 1150 	ld	a,c
   0146 FE 22              1151 	cp	a,#0x22
   0148 C2 4F 01           1152 	jp	nz,00145$
   014B 3E 01              1153 	ld	a,#0x01
   014D 18 01              1154 	jr	00146$
   014F                    1155 00145$:
   014F AF                 1156 	xor	a,a
   0150                    1157 00146$:
                           1158 ;	genIfx
   0150 B7                 1159 	or	a,a
   0151 CA 84 01           1160 	jp	z,00110$
                           1161 ;	../../text/text.c 36
                           1162 ;	genPlus
                           1163 ;	AOP_HL for _i
                           1164 ;	AOP_HL for _cushion
                           1165 ;	AOP_STK for _print_sloc3_1_0
                           1166 ;	Can't optimise plus by inc, falling back to the normal way
   0154 21 78 06           1167 	ld	hl,#_i
   0157 7E                 1168 	ld	a,(hl)
   0158 21 7A 06           1169 	ld	hl,#_cushion
   015B 86                 1170 	add	a,(hl)
   015C F8 07              1171 	lda	hl,7(sp)
   015E 77                 1172 	ld	(hl),a
                           1173 ;	genIpush
                           1174 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   015F C5                 1175 	push	bc
   0160 3E 2C              1176 	ld	a,#0x2C
   0162 F5                 1177 	push	af
   0163 33                 1178 	inc	sp
                           1179 ;	genIpush
                           1180 ;	AOP_STK for _print_sloc3_1_0
   0164 7E                 1181 	ld	a,(hl)
   0165 F5                 1182 	push	af
   0166 33                 1183 	inc	sp
                           1184 ;	genCall
   0167 CD 00 00           1185 	call	_set_sprite_tile
   016A E8 02              1186 	lda	sp,2(sp)
   016C E1                 1187 	pop	hl
   016D 4D                 1188 	ld	c,l
                           1189 ;	../../text/text.c 37
                           1190 ;	genIpush
                           1191 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   016E C5                 1192 	push	bc
                           1193 ;	AOP_STK for 
   016F F8 13              1194 	lda	hl,19(sp)
   0171 7E                 1195 	ld	a,(hl)
   0172 F5                 1196 	push	af
   0173 33                 1197 	inc	sp
                           1198 ;	genIpush
                           1199 ;	AOP_STK for 
   0174 2B                 1200 	dec	hl
   0175 7E                 1201 	ld	a,(hl)
   0176 F5                 1202 	push	af
   0177 33                 1203 	inc	sp
                           1204 ;	genIpush
                           1205 ;	AOP_STK for _print_sloc3_1_0
   0178 F8 0B              1206 	lda	hl,11(sp)
   017A 7E                 1207 	ld	a,(hl)
   017B F5                 1208 	push	af
   017C 33                 1209 	inc	sp
                           1210 ;	genCall
   017D CD 00 00           1211 	call	_move_sprite
   0180 E8 03              1212 	lda	sp,3(sp)
   0182 E1                 1213 	pop	hl
   0183 4D                 1214 	ld	c,l
                           1215 ;	genLabel
   0184                    1216 00110$:
                           1217 ;	../../text/text.c 39
                           1218 ;	genCmpEq
                           1219 ; genCmpEq: left 1, right 1, result 1
   0184 79                 1220 	ld	a,c
   0185 FE 3F              1221 	cp	a,#0x3F
   0187 C2 8E 01           1222 	jp	nz,00147$
   018A 3E 01              1223 	ld	a,#0x01
   018C 18 01              1224 	jr	00148$
   018E                    1225 00147$:
   018E AF                 1226 	xor	a,a
   018F                    1227 00148$:
                           1228 ;	genIfx
   018F B7                 1229 	or	a,a
   0190 CA C3 01           1230 	jp	z,00112$
                           1231 ;	../../text/text.c 41
                           1232 ;	genPlus
                           1233 ;	AOP_HL for _i
                           1234 ;	AOP_HL for _cushion
                           1235 ;	AOP_STK for _print_sloc4_1_0
                           1236 ;	Can't optimise plus by inc, falling back to the normal way
   0193 21 78 06           1237 	ld	hl,#_i
   0196 7E                 1238 	ld	a,(hl)
   0197 21 7A 06           1239 	ld	hl,#_cushion
   019A 86                 1240 	add	a,(hl)
   019B F8 06              1241 	lda	hl,6(sp)
   019D 77                 1242 	ld	(hl),a
                           1243 ;	genIpush
                           1244 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   019E C5                 1245 	push	bc
   019F 3E 2D              1246 	ld	a,#0x2D
   01A1 F5                 1247 	push	af
   01A2 33                 1248 	inc	sp
                           1249 ;	genIpush
                           1250 ;	AOP_STK for _print_sloc4_1_0
   01A3 7E                 1251 	ld	a,(hl)
   01A4 F5                 1252 	push	af
   01A5 33                 1253 	inc	sp
                           1254 ;	genCall
   01A6 CD 00 00           1255 	call	_set_sprite_tile
   01A9 E8 02              1256 	lda	sp,2(sp)
   01AB E1                 1257 	pop	hl
   01AC 4D                 1258 	ld	c,l
                           1259 ;	../../text/text.c 42
                           1260 ;	genIpush
                           1261 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   01AD C5                 1262 	push	bc
                           1263 ;	AOP_STK for 
   01AE F8 13              1264 	lda	hl,19(sp)
   01B0 7E                 1265 	ld	a,(hl)
   01B1 F5                 1266 	push	af
   01B2 33                 1267 	inc	sp
                           1268 ;	genIpush
                           1269 ;	AOP_STK for 
   01B3 2B                 1270 	dec	hl
   01B4 7E                 1271 	ld	a,(hl)
   01B5 F5                 1272 	push	af
   01B6 33                 1273 	inc	sp
                           1274 ;	genIpush
                           1275 ;	AOP_STK for _print_sloc4_1_0
   01B7 F8 0A              1276 	lda	hl,10(sp)
   01B9 7E                 1277 	ld	a,(hl)
   01BA F5                 1278 	push	af
   01BB 33                 1279 	inc	sp
                           1280 ;	genCall
   01BC CD 00 00           1281 	call	_move_sprite
   01BF E8 03              1282 	lda	sp,3(sp)
   01C1 E1                 1283 	pop	hl
   01C2 4D                 1284 	ld	c,l
                           1285 ;	genLabel
   01C3                    1286 00112$:
                           1287 ;	../../text/text.c 44
                           1288 ;	genPlus
                           1289 ;	AOP_HL for _j
                           1290 ;	AOP_STK for _print_sloc5_1_0
                           1291 ;	Can't optimise plus by inc, falling back to the normal way
   01C3 11 50 06           1292 	ld	de,#_chars
   01C6 21 79 06           1293 	ld	hl,#_j
   01C9 6E                 1294 	ld	l,(hl)
   01CA 26 00              1295 	ld	h,#0x00
   01CC 19                 1296 	add	hl,de
   01CD 7D                 1297 	ld	a,l
   01CE 54                 1298 	ld	d,h
   01CF F8 04              1299 	lda	hl,4(sp)
                           1300 ;	genPointerGet
                           1301 ;	AOP_STK for _print_sloc5_1_0
                           1302 ;	AOP_STK for _print_sloc6_1_0
   01D1 22                 1303 	ld	(hl+),a
   01D2 72                 1304 	ld	(hl),d
   01D3 5F                 1305 	ld	e,a
   01D4 1A                 1306 	ld	a,(de)
   01D5 2B                 1307 	dec	hl
   01D6 2B                 1308 	dec	hl
                           1309 ;	genCmpEq
                           1310 ;	AOP_STK for _print_sloc6_1_0
                           1311 ; genCmpEq: left 1, right 1, result 1
   01D7 77                 1312 	ld      (hl),a
                           1313 ; Removed redundent load
   01D8 B9                 1314 	cp	c
   01D9 20 04              1315 	jr	nz,00149$
   01DB 3E 01              1316 	ld	a,#0x01
   01DD 18 01              1317 	jr	00150$
   01DF                    1318 00149$:
   01DF AF                 1319 	xor	a,a
   01E0                    1320 00150$:
                           1321 ;	genIfx
   01E0 B7                 1322 	or	a,a
   01E1 CA 18 02           1323 	jp	z,00117$
                           1324 ;	../../text/text.c 46
                           1325 ;	genPlus
                           1326 ;	AOP_HL for _i
                           1327 ;	AOP_HL for _cushion
                           1328 ;	AOP_STK for _print_sloc7_1_0
                           1329 ;	Can't optimise plus by inc, falling back to the normal way
   01E4 21 78 06           1330 	ld	hl,#_i
   01E7 7E                 1331 	ld	a,(hl)
   01E8 21 7A 06           1332 	ld	hl,#_cushion
   01EB 86                 1333 	add	a,(hl)
   01EC F8 02              1334 	lda	hl,2(sp)
   01EE 77                 1335 	ld	(hl),a
                           1336 ;	genIpush
                           1337 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   01EF C5                 1338 	push	bc
                           1339 ;	AOP_HL for _j
   01F0 21 79 06           1340 	ld	hl,#_j
   01F3 7E                 1341 	ld	a,(hl)
   01F4 F5                 1342 	push	af
   01F5 33                 1343 	inc	sp
                           1344 ;	genIpush
                           1345 ;	AOP_STK for _print_sloc7_1_0
   01F6 F8 05              1346 	lda	hl,5(sp)
   01F8 7E                 1347 	ld	a,(hl)
   01F9 F5                 1348 	push	af
   01FA 33                 1349 	inc	sp
                           1350 ;	genCall
   01FB CD 00 00           1351 	call	_set_sprite_tile
   01FE E8 02              1352 	lda	sp,2(sp)
   0200 E1                 1353 	pop	hl
   0201 4D                 1354 	ld	c,l
                           1355 ;	../../text/text.c 47
                           1356 ;	genIpush
                           1357 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0202 C5                 1358 	push	bc
                           1359 ;	AOP_STK for 
   0203 F8 13              1360 	lda	hl,19(sp)
   0205 7E                 1361 	ld	a,(hl)
   0206 F5                 1362 	push	af
   0207 33                 1363 	inc	sp
                           1364 ;	genIpush
                           1365 ;	AOP_STK for 
   0208 2B                 1366 	dec	hl
   0209 7E                 1367 	ld	a,(hl)
   020A F5                 1368 	push	af
   020B 33                 1369 	inc	sp
                           1370 ;	genIpush
                           1371 ;	AOP_STK for _print_sloc7_1_0
   020C F8 06              1372 	lda	hl,6(sp)
   020E 7E                 1373 	ld	a,(hl)
   020F F5                 1374 	push	af
   0210 33                 1375 	inc	sp
                           1376 ;	genCall
   0211 CD 00 00           1377 	call	_move_sprite
   0214 E8 03              1378 	lda	sp,3(sp)
   0216 E1                 1379 	pop	hl
   0217 4D                 1380 	ld	c,l
                           1381 ;	genLabel
   0218                    1382 00117$:
                           1383 ;	../../text/text.c 15
                           1384 ;	genPlus
                           1385 ;	AOP_HL for _j
                           1386 ;	AOP_STK for _print_sloc8_1_0
                           1387 ;	genPlusIncr
                           1388 ;	Can't optimise plus by inc, falling back to the normal way
   0218 21 79 06           1389 	ld	hl,#_j
   021B 7E                 1390 	ld	a,(hl)
   021C C6 01              1391 	add	a,#0x01
   021E F8 01              1392 	lda	hl,1(sp)
                           1393 ;	genAssign
                           1394 ;	AOP_STK for _print_sloc8_1_0
   0220 77                 1395 	ld      (hl),a
   0221 47                 1396 	ld      b,a
                           1397 ;	genAssign
                           1398 ;	AOP_HL for _j
   0222 21 79 06           1399 	ld	hl,#_j
   0225 70                 1400 	ld	(hl),b
                           1401 ;	genGoto
   0226 C3 68 00           1402 	jp	00115$
                           1403 ;	genLabel
   0229                    1404 00118$:
                           1405 ;	../../text/text.c 50
                           1406 ;	genPlus
                           1407 ;	AOP_HL for _LETTER_COUNT
                           1408 ;	genPlusIncr
   0229 21 7B 06           1409 	ld	hl,#_LETTER_COUNT
   022C 34                 1410 	inc	(hl)
                           1411 ;	../../text/text.c 51
                           1412 ;	genPlus
                           1413 ;	AOP_STK for 
                           1414 ;	genPlusIncr
                           1415 ;	Can't optimise plus by inc, falling back to the normal way
   022D F8 10              1416 	lda	hl,16(sp)
   022F 7E                 1417 	ld	a,(hl)
   0230 C6 08              1418 	add	a,#0x08
   0232 77                 1419 	ld	(hl),a
                           1420 ;	../../text/text.c 13
                           1421 ;	genPlus
                           1422 ;	AOP_HL for _i
                           1423 ;	genPlusIncr
   0233 21 78 06           1424 	ld	hl,#_i
   0236 34                 1425 	inc	(hl)
                           1426 ;	genGoto
   0237 C3 4F 00           1427 	jp	00119$
                           1428 ;	genLabel
   023A                    1429 00123$:
                           1430 ;	genEndFunction
   023A E8 0C              1431 	lda	sp,12(sp)
   023C C9                 1432 	ret
   023D                    1433 ___print_end:
                           1434 ;	../../text/text.c 55
                           1435 ;	genLabel
                           1436 ;	genFunction
                           1437 ;	---------------------------------
                           1438 ; Function bkg_clean
                           1439 ; ---------------------------------
   023D                    1440 ___bkg_clean_start:
   023D                    1441 _bkg_clean:
                           1442 	
                           1443 ;	../../text/text.c 57
                           1444 ;	genIpush
                           1445 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   023D 21 48 04           1446 	ld	hl,#_chain_border_tiles
   0240 E5                 1447 	push	hl
                           1448 ;	genIpush
   0241 21 00 0A           1449 	ld	hl,#0x0A00
   0244 E5                 1450 	push	hl
                           1451 ;	genCall
   0245 CD 00 00           1452 	call	_set_bkg_data
   0248 E8 04              1453 	lda	sp,4(sp)
                           1454 ;	../../text/text.c 58
                           1455 ;	genIpush
                           1456 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   024A 21 00 00           1457 	ld	hl,#_chain_border
   024D E5                 1458 	push	hl
                           1459 ;	genIpush
   024E 21 14 12           1460 	ld	hl,#0x1214
   0251 E5                 1461 	push	hl
                           1462 ;	genIpush
   0252 21 00 00           1463 	ld	hl,#0x0000
   0255 E5                 1464 	push	hl
                           1465 ;	genCall
   0256 CD 00 00           1466 	call	_set_bkg_tiles
   0259 E8 06              1467 	lda	sp,6(sp)
                           1468 ;	genLabel
   025B                    1469 00101$:
                           1470 ;	genEndFunction
                           1471 	
   025B C9                 1472 	ret
   025C                    1473 ___bkg_clean_end:
                           1474 ;	../../text/text.c 61
                           1475 ;	genLabel
                           1476 ;	genFunction
                           1477 ;	---------------------------------
                           1478 ; Function sprite_clean
                           1479 ; ---------------------------------
   025C                    1480 ___sprite_clean_start:
   025C                    1481 _sprite_clean:
                           1482 	
                           1483 ;	../../text/text.c 63
                           1484 ;	genAssign
                           1485 ;	AOP_HL for _i
   025C 21 78 06           1486 	ld	hl,#_i
   025F 36 00              1487 	ld	(hl),#0x00
                           1488 ;	genLabel
   0261                    1489 00101$:
                           1490 ;	genCmpLt
                           1491 ;	AOP_HL for _i
   0261 21 78 06           1492 	ld	hl,#_i
   0264 7E                 1493 	ld	a,(hl)
   0265 FE 64              1494 	cp	#0x64
   0267 D2 7D 02           1495 	jp	nc,00105$
                           1496 ;	../../text/text.c 65
                           1497 ;	genIpush
                           1498 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   026A 3E 28              1499 	ld	a,#0x28
   026C F5                 1500 	push	af
   026D 33                 1501 	inc	sp
                           1502 ;	genIpush
                           1503 ;	AOP_HL for _i
   026E 7E                 1504 	ld	a,(hl)
   026F F5                 1505 	push	af
   0270 33                 1506 	inc	sp
                           1507 ;	genCall
   0271 CD 00 00           1508 	call	_set_sprite_tile
   0274 E8 02              1509 	lda	sp,2(sp)
                           1510 ;	../../text/text.c 63
                           1511 ;	genPlus
                           1512 ;	AOP_HL for _i
                           1513 ;	genPlusIncr
   0276 21 78 06           1514 	ld	hl,#_i
   0279 34                 1515 	inc	(hl)
                           1516 ;	genGoto
   027A C3 61 02           1517 	jp	00101$
                           1518 ;	genLabel
   027D                    1519 00105$:
                           1520 ;	genEndFunction
                           1521 	
   027D C9                 1522 	ret
   027E                    1523 ___sprite_clean_end:
                           1524 ;	../../text/text.c 69
                           1525 ;	genLabel
                           1526 ;	genFunction
                           1527 ;	---------------------------------
                           1528 ; Function hide_sprites
                           1529 ; ---------------------------------
   027E                    1530 ___hide_sprites_start:
   027E                    1531 _hide_sprites:
                           1532 	
                           1533 ;	../../text/text.c 71
                           1534 ;	genAssign
                           1535 ;	AOP_HL for _i
   027E 21 78 06           1536 	ld	hl,#_i
   0281 36 00              1537 	ld	(hl),#0x00
                           1538 ;	genLabel
   0283                    1539 00101$:
                           1540 ;	genCmpLt
                           1541 ;	AOP_HL for _i
   0283 21 78 06           1542 	ld	hl,#_i
   0286 7E                 1543 	ld	a,(hl)
   0287 FE 64              1544 	cp	#0x64
   0289 D2 A2 02           1545 	jp	nc,00105$
                           1546 ;	../../text/text.c 73
                           1547 ;	genIpush
                           1548 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   028C 21 FA FA           1549 	ld	hl,#0xFAFA
   028F E5                 1550 	push	hl
                           1551 ;	genIpush
                           1552 ;	AOP_HL for _i
   0290 21 78 06           1553 	ld	hl,#_i
   0293 7E                 1554 	ld	a,(hl)
   0294 F5                 1555 	push	af
   0295 33                 1556 	inc	sp
                           1557 ;	genCall
   0296 CD 00 00           1558 	call	_move_sprite
   0299 E8 03              1559 	lda	sp,3(sp)
                           1560 ;	../../text/text.c 71
                           1561 ;	genPlus
                           1562 ;	AOP_HL for _i
                           1563 ;	genPlusIncr
   029B 21 78 06           1564 	ld	hl,#_i
   029E 34                 1565 	inc	(hl)
                           1566 ;	genGoto
   029F C3 83 02           1567 	jp	00101$
                           1568 ;	genLabel
   02A2                    1569 00105$:
                           1570 ;	genEndFunction
                           1571 	
   02A2 C9                 1572 	ret
   02A3                    1573 ___hide_sprites_end:
                           1574 ;	../../text/text.c 78
                           1575 ;	genLabel
                           1576 ;	genFunction
                           1577 ;	---------------------------------
                           1578 ; Function battle_print
                           1579 ; ---------------------------------
   02A3                    1580 ___battle_print_start:
   02A3                    1581 _battle_print:
   02A3 E8 F4              1582 	lda	sp,-12(sp)
                           1583 ;	../../text/text.c 80
                           1584 ;	genAssign
   02A5 01 40 FF           1585 	ld	bc,#0xFF40
                           1586 ;	genAssign
                           1587 ;	AOP_STK for _battle_print_sloc0_1_0
   02A8 F8 0A              1588 	lda	hl,10(sp)
   02AA 36 40              1589 	ld	(hl),#0x40
   02AC 23                 1590 	inc	hl
   02AD 36 FF              1591 	ld	(hl),#0xFF
                           1592 ;	genPointerGet
                           1593 ;	AOP_STK for _battle_print_sloc0_1_0
                           1594 ;	AOP_STK for _battle_print_sloc1_1_0
   02AF 2B                 1595 	dec	hl
   02B0 5E                 1596 	ld	e,(hl)
   02B1 23                 1597 	inc	hl
   02B2 56                 1598 	ld	d,(hl)
   02B3 1A                 1599 	ld	a,(de)
   02B4 2B                 1600 	dec	hl
   02B5 2B                 1601 	dec	hl
                           1602 ;	genAnd
                           1603 ;	AOP_STK for _battle_print_sloc1_1_0
   02B6 77                 1604 	ld      (hl),a
                           1605 ; Removed redundent load
   02B7 E6 FB              1606 	and	a,#0xFB
                           1607 ;	genAssign (pointer)
   02B9 02                 1608 	ld	(bc),a
                           1609 ;	../../text/text.c 82
                           1610 ;	genIpush
                           1611 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   02BA 21 68 01           1612 	ld	hl,#_font
   02BD E5                 1613 	push	hl
                           1614 ;	genIpush
   02BE 21 00 2E           1615 	ld	hl,#0x2E00
   02C1 E5                 1616 	push	hl
                           1617 ;	genCall
   02C2 CD 00 00           1618 	call	_set_sprite_data
   02C5 E8 04              1619 	lda	sp,4(sp)
                           1620 ;	../../text/text.c 84
                           1621 ;	genIpush
                           1622 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   02C7 21 48 04           1623 	ld	hl,#_chain_border_tiles
   02CA E5                 1624 	push	hl
                           1625 ;	genIpush
   02CB 21 00 0A           1626 	ld	hl,#0x0A00
   02CE E5                 1627 	push	hl
                           1628 ;	genCall
   02CF CD 00 00           1629 	call	_set_bkg_data
   02D2 E8 04              1630 	lda	sp,4(sp)
                           1631 ;	../../text/text.c 85
                           1632 ;	genIpush
                           1633 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   02D4 21 E8 04           1634 	ld	hl,#_small_chain_border
   02D7 E5                 1635 	push	hl
                           1636 ;	genIpush
   02D8 21 14 12           1637 	ld	hl,#0x1214
   02DB E5                 1638 	push	hl
                           1639 ;	genIpush
   02DC 21 00 00           1640 	ld	hl,#0x0000
   02DF E5                 1641 	push	hl
                           1642 ;	genCall
   02E0 CD 00 00           1643 	call	_set_bkg_tiles
   02E3 E8 06              1644 	lda	sp,6(sp)
                           1645 ;	../../text/text.c 87
                           1646 ;	genAssign
                           1647 ;	AOP_HL for _LETTER_COUNT
                           1648 ;	AOP_HL for _cushion
   02E5 21 7B 06           1649 	ld	hl,#_LETTER_COUNT
   02E8 7E                 1650 	ld	a,(hl)
   02E9 21 7A 06           1651 	ld	hl,#_cushion
   02EC 77                 1652 	ld	(hl),a
                           1653 ;	../../text/text.c 88
                           1654 ;	genAssign
                           1655 ;	AOP_HL for _i
   02ED 21 78 06           1656 	ld	hl,#_i
   02F0 36 00              1657 	ld	(hl),#0x00
                           1658 ;	genLabel
   02F2                    1659 00119$:
                           1660 ;	genPlus
                           1661 ;	AOP_STK for 
                           1662 ;	AOP_HL for _i
                           1663 ;	Can't optimise plus by inc, falling back to the normal way
   02F2 F8 0E              1664 	lda	hl,14(sp)
   02F4 5E                 1665 	ld	e,(hl)
   02F5 23                 1666 	inc	hl
   02F6 56                 1667 	ld	d,(hl)
   02F7 21 78 06           1668 	ld	hl,#_i
   02FA 6E                 1669 	ld	l,(hl)
   02FB 26 00              1670 	ld	h,#0x00
   02FD 19                 1671 	add	hl,de
   02FE 4D                 1672 	ld	c,l
   02FF 44                 1673 	ld	b,h
                           1674 ;	genPointerGet
   0300 0A                 1675 	ld	a,(bc)
                           1676 ;	genCmpEq
                           1677 ; genCmpEq: left 1, right 1, result 0
   0301 4F                 1678 	ld	c,a
   0302 B7                 1679 	or	a,a
   0303 CA DD 04           1680 	jp	z,00123$
   0306                    1681 00136$:
                           1682 ;	../../text/text.c 90
                           1683 ;	genAssign
                           1684 ;	AOP_HL for _j
   0306 21 79 06           1685 	ld	hl,#_j
   0309 36 00              1686 	ld	(hl),#0x00
                           1687 ;	genLabel
   030B                    1688 00115$:
                           1689 ;	genCmpLt
                           1690 ;	AOP_HL for _j
                           1691 ;	AOP_STK for _battle_print_sloc9_1_0
   030B 21 79 06           1692 	ld	hl,#_j
   030E 7E                 1693 	ld	a,(hl)
   030F FE 30              1694 	cp	#0x30
   0311 3E 00              1695 	ld	a,#0x00
   0313 17                 1696 	rla
   0314 F8 00              1697 	lda	hl,0(sp)
   0316 77                 1698 	ld	(hl),a
                           1699 ;	genIfx
                           1700 ;	AOP_STK for _battle_print_sloc9_1_0
   0317 AF                 1701 	xor	a,a
   0318 B6                 1702 	or	a,(hl)
   0319 CA CC 04           1703 	jp	z,00118$
                           1704 ;	../../text/text.c 92
                           1705 ;	genCmpEq
                           1706 ; genCmpEq: left 1, right 1, result 1
   031C 79                 1707 	ld	a,c
   031D FE 20              1708 	cp	a,#0x20
   031F C2 26 03           1709 	jp	nz,00137$
   0322 3E 01              1710 	ld	a,#0x01
   0324 18 01              1711 	jr	00138$
   0326                    1712 00137$:
   0326 AF                 1713 	xor	a,a
   0327                    1714 00138$:
                           1715 ;	genIfx
   0327 B7                 1716 	or	a,a
   0328 C2 CC 04           1717 	jp	nz,00118$
                           1718 ;	../../text/text.c 94
                           1719 ;	genCmpEq
                           1720 ; genCmpEq: left 1, right 1, result 1
   032B 79                 1721 	ld	a,c
   032C FE 3E              1722 	cp	a,#0x3E
   032E C2 35 03           1723 	jp	nz,00139$
   0331 3E 01              1724 	ld	a,#0x01
   0333 18 01              1725 	jr	00140$
   0335                    1726 00139$:
   0335 AF                 1727 	xor	a,a
   0336                    1728 00140$:
                           1729 ;	genIfx
   0336 B7                 1730 	or	a,a
   0337 CA 6A 03           1731 	jp	z,00104$
                           1732 ;	../../text/text.c 96
                           1733 ;	genPlus
                           1734 ;	AOP_HL for _i
                           1735 ;	AOP_HL for _cushion
                           1736 ;	AOP_STK for _battle_print_sloc1_1_0
                           1737 ;	Can't optimise plus by inc, falling back to the normal way
   033A 21 78 06           1738 	ld	hl,#_i
   033D 7E                 1739 	ld	a,(hl)
   033E 21 7A 06           1740 	ld	hl,#_cushion
   0341 86                 1741 	add	a,(hl)
   0342 F8 09              1742 	lda	hl,9(sp)
   0344 77                 1743 	ld	(hl),a
                           1744 ;	genIpush
                           1745 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0345 C5                 1746 	push	bc
   0346 3E 29              1747 	ld	a,#0x29
   0348 F5                 1748 	push	af
   0349 33                 1749 	inc	sp
                           1750 ;	genIpush
                           1751 ;	AOP_STK for _battle_print_sloc1_1_0
   034A 7E                 1752 	ld	a,(hl)
   034B F5                 1753 	push	af
   034C 33                 1754 	inc	sp
                           1755 ;	genCall
   034D CD 00 00           1756 	call	_set_sprite_tile
   0350 E8 02              1757 	lda	sp,2(sp)
   0352 E1                 1758 	pop	hl
   0353 4D                 1759 	ld	c,l
                           1760 ;	../../text/text.c 97
                           1761 ;	genIpush
                           1762 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0354 C5                 1763 	push	bc
                           1764 ;	AOP_STK for 
   0355 F8 13              1765 	lda	hl,19(sp)
   0357 7E                 1766 	ld	a,(hl)
   0358 F5                 1767 	push	af
   0359 33                 1768 	inc	sp
                           1769 ;	genIpush
                           1770 ;	AOP_STK for 
   035A 2B                 1771 	dec	hl
   035B 7E                 1772 	ld	a,(hl)
   035C F5                 1773 	push	af
   035D 33                 1774 	inc	sp
                           1775 ;	genIpush
                           1776 ;	AOP_STK for _battle_print_sloc1_1_0
   035E F8 0D              1777 	lda	hl,13(sp)
   0360 7E                 1778 	ld	a,(hl)
   0361 F5                 1779 	push	af
   0362 33                 1780 	inc	sp
                           1781 ;	genCall
   0363 CD 00 00           1782 	call	_move_sprite
   0366 E8 03              1783 	lda	sp,3(sp)
   0368 E1                 1784 	pop	hl
   0369 4D                 1785 	ld	c,l
                           1786 ;	genLabel
   036A                    1787 00104$:
                           1788 ;	../../text/text.c 99
                           1789 ;	genCmpEq
                           1790 ; genCmpEq: left 1, right 1, result 1
   036A 79                 1791 	ld	a,c
   036B FE 27              1792 	cp	a,#0x27
   036D C2 74 03           1793 	jp	nz,00141$
   0370 3E 01              1794 	ld	a,#0x01
   0372 18 01              1795 	jr	00142$
   0374                    1796 00141$:
   0374 AF                 1797 	xor	a,a
   0375                    1798 00142$:
                           1799 ;	genIfx
   0375 B7                 1800 	or	a,a
   0376 CA A9 03           1801 	jp	z,00106$
                           1802 ;	../../text/text.c 101
                           1803 ;	genPlus
                           1804 ;	AOP_HL for _i
                           1805 ;	AOP_HL for _cushion
                           1806 ;	AOP_STK for _battle_print_sloc0_1_0
                           1807 ;	Can't optimise plus by inc, falling back to the normal way
   0379 21 78 06           1808 	ld	hl,#_i
   037C 7E                 1809 	ld	a,(hl)
   037D 21 7A 06           1810 	ld	hl,#_cushion
   0380 86                 1811 	add	a,(hl)
   0381 F8 0A              1812 	lda	hl,10(sp)
   0383 77                 1813 	ld	(hl),a
                           1814 ;	genIpush
                           1815 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0384 C5                 1816 	push	bc
   0385 3E 2A              1817 	ld	a,#0x2A
   0387 F5                 1818 	push	af
   0388 33                 1819 	inc	sp
                           1820 ;	genIpush
                           1821 ;	AOP_STK for _battle_print_sloc0_1_0
   0389 7E                 1822 	ld	a,(hl)
   038A F5                 1823 	push	af
   038B 33                 1824 	inc	sp
                           1825 ;	genCall
   038C CD 00 00           1826 	call	_set_sprite_tile
   038F E8 02              1827 	lda	sp,2(sp)
   0391 E1                 1828 	pop	hl
   0392 4D                 1829 	ld	c,l
                           1830 ;	../../text/text.c 102
                           1831 ;	genIpush
                           1832 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0393 C5                 1833 	push	bc
                           1834 ;	AOP_STK for 
   0394 F8 13              1835 	lda	hl,19(sp)
   0396 7E                 1836 	ld	a,(hl)
   0397 F5                 1837 	push	af
   0398 33                 1838 	inc	sp
                           1839 ;	genIpush
                           1840 ;	AOP_STK for 
   0399 2B                 1841 	dec	hl
   039A 7E                 1842 	ld	a,(hl)
   039B F5                 1843 	push	af
   039C 33                 1844 	inc	sp
                           1845 ;	genIpush
                           1846 ;	AOP_STK for _battle_print_sloc0_1_0
   039D F8 0E              1847 	lda	hl,14(sp)
   039F 7E                 1848 	ld	a,(hl)
   03A0 F5                 1849 	push	af
   03A1 33                 1850 	inc	sp
                           1851 ;	genCall
   03A2 CD 00 00           1852 	call	_move_sprite
   03A5 E8 03              1853 	lda	sp,3(sp)
   03A7 E1                 1854 	pop	hl
   03A8 4D                 1855 	ld	c,l
                           1856 ;	genLabel
   03A9                    1857 00106$:
                           1858 ;	../../text/text.c 104
                           1859 ;	genCmpEq
                           1860 ; genCmpEq: left 1, right 1, result 1
   03A9 79                 1861 	ld	a,c
   03AA FE 21              1862 	cp	a,#0x21
   03AC C2 B3 03           1863 	jp	nz,00143$
   03AF 3E 01              1864 	ld	a,#0x01
   03B1 18 01              1865 	jr	00144$
   03B3                    1866 00143$:
   03B3 AF                 1867 	xor	a,a
   03B4                    1868 00144$:
                           1869 ;	genIfx
   03B4 B7                 1870 	or	a,a
   03B5 CA E8 03           1871 	jp	z,00108$
                           1872 ;	../../text/text.c 106
                           1873 ;	genPlus
                           1874 ;	AOP_HL for _i
                           1875 ;	AOP_HL for _cushion
                           1876 ;	AOP_STK for _battle_print_sloc2_1_0
                           1877 ;	Can't optimise plus by inc, falling back to the normal way
   03B8 21 78 06           1878 	ld	hl,#_i
   03BB 7E                 1879 	ld	a,(hl)
   03BC 21 7A 06           1880 	ld	hl,#_cushion
   03BF 86                 1881 	add	a,(hl)
   03C0 F8 08              1882 	lda	hl,8(sp)
   03C2 77                 1883 	ld	(hl),a
                           1884 ;	genIpush
                           1885 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   03C3 C5                 1886 	push	bc
   03C4 3E 2B              1887 	ld	a,#0x2B
   03C6 F5                 1888 	push	af
   03C7 33                 1889 	inc	sp
                           1890 ;	genIpush
                           1891 ;	AOP_STK for _battle_print_sloc2_1_0
   03C8 7E                 1892 	ld	a,(hl)
   03C9 F5                 1893 	push	af
   03CA 33                 1894 	inc	sp
                           1895 ;	genCall
   03CB CD 00 00           1896 	call	_set_sprite_tile
   03CE E8 02              1897 	lda	sp,2(sp)
   03D0 E1                 1898 	pop	hl
   03D1 4D                 1899 	ld	c,l
                           1900 ;	../../text/text.c 107
                           1901 ;	genIpush
                           1902 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   03D2 C5                 1903 	push	bc
                           1904 ;	AOP_STK for 
   03D3 F8 13              1905 	lda	hl,19(sp)
   03D5 7E                 1906 	ld	a,(hl)
   03D6 F5                 1907 	push	af
   03D7 33                 1908 	inc	sp
                           1909 ;	genIpush
                           1910 ;	AOP_STK for 
   03D8 2B                 1911 	dec	hl
   03D9 7E                 1912 	ld	a,(hl)
   03DA F5                 1913 	push	af
   03DB 33                 1914 	inc	sp
                           1915 ;	genIpush
                           1916 ;	AOP_STK for _battle_print_sloc2_1_0
   03DC F8 0C              1917 	lda	hl,12(sp)
   03DE 7E                 1918 	ld	a,(hl)
   03DF F5                 1919 	push	af
   03E0 33                 1920 	inc	sp
                           1921 ;	genCall
   03E1 CD 00 00           1922 	call	_move_sprite
   03E4 E8 03              1923 	lda	sp,3(sp)
   03E6 E1                 1924 	pop	hl
   03E7 4D                 1925 	ld	c,l
                           1926 ;	genLabel
   03E8                    1927 00108$:
                           1928 ;	../../text/text.c 109
                           1929 ;	genCmpEq
                           1930 ; genCmpEq: left 1, right 1, result 1
   03E8 79                 1931 	ld	a,c
   03E9 FE 22              1932 	cp	a,#0x22
   03EB C2 F2 03           1933 	jp	nz,00145$
   03EE 3E 01              1934 	ld	a,#0x01
   03F0 18 01              1935 	jr	00146$
   03F2                    1936 00145$:
   03F2 AF                 1937 	xor	a,a
   03F3                    1938 00146$:
                           1939 ;	genIfx
   03F3 B7                 1940 	or	a,a
   03F4 CA 27 04           1941 	jp	z,00110$
                           1942 ;	../../text/text.c 111
                           1943 ;	genPlus
                           1944 ;	AOP_HL for _i
                           1945 ;	AOP_HL for _cushion
                           1946 ;	AOP_STK for _battle_print_sloc3_1_0
                           1947 ;	Can't optimise plus by inc, falling back to the normal way
   03F7 21 78 06           1948 	ld	hl,#_i
   03FA 7E                 1949 	ld	a,(hl)
   03FB 21 7A 06           1950 	ld	hl,#_cushion
   03FE 86                 1951 	add	a,(hl)
   03FF F8 07              1952 	lda	hl,7(sp)
   0401 77                 1953 	ld	(hl),a
                           1954 ;	genIpush
                           1955 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0402 C5                 1956 	push	bc
   0403 3E 2C              1957 	ld	a,#0x2C
   0405 F5                 1958 	push	af
   0406 33                 1959 	inc	sp
                           1960 ;	genIpush
                           1961 ;	AOP_STK for _battle_print_sloc3_1_0
   0407 7E                 1962 	ld	a,(hl)
   0408 F5                 1963 	push	af
   0409 33                 1964 	inc	sp
                           1965 ;	genCall
   040A CD 00 00           1966 	call	_set_sprite_tile
   040D E8 02              1967 	lda	sp,2(sp)
   040F E1                 1968 	pop	hl
   0410 4D                 1969 	ld	c,l
                           1970 ;	../../text/text.c 112
                           1971 ;	genIpush
                           1972 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0411 C5                 1973 	push	bc
                           1974 ;	AOP_STK for 
   0412 F8 13              1975 	lda	hl,19(sp)
   0414 7E                 1976 	ld	a,(hl)
   0415 F5                 1977 	push	af
   0416 33                 1978 	inc	sp
                           1979 ;	genIpush
                           1980 ;	AOP_STK for 
   0417 2B                 1981 	dec	hl
   0418 7E                 1982 	ld	a,(hl)
   0419 F5                 1983 	push	af
   041A 33                 1984 	inc	sp
                           1985 ;	genIpush
                           1986 ;	AOP_STK for _battle_print_sloc3_1_0
   041B F8 0B              1987 	lda	hl,11(sp)
   041D 7E                 1988 	ld	a,(hl)
   041E F5                 1989 	push	af
   041F 33                 1990 	inc	sp
                           1991 ;	genCall
   0420 CD 00 00           1992 	call	_move_sprite
   0423 E8 03              1993 	lda	sp,3(sp)
   0425 E1                 1994 	pop	hl
   0426 4D                 1995 	ld	c,l
                           1996 ;	genLabel
   0427                    1997 00110$:
                           1998 ;	../../text/text.c 114
                           1999 ;	genCmpEq
                           2000 ; genCmpEq: left 1, right 1, result 1
   0427 79                 2001 	ld	a,c
   0428 FE 3F              2002 	cp	a,#0x3F
   042A C2 31 04           2003 	jp	nz,00147$
   042D 3E 01              2004 	ld	a,#0x01
   042F 18 01              2005 	jr	00148$
   0431                    2006 00147$:
   0431 AF                 2007 	xor	a,a
   0432                    2008 00148$:
                           2009 ;	genIfx
   0432 B7                 2010 	or	a,a
   0433 CA 66 04           2011 	jp	z,00112$
                           2012 ;	../../text/text.c 116
                           2013 ;	genPlus
                           2014 ;	AOP_HL for _i
                           2015 ;	AOP_HL for _cushion
                           2016 ;	AOP_STK for _battle_print_sloc4_1_0
                           2017 ;	Can't optimise plus by inc, falling back to the normal way
   0436 21 78 06           2018 	ld	hl,#_i
   0439 7E                 2019 	ld	a,(hl)
   043A 21 7A 06           2020 	ld	hl,#_cushion
   043D 86                 2021 	add	a,(hl)
   043E F8 06              2022 	lda	hl,6(sp)
   0440 77                 2023 	ld	(hl),a
                           2024 ;	genIpush
                           2025 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0441 C5                 2026 	push	bc
   0442 3E 2D              2027 	ld	a,#0x2D
   0444 F5                 2028 	push	af
   0445 33                 2029 	inc	sp
                           2030 ;	genIpush
                           2031 ;	AOP_STK for _battle_print_sloc4_1_0
   0446 7E                 2032 	ld	a,(hl)
   0447 F5                 2033 	push	af
   0448 33                 2034 	inc	sp
                           2035 ;	genCall
   0449 CD 00 00           2036 	call	_set_sprite_tile
   044C E8 02              2037 	lda	sp,2(sp)
   044E E1                 2038 	pop	hl
   044F 4D                 2039 	ld	c,l
                           2040 ;	../../text/text.c 117
                           2041 ;	genIpush
                           2042 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0450 C5                 2043 	push	bc
                           2044 ;	AOP_STK for 
   0451 F8 13              2045 	lda	hl,19(sp)
   0453 7E                 2046 	ld	a,(hl)
   0454 F5                 2047 	push	af
   0455 33                 2048 	inc	sp
                           2049 ;	genIpush
                           2050 ;	AOP_STK for 
   0456 2B                 2051 	dec	hl
   0457 7E                 2052 	ld	a,(hl)
   0458 F5                 2053 	push	af
   0459 33                 2054 	inc	sp
                           2055 ;	genIpush
                           2056 ;	AOP_STK for _battle_print_sloc4_1_0
   045A F8 0A              2057 	lda	hl,10(sp)
   045C 7E                 2058 	ld	a,(hl)
   045D F5                 2059 	push	af
   045E 33                 2060 	inc	sp
                           2061 ;	genCall
   045F CD 00 00           2062 	call	_move_sprite
   0462 E8 03              2063 	lda	sp,3(sp)
   0464 E1                 2064 	pop	hl
   0465 4D                 2065 	ld	c,l
                           2066 ;	genLabel
   0466                    2067 00112$:
                           2068 ;	../../text/text.c 119
                           2069 ;	genPlus
                           2070 ;	AOP_HL for _j
                           2071 ;	AOP_STK for _battle_print_sloc5_1_0
                           2072 ;	Can't optimise plus by inc, falling back to the normal way
   0466 11 50 06           2073 	ld	de,#_chars
   0469 21 79 06           2074 	ld	hl,#_j
   046C 6E                 2075 	ld	l,(hl)
   046D 26 00              2076 	ld	h,#0x00
   046F 19                 2077 	add	hl,de
   0470 7D                 2078 	ld	a,l
   0471 54                 2079 	ld	d,h
   0472 F8 04              2080 	lda	hl,4(sp)
                           2081 ;	genPointerGet
                           2082 ;	AOP_STK for _battle_print_sloc5_1_0
                           2083 ;	AOP_STK for _battle_print_sloc6_1_0
   0474 22                 2084 	ld	(hl+),a
   0475 72                 2085 	ld	(hl),d
   0476 5F                 2086 	ld	e,a
   0477 1A                 2087 	ld	a,(de)
   0478 2B                 2088 	dec	hl
   0479 2B                 2089 	dec	hl
                           2090 ;	genCmpEq
                           2091 ;	AOP_STK for _battle_print_sloc6_1_0
                           2092 ; genCmpEq: left 1, right 1, result 1
   047A 77                 2093 	ld      (hl),a
                           2094 ; Removed redundent load
   047B B9                 2095 	cp	c
   047C 20 04              2096 	jr	nz,00149$
   047E 3E 01              2097 	ld	a,#0x01
   0480 18 01              2098 	jr	00150$
   0482                    2099 00149$:
   0482 AF                 2100 	xor	a,a
   0483                    2101 00150$:
                           2102 ;	genIfx
   0483 B7                 2103 	or	a,a
   0484 CA BB 04           2104 	jp	z,00117$
                           2105 ;	../../text/text.c 121
                           2106 ;	genPlus
                           2107 ;	AOP_HL for _i
                           2108 ;	AOP_HL for _cushion
                           2109 ;	AOP_STK for _battle_print_sloc7_1_0
                           2110 ;	Can't optimise plus by inc, falling back to the normal way
   0487 21 78 06           2111 	ld	hl,#_i
   048A 7E                 2112 	ld	a,(hl)
   048B 21 7A 06           2113 	ld	hl,#_cushion
   048E 86                 2114 	add	a,(hl)
   048F F8 02              2115 	lda	hl,2(sp)
   0491 77                 2116 	ld	(hl),a
                           2117 ;	genIpush
                           2118 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0492 C5                 2119 	push	bc
                           2120 ;	AOP_HL for _j
   0493 21 79 06           2121 	ld	hl,#_j
   0496 7E                 2122 	ld	a,(hl)
   0497 F5                 2123 	push	af
   0498 33                 2124 	inc	sp
                           2125 ;	genIpush
                           2126 ;	AOP_STK for _battle_print_sloc7_1_0
   0499 F8 05              2127 	lda	hl,5(sp)
   049B 7E                 2128 	ld	a,(hl)
   049C F5                 2129 	push	af
   049D 33                 2130 	inc	sp
                           2131 ;	genCall
   049E CD 00 00           2132 	call	_set_sprite_tile
   04A1 E8 02              2133 	lda	sp,2(sp)
   04A3 E1                 2134 	pop	hl
   04A4 4D                 2135 	ld	c,l
                           2136 ;	../../text/text.c 122
                           2137 ;	genIpush
                           2138 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   04A5 C5                 2139 	push	bc
                           2140 ;	AOP_STK for 
   04A6 F8 13              2141 	lda	hl,19(sp)
   04A8 7E                 2142 	ld	a,(hl)
   04A9 F5                 2143 	push	af
   04AA 33                 2144 	inc	sp
                           2145 ;	genIpush
                           2146 ;	AOP_STK for 
   04AB 2B                 2147 	dec	hl
   04AC 7E                 2148 	ld	a,(hl)
   04AD F5                 2149 	push	af
   04AE 33                 2150 	inc	sp
                           2151 ;	genIpush
                           2152 ;	AOP_STK for _battle_print_sloc7_1_0
   04AF F8 06              2153 	lda	hl,6(sp)
   04B1 7E                 2154 	ld	a,(hl)
   04B2 F5                 2155 	push	af
   04B3 33                 2156 	inc	sp
                           2157 ;	genCall
   04B4 CD 00 00           2158 	call	_move_sprite
   04B7 E8 03              2159 	lda	sp,3(sp)
   04B9 E1                 2160 	pop	hl
   04BA 4D                 2161 	ld	c,l
                           2162 ;	genLabel
   04BB                    2163 00117$:
                           2164 ;	../../text/text.c 90
                           2165 ;	genPlus
                           2166 ;	AOP_HL for _j
                           2167 ;	AOP_STK for _battle_print_sloc8_1_0
                           2168 ;	genPlusIncr
                           2169 ;	Can't optimise plus by inc, falling back to the normal way
   04BB 21 79 06           2170 	ld	hl,#_j
   04BE 7E                 2171 	ld	a,(hl)
   04BF C6 01              2172 	add	a,#0x01
   04C1 F8 01              2173 	lda	hl,1(sp)
                           2174 ;	genAssign
                           2175 ;	AOP_STK for _battle_print_sloc8_1_0
   04C3 77                 2176 	ld      (hl),a
   04C4 47                 2177 	ld      b,a
                           2178 ;	genAssign
                           2179 ;	AOP_HL for _j
   04C5 21 79 06           2180 	ld	hl,#_j
   04C8 70                 2181 	ld	(hl),b
                           2182 ;	genGoto
   04C9 C3 0B 03           2183 	jp	00115$
                           2184 ;	genLabel
   04CC                    2185 00118$:
                           2186 ;	../../text/text.c 125
                           2187 ;	genPlus
                           2188 ;	AOP_HL for _LETTER_COUNT
                           2189 ;	genPlusIncr
   04CC 21 7B 06           2190 	ld	hl,#_LETTER_COUNT
   04CF 34                 2191 	inc	(hl)
                           2192 ;	../../text/text.c 126
                           2193 ;	genPlus
                           2194 ;	AOP_STK for 
                           2195 ;	genPlusIncr
                           2196 ;	Can't optimise plus by inc, falling back to the normal way
   04D0 F8 10              2197 	lda	hl,16(sp)
   04D2 7E                 2198 	ld	a,(hl)
   04D3 C6 08              2199 	add	a,#0x08
   04D5 77                 2200 	ld	(hl),a
                           2201 ;	../../text/text.c 88
                           2202 ;	genPlus
                           2203 ;	AOP_HL for _i
                           2204 ;	genPlusIncr
   04D6 21 78 06           2205 	ld	hl,#_i
   04D9 34                 2206 	inc	(hl)
                           2207 ;	genGoto
   04DA C3 F2 02           2208 	jp	00119$
                           2209 ;	genLabel
   04DD                    2210 00123$:
                           2211 ;	genEndFunction
   04DD E8 0C              2212 	lda	sp,12(sp)
   04DF C9                 2213 	ret
   04E0                    2214 ___battle_print_end:
                           2215 ;	../../text/text.c 130
                           2216 ;	genLabel
                           2217 ;	genFunction
                           2218 ;	---------------------------------
                           2219 ; Function battle_bkg_clean
                           2220 ; ---------------------------------
   04E0                    2221 ___battle_bkg_clean_start:
   04E0                    2222 _battle_bkg_clean:
                           2223 	
                           2224 ;	../../text/text.c 132
                           2225 ;	genIpush
                           2226 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   04E0 21 48 04           2227 	ld	hl,#_chain_border_tiles
   04E3 E5                 2228 	push	hl
                           2229 ;	genIpush
   04E4 21 00 0A           2230 	ld	hl,#0x0A00
   04E7 E5                 2231 	push	hl
                           2232 ;	genCall
   04E8 CD 00 00           2233 	call	_set_bkg_data
   04EB E8 04              2234 	lda	sp,4(sp)
                           2235 ;	../../text/text.c 133
                           2236 ;	genIpush
                           2237 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   04ED 21 E8 04           2238 	ld	hl,#_small_chain_border
   04F0 E5                 2239 	push	hl
                           2240 ;	genIpush
   04F1 21 14 12           2241 	ld	hl,#0x1214
   04F4 E5                 2242 	push	hl
                           2243 ;	genIpush
   04F5 21 00 00           2244 	ld	hl,#0x0000
   04F8 E5                 2245 	push	hl
                           2246 ;	genCall
   04F9 CD 00 00           2247 	call	_set_bkg_tiles
   04FC E8 06              2248 	lda	sp,6(sp)
                           2249 ;	genLabel
   04FE                    2250 00101$:
                           2251 ;	genEndFunction
                           2252 	
   04FE C9                 2253 	ret
   04FF                    2254 ___battle_bkg_clean_end:
                           2255 ;	asakawa_battle.c 3
                           2256 ;	genLabel
                           2257 ;	genFunction
                           2258 ;	---------------------------------
                           2259 ; Function asakawa_battle_ctrl
                           2260 ; ---------------------------------
   04FF                    2261 ___asakawa_battle_ctrl_start:
   04FF                    2262 _asakawa_battle_ctrl:
                           2263 	
                           2264 ;	asakawa_battle.c 5
                           2265 ;	genLabel
   04FF                    2266 00102$:
                           2267 ;	asakawa_battle.c 7
                           2268 ;	genCall
                           2269 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   04FF CD 00 00           2270 	call	_wait_vbl_done
                           2271 ;	asakawa_battle.c 8
                           2272 ;	genCall
                           2273 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0502 CD 2B 08           2274 	call	_asakawa_battle_check
                           2275 ;	genGoto
   0505 C3 FF 04           2276 	jp	00102$
                           2277 ;	genLabel
   0508                    2278 00104$:
                           2279 ;	genEndFunction
                           2280 	
   0508 C9                 2281 	ret
   0509                    2282 ___asakawa_battle_ctrl_end:
                           2283 ;	asakawa_battle.c 16
                           2284 ;	genLabel
                           2285 ;	genFunction
                           2286 ;	---------------------------------
                           2287 ; Function battle_nav
                           2288 ; ---------------------------------
   0509                    2289 ___battle_nav_start:
   0509                    2290 _battle_nav:
                           2291 	
                           2292 ;	asakawa_battle.c 18
                           2293 ;	genCmpEq
                           2294 ;	AOP_HL for _arrow_y
                           2295 ; genCmpEq: left 1, right 1, result 0
   0509 21 2D 09           2296 	ld	hl,#_arrow_y
   050C 7E                 2297 	ld	a,(hl)
   050D FE 20              2298 	cp	a,#0x20
   050F C2 1F 05           2299 	jp	nz,00102$
   0512 18 03              2300 	jr	00113$
   0514                    2301 00112$:
   0514 C3 1F 05           2302 	jp	00102$
   0517                    2303 00113$:
                           2304 ;	asakawa_battle.c 20
                           2305 ;	genAssign
                           2306 ;	AOP_HL for _state
   0517 21 2E 09           2307 	ld	hl,#_state
   051A 36 01              2308 	ld	(hl),#0x01
                           2309 ;	asakawa_battle.c 21
                           2310 ;	genCall
                           2311 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   051C CD B2 05           2312 	call	_fight_opt
                           2313 ;	genLabel
   051F                    2314 00102$:
                           2315 ;	asakawa_battle.c 28
                           2316 ;	genCmpEq
                           2317 ;	AOP_HL for _arrow_y
                           2318 ; genCmpEq: left 1, right 1, result 0
   051F 21 2D 09           2319 	ld	hl,#_arrow_y
   0522 7E                 2320 	ld	a,(hl)
   0523 FE 40              2321 	cp	a,#0x40
   0525 C2 35 05           2322 	jp	nz,00104$
   0528 18 03              2323 	jr	00115$
   052A                    2324 00114$:
   052A C3 35 05           2325 	jp	00104$
   052D                    2326 00115$:
                           2327 ;	asakawa_battle.c 30
                           2328 ;	genAssign
                           2329 ;	AOP_HL for _state
   052D 21 2E 09           2330 	ld	hl,#_state
   0530 36 02              2331 	ld	(hl),#0x02
                           2332 ;	asakawa_battle.c 31
                           2333 ;	genCall
                           2334 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0532 CD 4C 05           2335 	call	_run
                           2336 ;	genLabel
   0535                    2337 00104$:
                           2338 ;	asakawa_battle.c 33
                           2339 ;	genCmpEq
                           2340 ;	AOP_HL for _arrow_y
                           2341 ; genCmpEq: left 1, right 1, result 0
   0535 21 2D 09           2342 	ld	hl,#_arrow_y
   0538 7E                 2343 	ld	a,(hl)
   0539 FE 50              2344 	cp	a,#0x50
   053B C2 4B 05           2345 	jp	nz,00107$
   053E 18 03              2346 	jr	00117$
   0540                    2347 00116$:
   0540 C3 4B 05           2348 	jp	00107$
   0543                    2349 00117$:
                           2350 ;	asakawa_battle.c 35
                           2351 ;	genAssign
                           2352 ;	AOP_HL for _state
   0543 21 2E 09           2353 	ld	hl,#_state
   0546 36 03              2354 	ld	(hl),#0x03
                           2355 ;	asakawa_battle.c 36
                           2356 ;	genCall
                           2357 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0548 CD 0E 06           2358 	call	_item_opt
                           2359 ;	genLabel
   054B                    2360 00107$:
                           2361 ;	genEndFunction
                           2362 	
   054B C9                 2363 	ret
   054C                    2364 ___battle_nav_end:
                           2365 ;	asakawa_battle.c 40
                           2366 ;	genLabel
                           2367 ;	genFunction
                           2368 ;	---------------------------------
                           2369 ; Function run
                           2370 ; ---------------------------------
   054C                    2371 ___run_start:
   054C                    2372 _run:
                           2373 	
                           2374 ;	asakawa_battle.c 42
                           2375 ;	genCall
                           2376 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   054C CD 5C 02           2377 	call	_sprite_clean
                           2378 ;	asakawa_battle.c 43
                           2379 ;	genCall
                           2380 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   054F CD E0 04           2381 	call	_battle_bkg_clean
                           2382 ;	asakawa_battle.c 44
                           2383 ;	genIpush
                           2384 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0552 21 12 20           2385 	ld	hl,#0x2012
   0555 E5                 2386 	push	hl
                           2387 ;	genIpush
   0556 21 8E 05           2388 	ld	hl,#__str_0
   0559 E5                 2389 	push	hl
                           2390 ;	genCall
   055A CD A3 02           2391 	call	_battle_print
   055D E8 04              2392 	lda	sp,4(sp)
                           2393 ;	asakawa_battle.c 45
                           2394 ;	genIpush
                           2395 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   055F 21 12 30           2396 	ld	hl,#0x3012
   0562 E5                 2397 	push	hl
                           2398 ;	genIpush
   0563 21 92 05           2399 	ld	hl,#__str_1
   0566 E5                 2400 	push	hl
                           2401 ;	genCall
   0567 CD A3 02           2402 	call	_battle_print
   056A E8 04              2403 	lda	sp,4(sp)
                           2404 ;	asakawa_battle.c 46
                           2405 ;	genIpush
                           2406 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   056C 21 12 40           2407 	ld	hl,#0x4012
   056F E5                 2408 	push	hl
                           2409 ;	genIpush
   0570 21 98 05           2410 	ld	hl,#__str_2
   0573 E5                 2411 	push	hl
                           2412 ;	genCall
   0574 CD A3 02           2413 	call	_battle_print
   0577 E8 04              2414 	lda	sp,4(sp)
                           2415 ;	asakawa_battle.c 47
                           2416 ;	genCall
                           2417 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0579 CD E8 06           2418 	call	_show_fighter_stats
                           2419 ;	asakawa_battle.c 48
                           2420 ;	genAssign
                           2421 ;	AOP_HL for _LETTER_COUNT
   057C 21 7B 06           2422 	ld	hl,#_LETTER_COUNT
   057F 36 00              2423 	ld	(hl),#0x00
                           2424 ;	asakawa_battle.c 49
                           2425 ;	genIpush
                           2426 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0581 21 2C 01           2427 	ld	hl,#0x012C
   0584 E5                 2428 	push	hl
                           2429 ;	genCall
   0585 CD 00 00           2430 	call	_delay
   0588 E8 02              2431 	lda	sp,2(sp)
                           2432 ;	asakawa_battle.c 50
                           2433 ;	genCall
                           2434 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   058A CD A0 05           2435 	call	_back
                           2436 ;	genLabel
   058D                    2437 00101$:
                           2438 ;	genEndFunction
                           2439 	
   058D C9                 2440 	ret
   058E                    2441 ___run_end:
   058E                    2442 __str_0:
   058E 79 6F 75           2443 	.ascii "you"
   0591 00                 2444 	.db 0x00
   0592                    2445 __str_1:
   0592 63 61 6E 27 74     2446 	.ascii "can't"
   0597 00                 2447 	.db 0x00
   0598                    2448 __str_2:
   0598 65 73 63 61 70 65  2449 	.ascii "escape!"
        21
   059F 00                 2450 	.db 0x00
                           2451 ;	asakawa_battle.c 53
                           2452 ;	genLabel
                           2453 ;	genFunction
                           2454 ;	---------------------------------
                           2455 ; Function back
                           2456 ; ---------------------------------
   05A0                    2457 ___back_start:
   05A0                    2458 _back:
                           2459 	
                           2460 ;	asakawa_battle.c 55
                           2461 ;	genCmpLt
                           2462 ;	AOP_HL for _state
   05A0 21 2E 09           2463 	ld	hl,#_state
   05A3 7E                 2464 	ld	a,(hl)
   05A4 FE 04              2465 	cp	#0x04
   05A6 D2 B1 05           2466 	jp	nc,00103$
                           2467 ;	asakawa_battle.c 57
                           2468 ;	genCall
                           2469 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   05A9 CD 5B 06           2470 	call	_battle_menu
                           2471 ;	asakawa_battle.c 58
                           2472 ;	genAssign
                           2473 ;	AOP_HL for _state
   05AC 21 2E 09           2474 	ld	hl,#_state
   05AF 36 00              2475 	ld	(hl),#0x00
                           2476 ;	genLabel
   05B1                    2477 00103$:
                           2478 ;	genEndFunction
                           2479 	
   05B1 C9                 2480 	ret
   05B2                    2481 ___back_end:
                           2482 ;	asakawa_battle.c 62
                           2483 ;	genLabel
                           2484 ;	genFunction
                           2485 ;	---------------------------------
                           2486 ; Function fight_opt
                           2487 ; ---------------------------------
   05B2                    2488 ___fight_opt_start:
   05B2                    2489 _fight_opt:
                           2490 	
                           2491 ;	asakawa_battle.c 64
                           2492 ;	genCall
                           2493 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   05B2 CD 5C 02           2494 	call	_sprite_clean
                           2495 ;	asakawa_battle.c 65
                           2496 ;	genCall
                           2497 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   05B5 CD E0 04           2498 	call	_battle_bkg_clean
                           2499 ;	asakawa_battle.c 66
                           2500 ;	genIpush
                           2501 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   05B8 21 12 20           2502 	ld	hl,#0x2012
   05BB E5                 2503 	push	hl
                           2504 ;	genIpush
   05BC 21 F5 05           2505 	ld	hl,#__str_3
   05BF E5                 2506 	push	hl
                           2507 ;	genCall
   05C0 CD A3 02           2508 	call	_battle_print
   05C3 E8 04              2509 	lda	sp,4(sp)
                           2510 ;	asakawa_battle.c 67
                           2511 ;	genIpush
                           2512 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   05C5 21 12 20           2513 	ld	hl,#0x2012
   05C8 E5                 2514 	push	hl
                           2515 ;	genIpush
   05C9 21 F7 05           2516 	ld	hl,#__str_4
   05CC E5                 2517 	push	hl
                           2518 ;	genCall
   05CD CD A3 02           2519 	call	_battle_print
   05D0 E8 04              2520 	lda	sp,4(sp)
                           2521 ;	asakawa_battle.c 68
                           2522 ;	genIpush
                           2523 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   05D2 21 10 82           2524 	ld	hl,#0x8210
   05D5 E5                 2525 	push	hl
                           2526 ;	genIpush
   05D6 21 FE 05           2527 	ld	hl,#__str_5
   05D9 E5                 2528 	push	hl
                           2529 ;	genCall
   05DA CD A3 02           2530 	call	_battle_print
   05DD E8 04              2531 	lda	sp,4(sp)
                           2532 ;	asakawa_battle.c 69
                           2533 ;	genIpush
                           2534 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   05DF 21 10 8E           2535 	ld	hl,#0x8E10
   05E2 E5                 2536 	push	hl
                           2537 ;	genIpush
   05E3 21 07 06           2538 	ld	hl,#__str_6
   05E6 E5                 2539 	push	hl
                           2540 ;	genCall
   05E7 CD A3 02           2541 	call	_battle_print
   05EA E8 04              2542 	lda	sp,4(sp)
                           2543 ;	asakawa_battle.c 70
                           2544 ;	genCall
                           2545 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   05EC CD E8 06           2546 	call	_show_fighter_stats
                           2547 ;	asakawa_battle.c 71
                           2548 ;	genAssign
                           2549 ;	AOP_HL for _LETTER_COUNT
   05EF 21 7B 06           2550 	ld	hl,#_LETTER_COUNT
   05F2 36 00              2551 	ld	(hl),#0x00
                           2552 ;	genLabel
   05F4                    2553 00101$:
                           2554 ;	genEndFunction
                           2555 	
   05F4 C9                 2556 	ret
   05F5                    2557 ___fight_opt_end:
   05F5                    2558 __str_3:
   05F5 3E                 2559 	.ascii ">"
   05F6 00                 2560 	.db 0x00
   05F7                    2561 __str_4:
   05F7 20 70 75 6E 63 68  2562 	.ascii " punch"
   05FD 00                 2563 	.db 0x00
   05FE                    2564 __str_5:
   05FE 61 20 73 65 6C 65  2565 	.ascii "a select"
        63 74
   0606 00                 2566 	.db 0x00
   0607                    2567 __str_6:
   0607 62 20 62 61 63 6B  2568 	.ascii "b back"
   060D 00                 2569 	.db 0x00
                           2570 ;	asakawa_battle.c 74
                           2571 ;	genLabel
                           2572 ;	genFunction
                           2573 ;	---------------------------------
                           2574 ; Function item_opt
                           2575 ; ---------------------------------
   060E                    2576 ___item_opt_start:
   060E                    2577 _item_opt:
                           2578 	
                           2579 ;	asakawa_battle.c 76
                           2580 ;	genCall
                           2581 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   060E CD 5C 02           2582 	call	_sprite_clean
                           2583 ;	asakawa_battle.c 77
                           2584 ;	genCall
                           2585 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0611 CD E0 04           2586 	call	_battle_bkg_clean
                           2587 ;	asakawa_battle.c 78
                           2588 ;	genIpush
                           2589 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0614 21 12 20           2590 	ld	hl,#0x2012
   0617 E5                 2591 	push	hl
                           2592 ;	genIpush
   0618 21 44 06           2593 	ld	hl,#__str_7
   061B E5                 2594 	push	hl
                           2595 ;	genCall
   061C CD A3 02           2596 	call	_battle_print
   061F E8 04              2597 	lda	sp,4(sp)
                           2598 ;	asakawa_battle.c 79
                           2599 ;	genIpush
                           2600 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0621 21 10 82           2601 	ld	hl,#0x8210
   0624 E5                 2602 	push	hl
                           2603 ;	genIpush
   0625 21 4B 06           2604 	ld	hl,#__str_8
   0628 E5                 2605 	push	hl
                           2606 ;	genCall
   0629 CD A3 02           2607 	call	_battle_print
   062C E8 04              2608 	lda	sp,4(sp)
                           2609 ;	asakawa_battle.c 80
                           2610 ;	genIpush
                           2611 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   062E 21 10 8E           2612 	ld	hl,#0x8E10
   0631 E5                 2613 	push	hl
                           2614 ;	genIpush
   0632 21 54 06           2615 	ld	hl,#__str_9
   0635 E5                 2616 	push	hl
                           2617 ;	genCall
   0636 CD A3 02           2618 	call	_battle_print
   0639 E8 04              2619 	lda	sp,4(sp)
                           2620 ;	asakawa_battle.c 81
                           2621 ;	genCall
                           2622 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   063B CD E8 06           2623 	call	_show_fighter_stats
                           2624 ;	asakawa_battle.c 82
                           2625 ;	genAssign
                           2626 ;	AOP_HL for _LETTER_COUNT
   063E 21 7B 06           2627 	ld	hl,#_LETTER_COUNT
   0641 36 00              2628 	ld	(hl),#0x00
                           2629 ;	genLabel
   0643                    2630 00101$:
                           2631 ;	genEndFunction
                           2632 	
   0643 C9                 2633 	ret
   0644                    2634 ___item_opt_end:
   0644                    2635 __str_7:
   0644 20 65 6D 70 74 79  2636 	.ascii " empty"
   064A 00                 2637 	.db 0x00
   064B                    2638 __str_8:
   064B 61 20 73 65 6C 65  2639 	.ascii "a select"
        63 74
   0653 00                 2640 	.db 0x00
   0654                    2641 __str_9:
   0654 62 20 62 61 63 6B  2642 	.ascii "b back"
   065A 00                 2643 	.db 0x00
                           2644 ;	asakawa_battle.c 86
                           2645 ;	genLabel
                           2646 ;	genFunction
                           2647 ;	---------------------------------
                           2648 ; Function battle_menu
                           2649 ; ---------------------------------
   065B                    2650 ___battle_menu_start:
   065B                    2651 _battle_menu:
                           2652 	
                           2653 ;	asakawa_battle.c 89
                           2654 ;	genIpush
                           2655 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   065B 21 48 04           2656 	ld	hl,#_chain_border_tiles
   065E E5                 2657 	push	hl
                           2658 ;	genIpush
   065F 21 00 0A           2659 	ld	hl,#0x0A00
   0662 E5                 2660 	push	hl
                           2661 ;	genCall
   0663 CD 00 00           2662 	call	_set_bkg_data
   0666 E8 04              2663 	lda	sp,4(sp)
                           2664 ;	asakawa_battle.c 90
                           2665 ;	genIpush
                           2666 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0668 21 E8 04           2667 	ld	hl,#_small_chain_border
   066B E5                 2668 	push	hl
                           2669 ;	genIpush
   066C 21 14 12           2670 	ld	hl,#0x1214
   066F E5                 2671 	push	hl
                           2672 ;	genIpush
   0670 21 00 00           2673 	ld	hl,#0x0000
   0673 E5                 2674 	push	hl
                           2675 ;	genCall
   0674 CD 00 00           2676 	call	_set_bkg_tiles
   0677 E8 06              2677 	lda	sp,6(sp)
                           2678 ;	asakawa_battle.c 92
                           2679 ;	genCall
                           2680 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0679 CD 5C 02           2681 	call	_sprite_clean
                           2682 ;	asakawa_battle.c 93
                           2683 ;	genCall
                           2684 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   067C CD 7E 02           2685 	call	_hide_sprites
                           2686 ;	asakawa_battle.c 95
                           2687 ;	genIpush
                           2688 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           2689 ;	AOP_HL for _arrow_y
   067F 21 2D 09           2690 	ld	hl,#_arrow_y
   0682 7E                 2691 	ld	a,(hl)
   0683 F5                 2692 	push	af
   0684 33                 2693 	inc	sp
                           2694 ;	genIpush
                           2695 ;	AOP_HL for _arrow_x
   0685 21 2C 09           2696 	ld	hl,#_arrow_x
   0688 7E                 2697 	ld	a,(hl)
   0689 F5                 2698 	push	af
   068A 33                 2699 	inc	sp
                           2700 ;	genIpush
   068B 21 CC 06           2701 	ld	hl,#__str_10
   068E E5                 2702 	push	hl
                           2703 ;	genCall
   068F CD A3 02           2704 	call	_battle_print
   0692 E8 04              2705 	lda	sp,4(sp)
                           2706 ;	asakawa_battle.c 96
                           2707 ;	genIpush
                           2708 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0694 21 12 20           2709 	ld	hl,#0x2012
   0697 E5                 2710 	push	hl
                           2711 ;	genIpush
   0698 21 CE 06           2712 	ld	hl,#__str_11
   069B E5                 2713 	push	hl
                           2714 ;	genCall
   069C CD A3 02           2715 	call	_battle_print
   069F E8 04              2716 	lda	sp,4(sp)
                           2717 ;	asakawa_battle.c 97
                           2718 ;	genIpush
                           2719 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   06A1 21 12 30           2720 	ld	hl,#0x3012
   06A4 E5                 2721 	push	hl
                           2722 ;	genIpush
   06A5 21 D5 06           2723 	ld	hl,#__str_12
   06A8 E5                 2724 	push	hl
                           2725 ;	genCall
   06A9 CD A3 02           2726 	call	_battle_print
   06AC E8 04              2727 	lda	sp,4(sp)
                           2728 ;	asakawa_battle.c 98
                           2729 ;	genIpush
                           2730 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   06AE 21 12 40           2731 	ld	hl,#0x4012
   06B1 E5                 2732 	push	hl
                           2733 ;	genIpush
   06B2 21 DD 06           2734 	ld	hl,#__str_13
   06B5 E5                 2735 	push	hl
                           2736 ;	genCall
   06B6 CD A3 02           2737 	call	_battle_print
   06B9 E8 04              2738 	lda	sp,4(sp)
                           2739 ;	asakawa_battle.c 99
                           2740 ;	genIpush
                           2741 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   06BB 21 12 50           2742 	ld	hl,#0x5012
   06BE E5                 2743 	push	hl
                           2744 ;	genIpush
   06BF 21 E2 06           2745 	ld	hl,#__str_14
   06C2 E5                 2746 	push	hl
                           2747 ;	genCall
   06C3 CD A3 02           2748 	call	_battle_print
   06C6 E8 04              2749 	lda	sp,4(sp)
                           2750 ;	asakawa_battle.c 100
                           2751 ;	genCall
                           2752 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   06C8 CD E8 06           2753 	call	_show_fighter_stats
                           2754 ;	genLabel
   06CB                    2755 00101$:
                           2756 ;	genEndFunction
                           2757 	
   06CB C9                 2758 	ret
   06CC                    2759 ___battle_menu_end:
   06CC                    2760 __str_10:
   06CC 3E                 2761 	.ascii ">"
   06CD 00                 2762 	.db 0x00
   06CE                    2763 __str_11:
   06CE 20 66 69 67 68 74  2764 	.ascii " fight"
   06D4 00                 2765 	.db 0x00
   06D5                    2766 __str_12:
   06D5 20 64 65 66 65 6E  2767 	.ascii " defend"
        64
   06DC 00                 2768 	.db 0x00
   06DD                    2769 __str_13:
   06DD 20 72 75 6E        2770 	.ascii " run"
   06E1 00                 2771 	.db 0x00
   06E2                    2772 __str_14:
   06E2 20 69 74 65 6D     2773 	.ascii " item"
   06E7 00                 2774 	.db 0x00
                           2775 ;	asakawa_battle.c 103
                           2776 ;	genLabel
                           2777 ;	genFunction
                           2778 ;	---------------------------------
                           2779 ; Function show_fighter_stats
                           2780 ; ---------------------------------
   06E8                    2781 ___show_fighter_stats_start:
   06E8                    2782 _show_fighter_stats:
                           2783 	
                           2784 ;	asakawa_battle.c 106
                           2785 ;	genIpush
                           2786 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   06E8 21 58 28           2787 	ld	hl,#0x2858
   06EB E5                 2788 	push	hl
                           2789 ;	genIpush
   06EC 21 15 07           2790 	ld	hl,#__str_15
   06EF E5                 2791 	push	hl
                           2792 ;	genCall
   06F0 CD A3 02           2793 	call	_battle_print
   06F3 E8 04              2794 	lda	sp,4(sp)
                           2795 ;	asakawa_battle.c 107
                           2796 ;	genIpush
                           2797 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   06F5 21 58 38           2798 	ld	hl,#0x3858
   06F8 E5                 2799 	push	hl
                           2800 ;	genIpush
   06F9 21 1A 07           2801 	ld	hl,#__str_16
   06FC E5                 2802 	push	hl
                           2803 ;	genCall
   06FD CD A3 02           2804 	call	_battle_print
   0700 E8 04              2805 	lda	sp,4(sp)
                           2806 ;	asakawa_battle.c 108
                           2807 ;	genIpush
                           2808 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0702 21 78 38           2809 	ld	hl,#0x3878
   0705 E5                 2810 	push	hl
                           2811 ;	genIpush
   0706 21 1D 07           2812 	ld	hl,#__str_17
   0709 E5                 2813 	push	hl
                           2814 ;	genCall
   070A CD A3 02           2815 	call	_battle_print
   070D E8 04              2816 	lda	sp,4(sp)
                           2817 ;	asakawa_battle.c 109
                           2818 ;	genAssign
                           2819 ;	AOP_HL for _LETTER_COUNT
   070F 21 7B 06           2820 	ld	hl,#_LETTER_COUNT
   0712 36 00              2821 	ld	(hl),#0x00
                           2822 ;	genLabel
   0714                    2823 00101$:
                           2824 ;	genEndFunction
                           2825 	
   0714 C9                 2826 	ret
   0715                    2827 ___show_fighter_stats_end:
   0715                    2828 __str_15:
   0715 68 65 72 6F        2829 	.ascii "hero"
   0719 00                 2830 	.db 0x00
   071A                    2831 __str_16:
   071A 68 70              2832 	.ascii "hp"
   071C 00                 2833 	.db 0x00
   071D                    2834 __str_17:
   071D 31 30 2F 31 30     2835 	.ascii "10/10"
   0722 00                 2836 	.db 0x00
                           2837 ;	asakawa_battle.c 112
                           2838 ;	genLabel
                           2839 ;	genFunction
                           2840 ;	---------------------------------
                           2841 ; Function battle_toggle_up
                           2842 ; ---------------------------------
   0723                    2843 ___battle_toggle_up_start:
   0723                    2844 _battle_toggle_up:
                           2845 	
                           2846 ;	asakawa_battle.c 115
                           2847 ;	genCmpEq
                           2848 ;	AOP_HL for _arrow_y
                           2849 ; genCmpEq: left 1, right 1, result 0
   0723 21 2D 09           2850 	ld	hl,#_arrow_y
   0726 7E                 2851 	ld	a,(hl)
   0727 FE 20              2852 	cp	a,#0x20
   0729 C2 6B 07           2853 	jp	nz,00102$
   072C 18 03              2854 	jr	00108$
   072E                    2855 00107$:
   072E C3 6B 07           2856 	jp	00102$
   0731                    2857 00108$:
                           2858 ;	asakawa_battle.c 117
                           2859 ;	genAssign
                           2860 ;	AOP_HL for _arrow_y
   0731 21 2D 09           2861 	ld	hl,#_arrow_y
   0734 36 50              2862 	ld	(hl),#0x50
                           2863 ;	asakawa_battle.c 118
                           2864 ;	genCall
                           2865 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0736 CD E0 04           2866 	call	_battle_bkg_clean
                           2867 ;	asakawa_battle.c 119
                           2868 ;	genIpush
                           2869 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0739 21 64 00           2870 	ld	hl,#0x0064
   073C E5                 2871 	push	hl
                           2872 ;	genCall
   073D CD 00 00           2873 	call	_delay
   0740 E8 02              2874 	lda	sp,2(sp)
                           2875 ;	asakawa_battle.c 120
                           2876 ;	genCall
                           2877 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0742 CD E0 04           2878 	call	_battle_bkg_clean
                           2879 ;	asakawa_battle.c 121
                           2880 ;	genIpush
                           2881 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           2882 ;	AOP_HL for _arrow_y
   0745 21 2D 09           2883 	ld	hl,#_arrow_y
   0748 7E                 2884 	ld	a,(hl)
   0749 F5                 2885 	push	af
   074A 33                 2886 	inc	sp
                           2887 ;	genIpush
                           2888 ;	AOP_HL for _arrow_x
   074B 21 2C 09           2889 	ld	hl,#_arrow_x
   074E 7E                 2890 	ld	a,(hl)
   074F F5                 2891 	push	af
   0750 33                 2892 	inc	sp
                           2893 ;	genIpush
   0751 21 A3 07           2894 	ld	hl,#__str_18
   0754 E5                 2895 	push	hl
                           2896 ;	genCall
   0755 CD A3 02           2897 	call	_battle_print
   0758 E8 04              2898 	lda	sp,4(sp)
                           2899 ;	asakawa_battle.c 122
                           2900 ;	genAssign
                           2901 ;	AOP_HL for _LETTER_COUNT
   075A 21 7B 06           2902 	ld	hl,#_LETTER_COUNT
   075D 36 00              2903 	ld	(hl),#0x00
                           2904 ;	asakawa_battle.c 123
                           2905 ;	genIpush
                           2906 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   075F 21 64 00           2907 	ld	hl,#0x0064
   0762 E5                 2908 	push	hl
                           2909 ;	genCall
   0763 CD 00 00           2910 	call	_delay
   0766 E8 02              2911 	lda	sp,2(sp)
                           2912 ;	genGoto
   0768 C3 A2 07           2913 	jp	00104$
                           2914 ;	genLabel
   076B                    2915 00102$:
                           2916 ;	asakawa_battle.c 127
                           2917 ;	genCall
                           2918 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   076B CD E0 04           2919 	call	_battle_bkg_clean
                           2920 ;	asakawa_battle.c 128
                           2921 ;	genIpush
                           2922 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   076E 21 64 00           2923 	ld	hl,#0x0064
   0771 E5                 2924 	push	hl
                           2925 ;	genCall
   0772 CD 00 00           2926 	call	_delay
   0775 E8 02              2927 	lda	sp,2(sp)
                           2928 ;	asakawa_battle.c 129
                           2929 ;	genCall
                           2930 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0777 CD E0 04           2931 	call	_battle_bkg_clean
                           2932 ;	asakawa_battle.c 130
                           2933 ;	genMinus
                           2934 ;	AOP_HL for _arrow_y
   077A 21 2D 09           2935 	ld	hl,#_arrow_y
   077D 7E                 2936 	ld	a,(hl)
   077E C6 F0              2937 	add	a,#0xF0
   0780 4F                 2938 	ld	c,a
                           2939 ;	genAssign
                           2940 ;	AOP_HL for _arrow_y
   0781 71                 2941 	ld	(hl),c
                           2942 ;	genIpush
                           2943 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0782 79                 2944 	ld	a,c
   0783 F5                 2945 	push	af
   0784 33                 2946 	inc	sp
                           2947 ;	genIpush
                           2948 ;	AOP_HL for _arrow_x
   0785 21 2C 09           2949 	ld	hl,#_arrow_x
   0788 7E                 2950 	ld	a,(hl)
   0789 F5                 2951 	push	af
   078A 33                 2952 	inc	sp
                           2953 ;	genIpush
   078B 21 A5 07           2954 	ld	hl,#__str_19
   078E E5                 2955 	push	hl
                           2956 ;	genCall
   078F CD A3 02           2957 	call	_battle_print
   0792 E8 04              2958 	lda	sp,4(sp)
                           2959 ;	asakawa_battle.c 131
                           2960 ;	genAssign
                           2961 ;	AOP_HL for _LETTER_COUNT
   0794 21 7B 06           2962 	ld	hl,#_LETTER_COUNT
   0797 36 00              2963 	ld	(hl),#0x00
                           2964 ;	asakawa_battle.c 132
                           2965 ;	genIpush
                           2966 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0799 21 64 00           2967 	ld	hl,#0x0064
   079C E5                 2968 	push	hl
                           2969 ;	genCall
   079D CD 00 00           2970 	call	_delay
   07A0 E8 02              2971 	lda	sp,2(sp)
                           2972 ;	genLabel
   07A2                    2973 00104$:
                           2974 ;	genEndFunction
                           2975 	
   07A2 C9                 2976 	ret
   07A3                    2977 ___battle_toggle_up_end:
   07A3                    2978 __str_18:
   07A3 3E                 2979 	.ascii ">"
   07A4 00                 2980 	.db 0x00
   07A5                    2981 __str_19:
   07A5 3E                 2982 	.ascii ">"
   07A6 00                 2983 	.db 0x00
                           2984 ;	asakawa_battle.c 136
                           2985 ;	genLabel
                           2986 ;	genFunction
                           2987 ;	---------------------------------
                           2988 ; Function battle_toggle_down
                           2989 ; ---------------------------------
   07A7                    2990 ___battle_toggle_down_start:
   07A7                    2991 _battle_toggle_down:
                           2992 	
                           2993 ;	asakawa_battle.c 139
                           2994 ;	genCmpEq
                           2995 ;	AOP_HL for _arrow_y
                           2996 ; genCmpEq: left 1, right 1, result 0
   07A7 21 2D 09           2997 	ld	hl,#_arrow_y
   07AA 7E                 2998 	ld	a,(hl)
   07AB FE 50              2999 	cp	a,#0x50
   07AD C2 EF 07           3000 	jp	nz,00102$
   07B0 18 03              3001 	jr	00108$
   07B2                    3002 00107$:
   07B2 C3 EF 07           3003 	jp	00102$
   07B5                    3004 00108$:
                           3005 ;	asakawa_battle.c 141
                           3006 ;	genAssign
                           3007 ;	AOP_HL for _arrow_y
   07B5 21 2D 09           3008 	ld	hl,#_arrow_y
   07B8 36 20              3009 	ld	(hl),#0x20
                           3010 ;	asakawa_battle.c 142
                           3011 ;	genCall
                           3012 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07BA CD E0 04           3013 	call	_battle_bkg_clean
                           3014 ;	asakawa_battle.c 143
                           3015 ;	genIpush
                           3016 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07BD 21 64 00           3017 	ld	hl,#0x0064
   07C0 E5                 3018 	push	hl
                           3019 ;	genCall
   07C1 CD 00 00           3020 	call	_delay
   07C4 E8 02              3021 	lda	sp,2(sp)
                           3022 ;	asakawa_battle.c 144
                           3023 ;	genCall
                           3024 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07C6 CD E0 04           3025 	call	_battle_bkg_clean
                           3026 ;	asakawa_battle.c 145
                           3027 ;	genIpush
                           3028 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           3029 ;	AOP_HL for _arrow_y
   07C9 21 2D 09           3030 	ld	hl,#_arrow_y
   07CC 7E                 3031 	ld	a,(hl)
   07CD F5                 3032 	push	af
   07CE 33                 3033 	inc	sp
                           3034 ;	genIpush
                           3035 ;	AOP_HL for _arrow_x
   07CF 21 2C 09           3036 	ld	hl,#_arrow_x
   07D2 7E                 3037 	ld	a,(hl)
   07D3 F5                 3038 	push	af
   07D4 33                 3039 	inc	sp
                           3040 ;	genIpush
   07D5 21 27 08           3041 	ld	hl,#__str_20
   07D8 E5                 3042 	push	hl
                           3043 ;	genCall
   07D9 CD A3 02           3044 	call	_battle_print
   07DC E8 04              3045 	lda	sp,4(sp)
                           3046 ;	asakawa_battle.c 146
                           3047 ;	genAssign
                           3048 ;	AOP_HL for _LETTER_COUNT
   07DE 21 7B 06           3049 	ld	hl,#_LETTER_COUNT
   07E1 36 00              3050 	ld	(hl),#0x00
                           3051 ;	asakawa_battle.c 147
                           3052 ;	genIpush
                           3053 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07E3 21 64 00           3054 	ld	hl,#0x0064
   07E6 E5                 3055 	push	hl
                           3056 ;	genCall
   07E7 CD 00 00           3057 	call	_delay
   07EA E8 02              3058 	lda	sp,2(sp)
                           3059 ;	genGoto
   07EC C3 26 08           3060 	jp	00104$
                           3061 ;	genLabel
   07EF                    3062 00102$:
                           3063 ;	asakawa_battle.c 151
                           3064 ;	genCall
                           3065 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07EF CD E0 04           3066 	call	_battle_bkg_clean
                           3067 ;	asakawa_battle.c 152
                           3068 ;	genIpush
                           3069 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07F2 21 64 00           3070 	ld	hl,#0x0064
   07F5 E5                 3071 	push	hl
                           3072 ;	genCall
   07F6 CD 00 00           3073 	call	_delay
   07F9 E8 02              3074 	lda	sp,2(sp)
                           3075 ;	asakawa_battle.c 153
                           3076 ;	genCall
                           3077 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07FB CD E0 04           3078 	call	_battle_bkg_clean
                           3079 ;	asakawa_battle.c 154
                           3080 ;	genPlus
                           3081 ;	AOP_HL for _arrow_y
                           3082 ;	genPlusIncr
                           3083 ;	Can't optimise plus by inc, falling back to the normal way
   07FE 21 2D 09           3084 	ld	hl,#_arrow_y
   0801 7E                 3085 	ld	a,(hl)
   0802 C6 10              3086 	add	a,#0x10
   0804 4F                 3087 	ld	c,a
                           3088 ;	genAssign
                           3089 ;	AOP_HL for _arrow_y
   0805 71                 3090 	ld	(hl),c
                           3091 ;	genIpush
                           3092 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0806 79                 3093 	ld	a,c
   0807 F5                 3094 	push	af
   0808 33                 3095 	inc	sp
                           3096 ;	genIpush
                           3097 ;	AOP_HL for _arrow_x
   0809 21 2C 09           3098 	ld	hl,#_arrow_x
   080C 7E                 3099 	ld	a,(hl)
   080D F5                 3100 	push	af
   080E 33                 3101 	inc	sp
                           3102 ;	genIpush
   080F 21 29 08           3103 	ld	hl,#__str_21
   0812 E5                 3104 	push	hl
                           3105 ;	genCall
   0813 CD A3 02           3106 	call	_battle_print
   0816 E8 04              3107 	lda	sp,4(sp)
                           3108 ;	asakawa_battle.c 155
                           3109 ;	genAssign
                           3110 ;	AOP_HL for _LETTER_COUNT
   0818 21 7B 06           3111 	ld	hl,#_LETTER_COUNT
   081B 36 00              3112 	ld	(hl),#0x00
                           3113 ;	asakawa_battle.c 156
                           3114 ;	genIpush
                           3115 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   081D 21 64 00           3116 	ld	hl,#0x0064
   0820 E5                 3117 	push	hl
                           3118 ;	genCall
   0821 CD 00 00           3119 	call	_delay
   0824 E8 02              3120 	lda	sp,2(sp)
                           3121 ;	genLabel
   0826                    3122 00104$:
                           3123 ;	genEndFunction
                           3124 	
   0826 C9                 3125 	ret
   0827                    3126 ___battle_toggle_down_end:
   0827                    3127 __str_20:
   0827 3E                 3128 	.ascii ">"
   0828 00                 3129 	.db 0x00
   0829                    3130 __str_21:
   0829 3E                 3131 	.ascii ">"
   082A 00                 3132 	.db 0x00
                           3133 ;	asakawa_battle.c 160
                           3134 ;	genLabel
                           3135 ;	genFunction
                           3136 ;	---------------------------------
                           3137 ; Function asakawa_battle_check
                           3138 ; ---------------------------------
   082B                    3139 ___asakawa_battle_check_start:
   082B                    3140 _asakawa_battle_check:
   082B E8 FD              3141 	lda	sp,-3(sp)
                           3142 ;	asakawa_battle.c 162
                           3143 ;	genAssign
   082D 01 40 FF           3144 	ld	bc,#0xFF40
                           3145 ;	genAssign
                           3146 ;	AOP_STK for _asakawa_battle_check_sloc0_1_0
   0830 F8 01              3147 	lda	hl,1(sp)
   0832 36 40              3148 	ld	(hl),#0x40
   0834 23                 3149 	inc	hl
   0835 36 FF              3150 	ld	(hl),#0xFF
                           3151 ;	genPointerGet
                           3152 ;	AOP_STK for _asakawa_battle_check_sloc0_1_0
                           3153 ;	AOP_STK for _asakawa_battle_check_sloc1_1_0
   0837 2B                 3154 	dec	hl
   0838 5E                 3155 	ld	e,(hl)
   0839 23                 3156 	inc	hl
   083A 56                 3157 	ld	d,(hl)
   083B 1A                 3158 	ld	a,(de)
   083C 2B                 3159 	dec	hl
   083D 2B                 3160 	dec	hl
                           3161 ;	genAnd
                           3162 ;	AOP_STK for _asakawa_battle_check_sloc1_1_0
   083E 77                 3163 	ld      (hl),a
                           3164 ; Removed redundent load
   083F E6 FB              3165 	and	a,#0xFB
                           3166 ;	genAssign (pointer)
   0841 02                 3167 	ld	(bc),a
                           3168 ;	asakawa_battle.c 164
                           3169 ;	genCall
                           3170 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0842 CD 00 00           3171 	call	_joypad
   0845 4B                 3172 	ld	c,e
                           3173 ;	genAnd
   0846 79                 3174 	ld	a,c
   0847 E6 10              3175 	and	a,#0x10
   0849 20 03              3176 	jr	nz,00123$
   084B C3 4D 09           3177 	jp	00105$
   084E                    3178 00123$:
                           3179 ;	asakawa_battle.c 166
                           3180 ;	genCmpEq
                           3181 ;	AOP_HL for _state
                           3182 ; genCmpEq: left 1, right 1, result 0
   084E 21 2E 09           3183 	ld	hl,#_state
   0851 7E                 3184 	ld	a,(hl)
   0852 FE 01              3185 	cp	a,#0x01
   0854 C2 4A 09           3186 	jp	nz,00102$
   0857 18 03              3187 	jr	00125$
   0859                    3188 00124$:
   0859 C3 4A 09           3189 	jp	00102$
   085C                    3190 00125$:
                           3191 ;	asakawa_battle.c 169
                           3192 ;	genCall
                           3193 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   085C CD 5C 02           3194 	call	_sprite_clean
                           3195 ;	asakawa_battle.c 171
                           3196 ;	genIpush
                           3197 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   085F 21 E4 08           3198 	ld	hl,#_blank_screen_tiles
   0862 E5                 3199 	push	hl
                           3200 ;	genIpush
   0863 21 00 04           3201 	ld	hl,#0x0400
   0866 E5                 3202 	push	hl
                           3203 ;	genCall
   0867 CD 00 00           3204 	call	_set_bkg_data
   086A E8 04              3205 	lda	sp,4(sp)
                           3206 ;	asakawa_battle.c 172
                           3207 ;	genIpush
                           3208 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   086C 21 7C 07           3209 	ld	hl,#_blank_screen
   086F E5                 3210 	push	hl
                           3211 ;	genIpush
   0870 21 14 12           3212 	ld	hl,#0x1214
   0873 E5                 3213 	push	hl
                           3214 ;	genIpush
   0874 21 00 00           3215 	ld	hl,#0x0000
   0877 E5                 3216 	push	hl
                           3217 ;	genCall
   0878 CD 00 00           3218 	call	_set_bkg_tiles
   087B E8 06              3219 	lda	sp,6(sp)
                           3220 ;	asakawa_battle.c 174
                           3221 ;	genIpush
                           3222 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   087D 21 FC 06           3223 	ld	hl,#_hero_back_idle
   0880 E5                 3224 	push	hl
                           3225 ;	genIpush
   0881 21 00 08           3226 	ld	hl,#0x0800
   0884 E5                 3227 	push	hl
                           3228 ;	genCall
   0885 CD 00 00           3229 	call	_set_sprite_data
   0888 E8 04              3230 	lda	sp,4(sp)
                           3231 ;	asakawa_battle.c 175
                           3232 ;	genIpush
                           3233 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   088A 21 7C 06           3234 	ld	hl,#_asakawa_front_idle
   088D E5                 3235 	push	hl
                           3236 ;	genIpush
   088E 21 08 08           3237 	ld	hl,#0x0808
   0891 E5                 3238 	push	hl
                           3239 ;	genCall
   0892 CD 00 00           3240 	call	_set_sprite_data
   0895 E8 04              3241 	lda	sp,4(sp)
                           3242 ;	asakawa_battle.c 178
                           3243 ;	genIpush
                           3244 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0897 21 00 00           3245 	ld	hl,#0x0000
   089A E5                 3246 	push	hl
                           3247 ;	genCall
   089B CD 00 00           3248 	call	_set_sprite_tile
   089E E8 02              3249 	lda	sp,2(sp)
                           3250 ;	asakawa_battle.c 179
                           3251 ;	genIpush
                           3252 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   08A0 21 01 01           3253 	ld	hl,#0x0101
   08A3 E5                 3254 	push	hl
                           3255 ;	genCall
   08A4 CD 00 00           3256 	call	_set_sprite_tile
   08A7 E8 02              3257 	lda	sp,2(sp)
                           3258 ;	asakawa_battle.c 180
                           3259 ;	genIpush
                           3260 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   08A9 21 02 02           3261 	ld	hl,#0x0202
   08AC E5                 3262 	push	hl
                           3263 ;	genCall
   08AD CD 00 00           3264 	call	_set_sprite_tile
   08B0 E8 02              3265 	lda	sp,2(sp)
                           3266 ;	asakawa_battle.c 181
                           3267 ;	genIpush
                           3268 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   08B2 21 03 03           3269 	ld	hl,#0x0303
   08B5 E5                 3270 	push	hl
                           3271 ;	genCall
   08B6 CD 00 00           3272 	call	_set_sprite_tile
   08B9 E8 02              3273 	lda	sp,2(sp)
                           3274 ;	asakawa_battle.c 183
                           3275 ;	genIpush
                           3276 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   08BB 21 50 48           3277 	ld	hl,#0x4850
   08BE E5                 3278 	push	hl
                           3279 ;	genIpush
   08BF 3E 00              3280 	ld	a,#0x00
   08C1 F5                 3281 	push	af
   08C2 33                 3282 	inc	sp
                           3283 ;	genCall
   08C3 CD 00 00           3284 	call	_move_sprite
   08C6 E8 03              3285 	lda	sp,3(sp)
                           3286 ;	asakawa_battle.c 184
                           3287 ;	genIpush
                           3288 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   08C8 21 50 50           3289 	ld	hl,#0x5050
   08CB E5                 3290 	push	hl
                           3291 ;	genIpush
   08CC 3E 01              3292 	ld	a,#0x01
   08CE F5                 3293 	push	af
   08CF 33                 3294 	inc	sp
                           3295 ;	genCall
   08D0 CD 00 00           3296 	call	_move_sprite
   08D3 E8 03              3297 	lda	sp,3(sp)
                           3298 ;	asakawa_battle.c 185
                           3299 ;	genIpush
                           3300 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   08D5 21 58 48           3301 	ld	hl,#0x4858
   08D8 E5                 3302 	push	hl
                           3303 ;	genIpush
   08D9 3E 02              3304 	ld	a,#0x02
   08DB F5                 3305 	push	af
   08DC 33                 3306 	inc	sp
                           3307 ;	genCall
   08DD CD 00 00           3308 	call	_move_sprite
   08E0 E8 03              3309 	lda	sp,3(sp)
                           3310 ;	asakawa_battle.c 186
                           3311 ;	genIpush
                           3312 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   08E2 21 58 50           3313 	ld	hl,#0x5058
   08E5 E5                 3314 	push	hl
                           3315 ;	genIpush
   08E6 3E 03              3316 	ld	a,#0x03
   08E8 F5                 3317 	push	af
   08E9 33                 3318 	inc	sp
                           3319 ;	genCall
   08EA CD 00 00           3320 	call	_move_sprite
   08ED E8 03              3321 	lda	sp,3(sp)
                           3322 ;	asakawa_battle.c 189
                           3323 ;	genIpush
                           3324 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   08EF 21 04 08           3325 	ld	hl,#0x0804
   08F2 E5                 3326 	push	hl
                           3327 ;	genCall
   08F3 CD 00 00           3328 	call	_set_sprite_tile
   08F6 E8 02              3329 	lda	sp,2(sp)
                           3330 ;	asakawa_battle.c 190
                           3331 ;	genIpush
                           3332 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   08F8 21 05 09           3333 	ld	hl,#0x0905
   08FB E5                 3334 	push	hl
                           3335 ;	genCall
   08FC CD 00 00           3336 	call	_set_sprite_tile
   08FF E8 02              3337 	lda	sp,2(sp)
                           3338 ;	asakawa_battle.c 191
                           3339 ;	genIpush
                           3340 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0901 21 06 0A           3341 	ld	hl,#0x0A06
   0904 E5                 3342 	push	hl
                           3343 ;	genCall
   0905 CD 00 00           3344 	call	_set_sprite_tile
   0908 E8 02              3345 	lda	sp,2(sp)
                           3346 ;	asakawa_battle.c 192
                           3347 ;	genIpush
                           3348 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   090A 21 07 0B           3349 	ld	hl,#0x0B07
   090D E5                 3350 	push	hl
                           3351 ;	genCall
   090E CD 00 00           3352 	call	_set_sprite_tile
   0911 E8 02              3353 	lda	sp,2(sp)
                           3354 ;	asakawa_battle.c 194
                           3355 ;	genIpush
                           3356 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0913 21 50 28           3357 	ld	hl,#0x2850
   0916 E5                 3358 	push	hl
                           3359 ;	genIpush
   0917 3E 04              3360 	ld	a,#0x04
   0919 F5                 3361 	push	af
   091A 33                 3362 	inc	sp
                           3363 ;	genCall
   091B CD 00 00           3364 	call	_move_sprite
   091E E8 03              3365 	lda	sp,3(sp)
                           3366 ;	asakawa_battle.c 195
                           3367 ;	genIpush
                           3368 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0920 21 50 30           3369 	ld	hl,#0x3050
   0923 E5                 3370 	push	hl
                           3371 ;	genIpush
   0924 3E 05              3372 	ld	a,#0x05
   0926 F5                 3373 	push	af
   0927 33                 3374 	inc	sp
                           3375 ;	genCall
   0928 CD 00 00           3376 	call	_move_sprite
   092B E8 03              3377 	lda	sp,3(sp)
                           3378 ;	asakawa_battle.c 196
                           3379 ;	genIpush
                           3380 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   092D 21 58 28           3381 	ld	hl,#0x2858
   0930 E5                 3382 	push	hl
                           3383 ;	genIpush
   0931 3E 06              3384 	ld	a,#0x06
   0933 F5                 3385 	push	af
   0934 33                 3386 	inc	sp
                           3387 ;	genCall
   0935 CD 00 00           3388 	call	_move_sprite
   0938 E8 03              3389 	lda	sp,3(sp)
                           3390 ;	asakawa_battle.c 197
                           3391 ;	genIpush
                           3392 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   093A 21 58 30           3393 	ld	hl,#0x3058
   093D E5                 3394 	push	hl
                           3395 ;	genIpush
   093E 3E 07              3396 	ld	a,#0x07
   0940 F5                 3397 	push	af
   0941 33                 3398 	inc	sp
                           3399 ;	genCall
   0942 CD 00 00           3400 	call	_move_sprite
   0945 E8 03              3401 	lda	sp,3(sp)
                           3402 ;	genGoto
   0947 C3 4D 09           3403 	jp	00105$
                           3404 ;	genLabel
   094A                    3405 00102$:
                           3406 ;	asakawa_battle.c 200
                           3407 ;	genCall
                           3408 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   094A CD 09 05           3409 	call	_battle_nav
                           3410 ;	genLabel
   094D                    3411 00105$:
                           3412 ;	asakawa_battle.c 203
                           3413 ;	genCall
                           3414 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   094D CD 00 00           3415 	call	_joypad
   0950 4B                 3416 	ld	c,e
                           3417 ;	genAnd
   0951 79                 3418 	ld	a,c
   0952 E6 20              3419 	and	a,#0x20
   0954 20 03              3420 	jr	nz,00126$
   0956 C3 5C 09           3421 	jp	00107$
   0959                    3422 00126$:
                           3423 ;	asakawa_battle.c 204
                           3424 ;	genCall
                           3425 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0959 CD A0 05           3426 	call	_back
                           3427 ;	genLabel
   095C                    3428 00107$:
                           3429 ;	asakawa_battle.c 207
                           3430 ;	genCall
                           3431 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   095C CD 00 00           3432 	call	_joypad
   095F 4B                 3433 	ld	c,e
                           3434 ;	genAnd
   0960 79                 3435 	ld	a,c
   0961 E6 08              3436 	and	a,#0x08
   0963 20 03              3437 	jr	nz,00127$
   0965 C3 78 09           3438 	jp	00109$
   0968                    3439 00127$:
                           3440 ;	genCmpEq
                           3441 ;	AOP_HL for _state
                           3442 ; genCmpEq: left 1, right 1, result 0
   0968 21 2E 09           3443 	ld	hl,#_state
   096B 7E                 3444 	ld	a,(hl)
   096C B7                 3445 	or	a,a
   096D C2 78 09           3446 	jp	nz,00109$
   0970 18 03              3447 	jr	00129$
   0972                    3448 00128$:
   0972 C3 78 09           3449 	jp	00109$
   0975                    3450 00129$:
                           3451 ;	asakawa_battle.c 208
                           3452 ;	genCall
                           3453 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0975 CD A7 07           3454 	call	_battle_toggle_down
                           3455 ;	genLabel
   0978                    3456 00109$:
                           3457 ;	asakawa_battle.c 213
                           3458 ;	genCall
                           3459 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0978 CD 00 00           3460 	call	_joypad
   097B 4B                 3461 	ld	c,e
                           3462 ;	genAnd
   097C 79                 3463 	ld	a,c
   097D E6 04              3464 	and	a,#0x04
   097F 20 03              3465 	jr	nz,00130$
   0981 C3 94 09           3466 	jp	00114$
   0984                    3467 00130$:
                           3468 ;	genCmpEq
                           3469 ;	AOP_HL for _state
                           3470 ; genCmpEq: left 1, right 1, result 0
   0984 21 2E 09           3471 	ld	hl,#_state
   0987 7E                 3472 	ld	a,(hl)
   0988 B7                 3473 	or	a,a
   0989 C2 94 09           3474 	jp	nz,00114$
   098C 18 03              3475 	jr	00132$
   098E                    3476 00131$:
   098E C3 94 09           3477 	jp	00114$
   0991                    3478 00132$:
                           3479 ;	asakawa_battle.c 214
                           3480 ;	genCall
                           3481 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0991 CD 23 07           3482 	call	_battle_toggle_up
                           3483 ;	genLabel
   0994                    3484 00114$:
                           3485 ;	genEndFunction
   0994 E8 03              3486 	lda	sp,3(sp)
   0996 C9                 3487 	ret
   0997                    3488 ___asakawa_battle_check_end:
                           3489 ;	asakawa_battle.c 221
                           3490 ;	genLabel
                           3491 ;	genFunction
                           3492 ;	---------------------------------
                           3493 ; Function show_sprites
                           3494 ; ---------------------------------
   0997                    3495 ___show_sprites_start:
   0997                    3496 _show_sprites:
   0997 E8 F8              3497 	lda	sp,-8(sp)
                           3498 ;	asakawa_battle.c 223
                           3499 ;	genAssign
   0999 01 40 FF           3500 	ld	bc,#0xFF40
                           3501 ;	genAssign
                           3502 ;	AOP_STK for _show_sprites_sloc0_1_0
   099C F8 06              3503 	lda	hl,6(sp)
   099E 36 40              3504 	ld	(hl),#0x40
   09A0 23                 3505 	inc	hl
   09A1 36 FF              3506 	ld	(hl),#0xFF
                           3507 ;	genPointerGet
                           3508 ;	AOP_STK for _show_sprites_sloc0_1_0
                           3509 ;	AOP_STK for _show_sprites_sloc1_1_0
   09A3 2B                 3510 	dec	hl
   09A4 5E                 3511 	ld	e,(hl)
   09A5 23                 3512 	inc	hl
   09A6 56                 3513 	ld	d,(hl)
   09A7 1A                 3514 	ld	a,(de)
   09A8 2B                 3515 	dec	hl
   09A9 2B                 3516 	dec	hl
                           3517 ;	genOr
                           3518 ;	AOP_STK for _show_sprites_sloc1_1_0
   09AA 77                 3519 	ld      (hl),a
   09AB 7F                 3520 	ld      a,a
   09AC F6 04              3521 	or	a,#0x04
                           3522 ;	genAssign (pointer)
   09AE 02                 3523 	ld	(bc),a
                           3524 ;	asakawa_battle.c 227
                           3525 ;	genAssign (pointer)
   09AF 11 24 09           3526 	ld	de,#_hero_pos
   09B2 3E 50              3527 	ld	a,#0x50
   09B4 12                 3528 	ld	(de),a
                           3529 ;	asakawa_battle.c 228
                           3530 ;	genPlus
                           3531 ;	genPlusIncr
   09B5 01 25 09           3532 	ld	bc,#_hero_pos + 1
                           3533 ;	genAssign (pointer)
   09B8 3E 48              3534 	ld	a,#0x48
   09BA 02                 3535 	ld	(bc),a
                           3536 ;	asakawa_battle.c 229
                           3537 ;	genPlus
                           3538 ;	AOP_STK for _show_sprites_sloc0_1_0
                           3539 ;	genPlusIncr
                           3540 ;	Can't optimise plus by inc, falling back to the normal way
   09BB 11 24 09           3541 	ld	de,#_hero_pos
   09BE 21 02 00           3542 	ld	hl,#0x0002
   09C1 19                 3543 	add	hl,de
   09C2 7D                 3544 	ld	a,l
   09C3 54                 3545 	ld	d,h
   09C4 F8 06              3546 	lda	hl,6(sp)
   09C6 22                 3547 	ld	(hl+),a
   09C7 72                 3548 	ld	(hl),d
                           3549 ;	genPointerGet
                           3550 ;	AOP_STK for _show_sprites_sloc1_1_0
   09C8 11 24 09           3551 	ld	de,#_hero_pos
   09CB 1A                 3552 	ld	a,(de)
   09CC 2B                 3553 	dec	hl
   09CD 2B                 3554 	dec	hl
                           3555 ;	genPlus
                           3556 ;	AOP_STK for _show_sprites_sloc1_1_0
                           3557 ;	AOP_STK for _show_sprites_sloc2_1_0
                           3558 ;	genPlusIncr
                           3559 ;	Can't optimise plus by inc, falling back to the normal way
   09CE 77                 3560 	ld      (hl),a
   09CF 7F                 3561 	ld      a,a
   09D0 C6 08              3562 	add	a,#0x08
   09D2 2B                 3563 	dec	hl
                           3564 ;	genAssign (pointer)
                           3565 ;	AOP_STK for _show_sprites_sloc0_1_0
                           3566 ;	AOP_STK for _show_sprites_sloc2_1_0
   09D3 22                 3567 	ld	(hl+),a
   09D4 23                 3568 	inc	hl
   09D5 5E                 3569 	ld	e,(hl)
   09D6 23                 3570 	inc	hl
   09D7 56                 3571 	ld	d,(hl)
   09D8 F8 04              3572 	lda	hl,4(sp)
   09DA 7E                 3573 	ld	a,(hl)
   09DB 12                 3574 	ld	(de),a
                           3575 ;	asakawa_battle.c 230
                           3576 ;	genPlus
                           3577 ;	AOP_STK for _show_sprites_sloc0_1_0
                           3578 ;	genPlusIncr
                           3579 ;	Can't optimise plus by inc, falling back to the normal way
   09DC 11 24 09           3580 	ld	de,#_hero_pos
   09DF 21 03 00           3581 	ld	hl,#0x0003
   09E2 19                 3582 	add	hl,de
   09E3 7D                 3583 	ld	a,l
   09E4 54                 3584 	ld	d,h
   09E5 F8 06              3585 	lda	hl,6(sp)
   09E7 22                 3586 	ld	(hl+),a
   09E8 72                 3587 	ld	(hl),d
                           3588 ;	genPointerGet
                           3589 ;	AOP_STK for _show_sprites_sloc1_1_0
   09E9 0A                 3590 	ld	a,(bc)
   09EA 2B                 3591 	dec	hl
   09EB 2B                 3592 	dec	hl
                           3593 ;	genAssign (pointer)
                           3594 ;	AOP_STK for _show_sprites_sloc0_1_0
                           3595 ;	AOP_STK for _show_sprites_sloc1_1_0
   09EC 22                 3596 	ld	(hl+),a
   09ED 5E                 3597 	ld	e,(hl)
   09EE 23                 3598 	inc	hl
   09EF 56                 3599 	ld	d,(hl)
   09F0 2B                 3600 	dec	hl
   09F1 2B                 3601 	dec	hl
   09F2 7E                 3602 	ld	a,(hl)
   09F3 12                 3603 	ld	(de),a
                           3604 ;	asakawa_battle.c 233
                           3605 ;	genIpush
                           3606 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   09F4 C5                 3607 	push	bc
   09F5 21 FC 06           3608 	ld	hl,#_hero_back_idle
   09F8 E5                 3609 	push	hl
                           3610 ;	genIpush
   09F9 21 00 08           3611 	ld	hl,#0x0800
   09FC E5                 3612 	push	hl
                           3613 ;	genCall
   09FD CD 00 00           3614 	call	_set_sprite_data
   0A00 E8 04              3615 	lda	sp,4(sp)
   0A02 C1                 3616 	pop	bc
                           3617 ;	asakawa_battle.c 234
                           3618 ;	genIpush
                           3619 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0A03 C5                 3620 	push	bc
   0A04 21 00 00           3621 	ld	hl,#0x0000
   0A07 E5                 3622 	push	hl
                           3623 ;	genCall
   0A08 CD 00 00           3624 	call	_set_sprite_tile
   0A0B E8 02              3625 	lda	sp,2(sp)
   0A0D C1                 3626 	pop	bc
                           3627 ;	asakawa_battle.c 235
                           3628 ;	genIpush
                           3629 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0A0E C5                 3630 	push	bc
   0A0F 21 01 02           3631 	ld	hl,#0x0201
   0A12 E5                 3632 	push	hl
                           3633 ;	genCall
   0A13 CD 00 00           3634 	call	_set_sprite_tile
   0A16 E8 02              3635 	lda	sp,2(sp)
   0A18 C1                 3636 	pop	bc
                           3637 ;	asakawa_battle.c 237
                           3638 ;	genAssign (pointer)
   0A19 11 28 09           3639 	ld	de,#_asakawa_pos
   0A1C 3E 50              3640 	ld	a,#0x50
   0A1E 12                 3641 	ld	(de),a
                           3642 ;	asakawa_battle.c 238
                           3643 ;	genPlus
                           3644 ;	AOP_STK for _show_sprites_sloc0_1_0
                           3645 ;	genPlusIncr
                           3646 ;	Can't optimise plus by inc, falling back to the normal way
   0A1F 11 28 09           3647 	ld	de,#_asakawa_pos
   0A22 21 01 00           3648 	ld	hl,#0x0001
   0A25 19                 3649 	add	hl,de
   0A26 7D                 3650 	ld	a,l
   0A27 54                 3651 	ld	d,h
   0A28 F8 06              3652 	lda	hl,6(sp)
   0A2A 22                 3653 	ld	(hl+),a
   0A2B 72                 3654 	ld	(hl),d
                           3655 ;	genAssign (pointer)
                           3656 ;	AOP_STK for _show_sprites_sloc0_1_0
   0A2C 2B                 3657 	dec	hl
   0A2D 5E                 3658 	ld	e,(hl)
   0A2E 23                 3659 	inc	hl
   0A2F 56                 3660 	ld	d,(hl)
   0A30 3E 28              3661 	ld	a,#0x28
   0A32 12                 3662 	ld	(de),a
                           3663 ;	asakawa_battle.c 239
                           3664 ;	genPlus
                           3665 ;	AOP_STK for _show_sprites_sloc3_1_0
                           3666 ;	genPlusIncr
                           3667 ;	Can't optimise plus by inc, falling back to the normal way
   0A33 11 28 09           3668 	ld	de,#_asakawa_pos
   0A36 21 02 00           3669 	ld	hl,#0x0002
   0A39 19                 3670 	add	hl,de
   0A3A 7D                 3671 	ld	a,l
   0A3B 54                 3672 	ld	d,h
   0A3C F8 02              3673 	lda	hl,2(sp)
   0A3E 22                 3674 	ld	(hl+),a
   0A3F 72                 3675 	ld	(hl),d
                           3676 ;	genPointerGet
                           3677 ;	AOP_STK for _show_sprites_sloc4_1_0
   0A40 11 28 09           3678 	ld	de,#_asakawa_pos
   0A43 1A                 3679 	ld	a,(de)
   0A44 2B                 3680 	dec	hl
   0A45 2B                 3681 	dec	hl
                           3682 ;	genPlus
                           3683 ;	AOP_STK for _show_sprites_sloc4_1_0
                           3684 ;	AOP_STK for _show_sprites_sloc5_1_0
                           3685 ;	genPlusIncr
                           3686 ;	Can't optimise plus by inc, falling back to the normal way
   0A46 77                 3687 	ld      (hl),a
   0A47 7F                 3688 	ld      a,a
   0A48 C6 08              3689 	add	a,#0x08
   0A4A 2B                 3690 	dec	hl
                           3691 ;	genAssign (pointer)
                           3692 ;	AOP_STK for _show_sprites_sloc3_1_0
                           3693 ;	AOP_STK for _show_sprites_sloc5_1_0
   0A4B 22                 3694 	ld	(hl+),a
   0A4C 23                 3695 	inc	hl
   0A4D 5E                 3696 	ld	e,(hl)
   0A4E 23                 3697 	inc	hl
   0A4F 56                 3698 	ld	d,(hl)
   0A50 F8 00              3699 	lda	hl,0(sp)
   0A52 7E                 3700 	ld	a,(hl)
   0A53 12                 3701 	ld	(de),a
                           3702 ;	asakawa_battle.c 240
                           3703 ;	genPlus
                           3704 ;	AOP_STK for _show_sprites_sloc3_1_0
                           3705 ;	genPlusIncr
                           3706 ;	Can't optimise plus by inc, falling back to the normal way
   0A54 11 28 09           3707 	ld	de,#_asakawa_pos
   0A57 21 03 00           3708 	ld	hl,#0x0003
   0A5A 19                 3709 	add	hl,de
   0A5B 7D                 3710 	ld	a,l
   0A5C 54                 3711 	ld	d,h
   0A5D F8 02              3712 	lda	hl,2(sp)
   0A5F 22                 3713 	ld	(hl+),a
   0A60 72                 3714 	ld	(hl),d
                           3715 ;	genPointerGet
                           3716 ;	AOP_STK for _show_sprites_sloc0_1_0
                           3717 ;	AOP_STK for _show_sprites_sloc4_1_0
   0A61 F8 06              3718 	lda	hl,6(sp)
   0A63 5E                 3719 	ld	e,(hl)
   0A64 23                 3720 	inc	hl
   0A65 56                 3721 	ld	d,(hl)
   0A66 1A                 3722 	ld	a,(de)
   0A67 F8 01              3723 	lda	hl,1(sp)
                           3724 ;	genAssign (pointer)
                           3725 ;	AOP_STK for _show_sprites_sloc3_1_0
                           3726 ;	AOP_STK for _show_sprites_sloc4_1_0
   0A69 22                 3727 	ld	(hl+),a
   0A6A 5E                 3728 	ld	e,(hl)
   0A6B 23                 3729 	inc	hl
   0A6C 56                 3730 	ld	d,(hl)
   0A6D 2B                 3731 	dec	hl
   0A6E 2B                 3732 	dec	hl
   0A6F 7E                 3733 	ld	a,(hl)
   0A70 12                 3734 	ld	(de),a
                           3735 ;	asakawa_battle.c 243
                           3736 ;	genIpush
                           3737 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0A71 C5                 3738 	push	bc
   0A72 21 7C 06           3739 	ld	hl,#_asakawa_front_idle
   0A75 E5                 3740 	push	hl
                           3741 ;	genIpush
   0A76 21 08 08           3742 	ld	hl,#0x0808
   0A79 E5                 3743 	push	hl
                           3744 ;	genCall
   0A7A CD 00 00           3745 	call	_set_sprite_data
   0A7D E8 04              3746 	lda	sp,4(sp)
   0A7F C1                 3747 	pop	bc
                           3748 ;	asakawa_battle.c 244
                           3749 ;	genIpush
                           3750 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0A80 C5                 3751 	push	bc
   0A81 21 02 08           3752 	ld	hl,#0x0802
   0A84 E5                 3753 	push	hl
                           3754 ;	genCall
   0A85 CD 00 00           3755 	call	_set_sprite_tile
   0A88 E8 02              3756 	lda	sp,2(sp)
   0A8A C1                 3757 	pop	bc
                           3758 ;	asakawa_battle.c 245
                           3759 ;	genIpush
                           3760 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0A8B C5                 3761 	push	bc
   0A8C 21 03 0A           3762 	ld	hl,#0x0A03
   0A8F E5                 3763 	push	hl
                           3764 ;	genCall
   0A90 CD 00 00           3765 	call	_set_sprite_tile
   0A93 E8 02              3766 	lda	sp,2(sp)
   0A95 C1                 3767 	pop	bc
                           3768 ;	asakawa_battle.c 251
                           3769 ;	genPointerGet
   0A96 0A                 3770 	ld	a,(bc)
   0A97 4F                 3771 	ld	c,a
                           3772 ;	genPointerGet
   0A98 11 24 09           3773 	ld	de,#_hero_pos
   0A9B 1A                 3774 	ld	a,(de)
   0A9C 47                 3775 	ld	b,a
                           3776 ;	genIpush
                           3777 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0A9D 79                 3778 	ld	a,c
   0A9E F5                 3779 	push	af
   0A9F 33                 3780 	inc	sp
                           3781 ;	genIpush
   0AA0 78                 3782 	ld	a,b
   0AA1 F5                 3783 	push	af
   0AA2 33                 3784 	inc	sp
                           3785 ;	genIpush
   0AA3 3E 00              3786 	ld	a,#0x00
   0AA5 F5                 3787 	push	af
   0AA6 33                 3788 	inc	sp
                           3789 ;	genCall
   0AA7 CD 00 00           3790 	call	_move_sprite
   0AAA E8 03              3791 	lda	sp,3(sp)
                           3792 ;	asakawa_battle.c 252
                           3793 ;	genIpush
                           3794 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           3795 ;	AOP_STK for _show_sprites_sloc1_1_0
   0AAC F8 05              3796 	lda	hl,5(sp)
   0AAE 7E                 3797 	ld	a,(hl)
   0AAF F5                 3798 	push	af
   0AB0 33                 3799 	inc	sp
                           3800 ;	genIpush
                           3801 ;	AOP_STK for _show_sprites_sloc2_1_0
   0AB1 2B                 3802 	dec	hl
   0AB2 7E                 3803 	ld	a,(hl)
   0AB3 F5                 3804 	push	af
   0AB4 33                 3805 	inc	sp
                           3806 ;	genIpush
   0AB5 3E 01              3807 	ld	a,#0x01
   0AB7 F5                 3808 	push	af
   0AB8 33                 3809 	inc	sp
                           3810 ;	genCall
   0AB9 CD 00 00           3811 	call	_move_sprite
   0ABC E8 03              3812 	lda	sp,3(sp)
                           3813 ;	asakawa_battle.c 254
                           3814 ;	genPointerGet
                           3815 ;	AOP_STK for _show_sprites_sloc0_1_0
   0ABE F8 06              3816 	lda	hl,6(sp)
   0AC0 5E                 3817 	ld	e,(hl)
   0AC1 23                 3818 	inc	hl
   0AC2 56                 3819 	ld	d,(hl)
   0AC3 1A                 3820 	ld	a,(de)
   0AC4 4F                 3821 	ld	c,a
                           3822 ;	genPointerGet
   0AC5 11 28 09           3823 	ld	de,#_asakawa_pos
   0AC8 1A                 3824 	ld	a,(de)
   0AC9 47                 3825 	ld	b,a
                           3826 ;	genIpush
                           3827 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0ACA 79                 3828 	ld	a,c
   0ACB F5                 3829 	push	af
   0ACC 33                 3830 	inc	sp
                           3831 ;	genIpush
   0ACD 78                 3832 	ld	a,b
   0ACE F5                 3833 	push	af
   0ACF 33                 3834 	inc	sp
                           3835 ;	genIpush
   0AD0 3E 02              3836 	ld	a,#0x02
   0AD2 F5                 3837 	push	af
   0AD3 33                 3838 	inc	sp
                           3839 ;	genCall
   0AD4 CD 00 00           3840 	call	_move_sprite
   0AD7 E8 03              3841 	lda	sp,3(sp)
                           3842 ;	asakawa_battle.c 255
                           3843 ;	genIpush
                           3844 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           3845 ;	AOP_STK for _show_sprites_sloc4_1_0
   0AD9 F8 01              3846 	lda	hl,1(sp)
   0ADB 7E                 3847 	ld	a,(hl)
   0ADC F5                 3848 	push	af
   0ADD 33                 3849 	inc	sp
                           3850 ;	genIpush
                           3851 ;	AOP_STK for _show_sprites_sloc5_1_0
   0ADE 2B                 3852 	dec	hl
   0ADF 7E                 3853 	ld	a,(hl)
   0AE0 F5                 3854 	push	af
   0AE1 33                 3855 	inc	sp
                           3856 ;	genIpush
   0AE2 3E 03              3857 	ld	a,#0x03
   0AE4 F5                 3858 	push	af
   0AE5 33                 3859 	inc	sp
                           3860 ;	genCall
   0AE6 CD 00 00           3861 	call	_move_sprite
   0AE9 E8 03              3862 	lda	sp,3(sp)
                           3863 ;	genLabel
   0AEB                    3864 00101$:
                           3865 ;	genEndFunction
   0AEB E8 08              3866 	lda	sp,8(sp)
   0AED C9                 3867 	ret
   0AEE                    3868 ___show_sprites_end:
                           3869 ;	asakawa_battle.c 258
                           3870 ;	genLabel
                           3871 ;	genFunction
                           3872 ;	---------------------------------
                           3873 ; Function main
                           3874 ; ---------------------------------
   0AEE                    3875 ___main_start:
   0AEE                    3876 _main:
   0AEE E8 FD              3877 	lda	sp,-3(sp)
                           3878 ;	asakawa_battle.c 260
                           3879 ;	genCall
                           3880 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0AF0 CD 00 00           3881 	call	_wait_vbl_done
                           3882 ;	asakawa_battle.c 262
                           3883 ;	genCall
                           3884 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0AF3 CD 00 00           3885 	call	_display_off
                           3886 ;	asakawa_battle.c 263
                           3887 ;	genAssign
   0AF6 01 40 FF           3888 	ld	bc,#0xFF40
                           3889 ;	genAssign
                           3890 ;	AOP_STK for _main_sloc0_1_0
   0AF9 F8 01              3891 	lda	hl,1(sp)
   0AFB 36 40              3892 	ld	(hl),#0x40
   0AFD 23                 3893 	inc	hl
   0AFE 36 FF              3894 	ld	(hl),#0xFF
                           3895 ;	genPointerGet
                           3896 ;	AOP_STK for _main_sloc0_1_0
                           3897 ;	AOP_STK for _main_sloc1_1_0
   0B00 2B                 3898 	dec	hl
   0B01 5E                 3899 	ld	e,(hl)
   0B02 23                 3900 	inc	hl
   0B03 56                 3901 	ld	d,(hl)
   0B04 1A                 3902 	ld	a,(de)
   0B05 2B                 3903 	dec	hl
   0B06 2B                 3904 	dec	hl
                           3905 ;	genAnd
                           3906 ;	AOP_STK for _main_sloc1_1_0
   0B07 77                 3907 	ld      (hl),a
   0B08 7F                 3908 	ld      a,a
   0B09 E6 FE              3909 	and	a,#0xFE
                           3910 ;	genAssign (pointer)
   0B0B 02                 3911 	ld	(bc),a
                           3912 ;	asakawa_battle.c 264
                           3913 ;	genAssign
   0B0C 01 40 FF           3914 	ld	bc,#0xFF40
                           3915 ;	genAssign
                           3916 ;	AOP_STK for _main_sloc0_1_0
   0B0F 23                 3917 	inc	hl
   0B10 36 40              3918 	ld	(hl),#0x40
   0B12 23                 3919 	inc	hl
   0B13 36 FF              3920 	ld	(hl),#0xFF
                           3921 ;	genPointerGet
                           3922 ;	AOP_STK for _main_sloc0_1_0
                           3923 ;	AOP_STK for _main_sloc1_1_0
   0B15 2B                 3924 	dec	hl
   0B16 5E                 3925 	ld	e,(hl)
   0B17 23                 3926 	inc	hl
   0B18 56                 3927 	ld	d,(hl)
   0B19 1A                 3928 	ld	a,(de)
   0B1A 2B                 3929 	dec	hl
   0B1B 2B                 3930 	dec	hl
                           3931 ;	genAnd
                           3932 ;	AOP_STK for _main_sloc1_1_0
   0B1C 77                 3933 	ld      (hl),a
   0B1D 7F                 3934 	ld      a,a
   0B1E E6 FD              3935 	and	a,#0xFD
                           3936 ;	genAssign (pointer)
   0B20 02                 3937 	ld	(bc),a
                           3938 ;	asakawa_battle.c 265
                           3939 ;	genAssign
   0B21 01 40 FF           3940 	ld	bc,#0xFF40
                           3941 ;	genAssign
                           3942 ;	AOP_STK for _main_sloc0_1_0
   0B24 23                 3943 	inc	hl
   0B25 36 40              3944 	ld	(hl),#0x40
   0B27 23                 3945 	inc	hl
   0B28 36 FF              3946 	ld	(hl),#0xFF
                           3947 ;	genPointerGet
                           3948 ;	AOP_STK for _main_sloc0_1_0
                           3949 ;	AOP_STK for _main_sloc1_1_0
   0B2A 2B                 3950 	dec	hl
   0B2B 5E                 3951 	ld	e,(hl)
   0B2C 23                 3952 	inc	hl
   0B2D 56                 3953 	ld	d,(hl)
   0B2E 1A                 3954 	ld	a,(de)
   0B2F 2B                 3955 	dec	hl
   0B30 2B                 3956 	dec	hl
                           3957 ;	genAnd
                           3958 ;	AOP_STK for _main_sloc1_1_0
   0B31 77                 3959 	ld      (hl),a
   0B32 7F                 3960 	ld      a,a
   0B33 E6 DF              3961 	and	a,#0xDF
                           3962 ;	genAssign (pointer)
   0B35 02                 3963 	ld	(bc),a
                           3964 ;	asakawa_battle.c 267
                           3965 ;	genCall
                           3966 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0B36 CD 5B 06           3967 	call	_battle_menu
                           3968 ;	asakawa_battle.c 269
                           3969 ;	genAssign
   0B39 01 40 FF           3970 	ld	bc,#0xFF40
                           3971 ;	genAssign
                           3972 ;	AOP_STK for _main_sloc0_1_0
   0B3C F8 01              3973 	lda	hl,1(sp)
   0B3E 36 40              3974 	ld	(hl),#0x40
   0B40 23                 3975 	inc	hl
   0B41 36 FF              3976 	ld	(hl),#0xFF
                           3977 ;	genPointerGet
                           3978 ;	AOP_STK for _main_sloc0_1_0
                           3979 ;	AOP_STK for _main_sloc1_1_0
   0B43 2B                 3980 	dec	hl
   0B44 5E                 3981 	ld	e,(hl)
   0B45 23                 3982 	inc	hl
   0B46 56                 3983 	ld	d,(hl)
   0B47 1A                 3984 	ld	a,(de)
   0B48 2B                 3985 	dec	hl
   0B49 2B                 3986 	dec	hl
                           3987 ;	genOr
                           3988 ;	AOP_STK for _main_sloc1_1_0
   0B4A 77                 3989 	ld      (hl),a
   0B4B 7F                 3990 	ld      a,a
   0B4C F6 01              3991 	or	a,#0x01
                           3992 ;	genAssign (pointer)
   0B4E 02                 3993 	ld	(bc),a
                           3994 ;	asakawa_battle.c 270
                           3995 ;	genAssign
   0B4F 01 40 FF           3996 	ld	bc,#0xFF40
                           3997 ;	genAssign
                           3998 ;	AOP_STK for _main_sloc0_1_0
   0B52 23                 3999 	inc	hl
   0B53 36 40              4000 	ld	(hl),#0x40
   0B55 23                 4001 	inc	hl
   0B56 36 FF              4002 	ld	(hl),#0xFF
                           4003 ;	genPointerGet
                           4004 ;	AOP_STK for _main_sloc0_1_0
                           4005 ;	AOP_STK for _main_sloc1_1_0
   0B58 2B                 4006 	dec	hl
   0B59 5E                 4007 	ld	e,(hl)
   0B5A 23                 4008 	inc	hl
   0B5B 56                 4009 	ld	d,(hl)
   0B5C 1A                 4010 	ld	a,(de)
   0B5D 2B                 4011 	dec	hl
   0B5E 2B                 4012 	dec	hl
                           4013 ;	genOr
                           4014 ;	AOP_STK for _main_sloc1_1_0
   0B5F 77                 4015 	ld      (hl),a
   0B60 7F                 4016 	ld      a,a
   0B61 F6 02              4017 	or	a,#0x02
                           4018 ;	genAssign (pointer)
   0B63 02                 4019 	ld	(bc),a
                           4020 ;	asakawa_battle.c 271
                           4021 ;	genAssign
   0B64 01 40 FF           4022 	ld	bc,#0xFF40
                           4023 ;	genAssign
                           4024 ;	AOP_STK for _main_sloc0_1_0
   0B67 23                 4025 	inc	hl
   0B68 36 40              4026 	ld	(hl),#0x40
   0B6A 23                 4027 	inc	hl
   0B6B 36 FF              4028 	ld	(hl),#0xFF
                           4029 ;	genPointerGet
                           4030 ;	AOP_STK for _main_sloc0_1_0
                           4031 ;	AOP_STK for _main_sloc1_1_0
   0B6D 2B                 4032 	dec	hl
   0B6E 5E                 4033 	ld	e,(hl)
   0B6F 23                 4034 	inc	hl
   0B70 56                 4035 	ld	d,(hl)
   0B71 1A                 4036 	ld	a,(de)
   0B72 2B                 4037 	dec	hl
   0B73 2B                 4038 	dec	hl
                           4039 ;	genOr
                           4040 ;	AOP_STK for _main_sloc1_1_0
   0B74 77                 4041 	ld      (hl),a
   0B75 7F                 4042 	ld      a,a
   0B76 F6 80              4043 	or	a,#0x80
                           4044 ;	genAssign (pointer)
   0B78 02                 4045 	ld	(bc),a
                           4046 ;	asakawa_battle.c 272
                           4047 ;	genCall
                           4048 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0B79 CD FF 04           4049 	call	_asakawa_battle_ctrl
                           4050 ;	genLabel
   0B7C                    4051 00101$:
                           4052 ;	genEndFunction
   0B7C E8 03              4053 	lda	sp,3(sp)
   0B7E C9                 4054 	ret
   0B7F                    4055 ___main_end:
                           4056 	.area _CODE
ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 1.

Symbol Table

  1 _LETTER_COUNT                      067B GR
  0 ___asakawa_battle_check_end        0997 R
  0 ___asakawa_battle_check_start      082B R
  0 ___asakawa_battle_ctrl_end         0509 R
  0 ___asakawa_battle_ctrl_start       04FF R
  0 ___back_end                        05B2 R
  0 ___back_start                      05A0 R
  0 ___battle_bkg_clean_end            04FF R
  0 ___battle_bkg_clean_start          04E0 R
  0 ___battle_menu_end                 06CC R
  0 ___battle_menu_start               065B R
  0 ___battle_nav_end                  054C R
  0 ___battle_nav_start                0509 R
  0 ___battle_print_end                04E0 R
  0 ___battle_print_start              02A3 R
  0 ___battle_toggle_down_end          0827 R
  0 ___battle_toggle_down_start        07A7 R
  0 ___battle_toggle_up_end            07A3 R
  0 ___battle_toggle_up_start          0723 R
  0 ___bkg_clean_end                   025C R
  0 ___bkg_clean_start                 023D R
  0 ___fight_opt_end                   05F5 R
  0 ___fight_opt_start                 05B2 R
  0 ___hide_sprites_end                02A3 R
  0 ___hide_sprites_start              027E R
  0 ___item_opt_end                    0644 R
  0 ___item_opt_start                  060E R
  0 ___main_end                        0B7F R
  0 ___main_start                      0AEE R
  0 ___print_end                       023D R
  0 ___print_start                     0000 R
  0 ___run_end                         058E R
  0 ___run_start                       054C R
  0 ___show_fighter_stats_end          0715 R
  0 ___show_fighter_stats_start        06E8 R
  0 ___show_sprites_end                0AEE R
  0 ___show_sprites_start              0997 R
  0 ___sprite_clean_end                027E R
  0 ___sprite_clean_start              025C R
    __initrleblock                     **** GX
  0 __str_0                            058E R
  0 __str_1                            0592 R
  0 __str_10                           06CC R
  0 __str_11                           06CE R
  0 __str_12                           06D5 R
  0 __str_13                           06DD R
  0 __str_14                           06E2 R
  0 __str_15                           0715 R
  0 __str_16                           071A R
  0 __str_17                           071D R
  0 __str_18                           07A3 R
  0 __str_19                           07A5 R
  0 __str_2                            0598 R
  0 __str_20                           0827 R
  0 __str_21                           0829 R
  0 __str_3                            05F5 R
  0 __str_4                            05F7 R
  0 __str_5                            05FE R
  0 __str_6                            0607 R
  0 __str_7                            0644 R
  0 __str_8                            064B R
  0 __str_9                            0654 R
  1 _arrow_x                           092C GR
  1 _arrow_y                           092D GR
  0 _asakawa_battle_check              082B GR
  0 _asakawa_battle_ctrl               04FF GR
  1 _asakawa_front_idle                067C GR
  1 _asakawa_pos                       0928 GR
  0 _back                              05A0 GR
  0 _battle_bkg_clean                  04E0 GR
  0 _battle_menu                       065B GR
  0 _battle_nav                        0509 GR
  0 _battle_print                      02A3 GR
  0 _battle_toggle_down                07A7 GR
  0 _battle_toggle_up                  0723 GR
  0 _bkg_clean                         023D GR
  1 _blank_screen                      077C GR
  1 _blank_screen_tiles                08E4 GR
  1 _chain_border                      0000 GR
  1 _chain_border_tiles                0448 GR
  1 _chars                             0650 GR
  1 _cushion                           067A GR
    _delay                             **** GX
    _display_off                       **** GX
  0 _fight_opt                         05B2 GR
  1 _font                              0168 GR
  1 _hero_back_idle                    06FC GR
  1 _hero_pos                          0924 GR
  0 _hide_sprites                      027E GR
  1 _i                                 0678 GR
  0 _item_opt                          060E GR
  1 _j                                 0679 GR
    _joypad                            **** GX
  0 _main                              0AEE GR
    _move_sprite                       **** GX
  0 _print                             0000 GR
  0 _run                               054C GR
    _set_bkg_data                      **** GX
    _set_bkg_tiles                     **** GX
    _set_sprite_data                   **** GX
    _set_sprite_tile                   **** GX
  0 _show_fighter_stats                06E8 GR
  0 _show_sprites                      0997 GR
  1 _small_chain_border                04E8 GR
  0 _sprite_clean                      025C GR
  1 _state                             092E GR
    _wait_vbl_done                     **** GX

ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 2.

Area Table

   0 _CODE                              size  B7F   flags 0
   1 _DATA                              size  92F   flags 0
   2 _OVERLAY                           size    0   flags 0
   3 _ISEG                              size    0   flags 0
   4 _BSEG                              size    0   flags 0
   5 _XSEG                              size    0   flags 0
   6 _GSINIT                            size  585   flags 0
   7 _GSFINAL                           size    0   flags 0
   8 _HOME                              size    0   flags 0
