                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.3.1 Fri May  3 22:33:56 2019
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module lcc138900
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _choice
                             12 	.globl _option
                             13 	.globl _QUIT
                             14 	.globl _NEW_GAME
                             15 	.globl _LEVEL_3
                             16 	.globl _LEVEL_2
                             17 	.globl _START
                             18 	.globl _GAME_OVER
                             19 	.globl _opening
                             20 ;--------------------------------------------------------
                             21 ; special function registers
                             22 ;--------------------------------------------------------
                             23 ;--------------------------------------------------------
                             24 ; special function bits 
                             25 ;--------------------------------------------------------
                             26 ;--------------------------------------------------------
                             27 ; internal ram data
                             28 ;--------------------------------------------------------
                             29 	.area _DATA
   0000                      30 _GAME_OVER::
   0000                      31 	.ds 1
   0001                      32 _START::
   0001                      33 	.ds 1
   0002                      34 _LEVEL_2::
   0002                      35 	.ds 1
   0003                      36 _LEVEL_3::
   0003                      37 	.ds 1
   0004                      38 _NEW_GAME::
   0004                      39 	.ds 1
   0005                      40 _QUIT::
   0005                      41 	.ds 1
   0006                      42 _option::
   0006                      43 	.ds 1
   0007                      44 _choice::
   0007                      45 	.ds 1
                             46 ;--------------------------------------------------------
                             47 ; overlayable items in internal ram 
                             48 ;--------------------------------------------------------
                             49 	.area _OVERLAY
                             50 ;--------------------------------------------------------
                             51 ; indirectly addressable internal ram data
                             52 ;--------------------------------------------------------
                             53 	.area _ISEG
                             54 ;--------------------------------------------------------
                             55 ; bit data
                             56 ;--------------------------------------------------------
                             57 	.area _BSEG
                             58 ;--------------------------------------------------------
                             59 ; external ram data
                             60 ;--------------------------------------------------------
                             61 	.area _XSEG
                             62 ;--------------------------------------------------------
                             63 ; global & static initialisations
                             64 ;--------------------------------------------------------
                             65 	.area _GSINIT
                             66 	.area _GSFINAL
                             67 	.area _GSINIT
                             68 ;	start_up/start_up.c 15
                             69 ;	genAssign
                             70 ;	AOP_HL for _GAME_OVER
   0000 21 00 00             71 	ld	hl,#_GAME_OVER
   0003 36 00                72 	ld	(hl),#0x00
                             73 ;	start_up/start_up.c 16
                             74 ;	genAssign
                             75 ;	AOP_HL for _START
   0005 21 01 00             76 	ld	hl,#_START
   0008 36 01                77 	ld	(hl),#0x01
                             78 ;	start_up/start_up.c 17
                             79 ;	genAssign
                             80 ;	AOP_HL for _LEVEL_2
   000A 21 02 00             81 	ld	hl,#_LEVEL_2
   000D 36 02                82 	ld	(hl),#0x02
                             83 ;	start_up/start_up.c 18
                             84 ;	genAssign
                             85 ;	AOP_HL for _LEVEL_3
   000F 21 03 00             86 	ld	hl,#_LEVEL_3
   0012 36 03                87 	ld	(hl),#0x03
                             88 ;	start_up/start_up.c 19
                             89 ;	genAssign
                             90 ;	AOP_HL for _NEW_GAME
   0014 21 04 00             91 	ld	hl,#_NEW_GAME
   0017 36 04                92 	ld	(hl),#0x04
                             93 ;	start_up/start_up.c 20
                             94 ;	genAssign
                             95 ;	AOP_HL for _QUIT
   0019 21 05 00             96 	ld	hl,#_QUIT
   001C 36 05                97 	ld	(hl),#0x05
                             98 ;	start_up/start_up.c 26
                             99 ;	genAssign
                            100 ;	AOP_HL for _choice
   001E 21 07 00            101 	ld	hl,#_choice
   0021 36 00               102 	ld	(hl),#0x00
                            103 ;--------------------------------------------------------
                            104 ; Home
                            105 ;--------------------------------------------------------
                            106 	.area _HOME
                            107 	.area _CODE
                            108 ;--------------------------------------------------------
                            109 ; code
                            110 ;--------------------------------------------------------
                            111 	.area _CODE
                            112 ;	start_up/start_up.c 28
                            113 ;	genLabel
                            114 ;	genFunction
                            115 ;	---------------------------------
                            116 ; Function opening
                            117 ; ---------------------------------
   0000                     118 ___opening_start:
   0000                     119 _opening:
   0000 E8 FD               120 	lda	sp,-3(sp)
                            121 ;	start_up/start_up.c 30
                            122 ;	genCall
                            123 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0002 CD 00 00            124 	call	_display_off
                            125 ;	start_up/start_up.c 32
                            126 ;	genIpush
                            127 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0005 21 00 00            128 	ld	hl,#_bkg_palette
   0008 E5                  129 	push	hl
                            130 ;	genIpush
   0009 21 00 01            131 	ld	hl,#0x0100
   000C E5                  132 	push	hl
                            133 ;	genCall
   000D CD 00 00            134 	call	_set_bkg_palette
   0010 E8 04               135 	lda	sp,4(sp)
                            136 ;	start_up/start_up.c 34
                            137 ;	genIpush
                            138 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0012 21 00 00            139 	ld	hl,#_sprite_palette
   0015 E5                  140 	push	hl
                            141 ;	genIpush
   0016 21 00 02            142 	ld	hl,#0x0200
   0019 E5                  143 	push	hl
                            144 ;	genCall
   001A CD 00 00            145 	call	_set_sprite_palette
   001D E8 04               146 	lda	sp,4(sp)
                            147 ;	start_up/start_up.c 36
                            148 ;	genIpush
                            149 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   001F 3E 00               150 	ld	a,#0x00
   0021 F5                  151 	push	af
   0022 33                  152 	inc	sp
                            153 ;	genCall
   0023 CD 00 00            154 	call	_sprite_clean
   0026 E8 01               155 	lda	sp,1(sp)
                            156 ;	start_up/start_up.c 37
                            157 ;	genAssign
                            158 ;	AOP_HL for _LETTER_COUNT
   0028 21 00 00            159 	ld	hl,#_LETTER_COUNT
   002B 36 00               160 	ld	(hl),#0x00
                            161 ;	start_up/start_up.c 38
                            162 ;	genCall
                            163 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   002D CD 00 00            164 	call	_clear_screen
                            165 ;	start_up/start_up.c 39
                            166 ;	genIpush
                            167 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0030 21 38 36            168 	ld	hl,#0x3638
   0033 E5                  169 	push	hl
                            170 ;	genIpush
   0034 21 C3 00            171 	ld	hl,#__str_0
   0037 E5                  172 	push	hl
                            173 ;	genCall
   0038 CD 00 00            174 	call	_print
   003B E8 04               175 	lda	sp,4(sp)
                            176 ;	start_up/start_up.c 40
                            177 ;	genAssign
                            178 ;	AOP_HL for _i
   003D 21 00 00            179 	ld	hl,#_i
   0040 36 00               180 	ld	(hl),#0x00
                            181 ;	genLabel
   0042                     182 00106$:
                            183 ;	genCmpLt
                            184 ;	AOP_HL for _i
                            185 ;	AOP_HL for _LETTER_COUNT
   0042 21 00 00            186 	ld	hl,#_i
   0045 7E                  187 	ld	a,(hl)
   0046 21 00 00            188 	ld	hl,#_LETTER_COUNT
   0049 96                  189 	sub	a,(hl)
   004A D2 63 00            190 	jp	nc,00109$
                            191 ;	start_up/start_up.c 41
                            192 ;	genIpush
                            193 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   004D 3E 00               194 	ld	a,#0x00
   004F F5                  195 	push	af
   0050 33                  196 	inc	sp
                            197 ;	genIpush
                            198 ;	AOP_HL for _i
   0051 21 00 00            199 	ld	hl,#_i
   0054 7E                  200 	ld	a,(hl)
   0055 F5                  201 	push	af
   0056 33                  202 	inc	sp
                            203 ;	genCall
   0057 CD 00 00            204 	call	_set_sprite_prop
   005A E8 02               205 	lda	sp,2(sp)
                            206 ;	start_up/start_up.c 40
                            207 ;	genPlus
                            208 ;	AOP_HL for _i
                            209 ;	genPlusIncr
   005C 21 00 00            210 	ld	hl,#_i
   005F 34                  211 	inc	(hl)
                            212 ;	genGoto
   0060 C3 42 00            213 	jp	00106$
                            214 ;	genLabel
   0063                     215 00109$:
                            216 ;	start_up/start_up.c 42
                            217 ;	genAssign
   0063 01 40 FF            218 	ld	bc,#0xFF40
                            219 ;	genAssign
                            220 ;	AOP_STK for _opening_sloc0_1_0
   0066 F8 01               221 	lda	hl,1(sp)
   0068 36 40               222 	ld	(hl),#0x40
   006A 23                  223 	inc	hl
   006B 36 FF               224 	ld	(hl),#0xFF
                            225 ;	genPointerGet
                            226 ;	AOP_STK for _opening_sloc0_1_0
                            227 ;	AOP_STK for _opening_sloc1_1_0
   006D 2B                  228 	dec	hl
   006E 5E                  229 	ld	e,(hl)
   006F 23                  230 	inc	hl
   0070 56                  231 	ld	d,(hl)
   0071 1A                  232 	ld	a,(de)
   0072 2B                  233 	dec	hl
   0073 2B                  234 	dec	hl
                            235 ;	genOr
                            236 ;	AOP_STK for _opening_sloc1_1_0
   0074 77                  237 	ld      (hl),a
   0075 7F                  238 	ld      a,a
   0076 F6 01               239 	or	a,#0x01
                            240 ;	genAssign (pointer)
   0078 02                  241 	ld	(bc),a
                            242 ;	start_up/start_up.c 43
                            243 ;	genAssign
   0079 01 40 FF            244 	ld	bc,#0xFF40
                            245 ;	genAssign
                            246 ;	AOP_STK for _opening_sloc0_1_0
   007C 23                  247 	inc	hl
   007D 36 40               248 	ld	(hl),#0x40
   007F 23                  249 	inc	hl
   0080 36 FF               250 	ld	(hl),#0xFF
                            251 ;	genPointerGet
                            252 ;	AOP_STK for _opening_sloc0_1_0
                            253 ;	AOP_STK for _opening_sloc1_1_0
   0082 2B                  254 	dec	hl
   0083 5E                  255 	ld	e,(hl)
   0084 23                  256 	inc	hl
   0085 56                  257 	ld	d,(hl)
   0086 1A                  258 	ld	a,(de)
   0087 2B                  259 	dec	hl
   0088 2B                  260 	dec	hl
                            261 ;	genOr
                            262 ;	AOP_STK for _opening_sloc1_1_0
   0089 77                  263 	ld      (hl),a
   008A 7F                  264 	ld      a,a
   008B F6 02               265 	or	a,#0x02
                            266 ;	genAssign (pointer)
   008D 02                  267 	ld	(bc),a
                            268 ;	start_up/start_up.c 44
                            269 ;	genAssign
   008E 01 40 FF            270 	ld	bc,#0xFF40
                            271 ;	genAssign
                            272 ;	AOP_STK for _opening_sloc0_1_0
   0091 23                  273 	inc	hl
   0092 36 40               274 	ld	(hl),#0x40
   0094 23                  275 	inc	hl
   0095 36 FF               276 	ld	(hl),#0xFF
                            277 ;	genPointerGet
                            278 ;	AOP_STK for _opening_sloc0_1_0
                            279 ;	AOP_STK for _opening_sloc1_1_0
   0097 2B                  280 	dec	hl
   0098 5E                  281 	ld	e,(hl)
   0099 23                  282 	inc	hl
   009A 56                  283 	ld	d,(hl)
   009B 1A                  284 	ld	a,(de)
   009C 2B                  285 	dec	hl
   009D 2B                  286 	dec	hl
                            287 ;	genOr
                            288 ;	AOP_STK for _opening_sloc1_1_0
   009E 77                  289 	ld      (hl),a
   009F 7F                  290 	ld      a,a
   00A0 F6 80               291 	or	a,#0x80
                            292 ;	genAssign (pointer)
   00A2 02                  293 	ld	(bc),a
                            294 ;	start_up/start_up.c 45
                            295 ;	genIpush
                            296 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00A3 21 D0 07            297 	ld	hl,#0x07D0
   00A6 E5                  298 	push	hl
                            299 ;	genCall
   00A7 CD 00 00            300 	call	_delay
   00AA E8 02               301 	lda	sp,2(sp)
                            302 ;	start_up/start_up.c 46
                            303 ;	genLabel
   00AC                     304 00104$:
                            305 ;	start_up/start_up.c 48
                            306 ;	genCall
                            307 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00AC CD 00 00            308 	call	_joypad
   00AF 4B                  309 	ld	c,e
                            310 ;	genAnd
   00B0 79                  311 	ld	a,c
   00B1 E6 10               312 	and	a,#0x10
   00B3 20 03               313 	jr	nz,00116$
   00B5 C3 AC 00            314 	jp	00104$
   00B8                     315 00116$:
                            316 ;	start_up/start_up.c 50
                            317 ;	genAssign
                            318 ;	AOP_HL for _START
                            319 ;	AOP_HL for _option
   00B8 21 01 00            320 	ld	hl,#_START
   00BB 7E                  321 	ld	a,(hl)
   00BC 21 06 00            322 	ld	hl,#_option
   00BF 77                  323 	ld	(hl),a
                            324 ;	start_up/start_up.c 51
                            325 ;	genLabel
   00C0                     326 00110$:
                            327 ;	genEndFunction
   00C0 E8 03               328 	lda	sp,3(sp)
   00C2 C9                  329 	ret
   00C3                     330 ___opening_end:
   00C3                     331 __str_0:
   00C3 50 52 45 53 53 69   332 	.ascii "PRESSiA"
        41
   00CA 0A                  333 	.db 0x0A
   00CB 54 4F 69 53 54 41   334 	.ascii "TOiSTART"
        52 54
   00D3 00                  335 	.db 0x00
                            336 	.area _CODE
ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 1.

Symbol Table

  1 _GAME_OVER                         0000 GR
    _LETTER_COUNT                      **** GX
  1 _LEVEL_2                           0002 GR
  1 _LEVEL_3                           0003 GR
  1 _NEW_GAME                          0004 GR
  1 _QUIT                              0005 GR
  1 _START                             0001 GR
  0 ___opening_end                     00C3 R
  0 ___opening_start                   0000 R
  0 __str_0                            00C3 R
    _bkg_palette                       **** GX
  1 _choice                            0007 GR
    _clear_screen                      **** GX
    _delay                             **** GX
    _display_off                       **** GX
    _i                                 **** GX
    _joypad                            **** GX
  0 _opening                           0000 GR
  1 _option                            0006 GR
    _print                             **** GX
    _set_bkg_palette                   **** GX
    _set_sprite_palette                **** GX
    _set_sprite_prop                   **** GX
    _sprite_clean                      **** GX
    _sprite_palette                    **** GX

ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 2.

Area Table

   0 _CODE                              size   D4   flags 0
   1 _DATA                              size    8   flags 0
   2 _OVERLAY                           size    0   flags 0
   3 _ISEG                              size    0   flags 0
   4 _BSEG                              size    0   flags 0
   5 _XSEG                              size    0   flags 0
   6 _GSINIT                            size   23   flags 0
   7 _GSFINAL                           size    0   flags 0
   8 _HOME                              size    0   flags 0
