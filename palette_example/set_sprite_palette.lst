                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.3.1 Mon Mar 25 13:28:04 2019
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module lcc119740
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _bkg_palette
                             13 	.globl _sprite_palette
                             14 	.globl _smile
                             15 	.globl _i
                             16 ;--------------------------------------------------------
                             17 ; special function registers
                             18 ;--------------------------------------------------------
                             19 ;--------------------------------------------------------
                             20 ; special function bits 
                             21 ;--------------------------------------------------------
                             22 ;--------------------------------------------------------
                             23 ; internal ram data
                             24 ;--------------------------------------------------------
                             25 	.area _DATA
   0000                      26 _i::
   0000                      27 	.ds 1
   0001                      28 _smile::
   0001                      29 	.ds 128
   0081                      30 _sprite_palette::
   0081                      31 	.ds 16
   0091                      32 _bkg_palette::
   0091                      33 	.ds 16
                             34 ;--------------------------------------------------------
                             35 ; overlayable items in internal ram 
                             36 ;--------------------------------------------------------
                             37 	.area _OVERLAY
                             38 ;--------------------------------------------------------
                             39 ; indirectly addressable internal ram data
                             40 ;--------------------------------------------------------
                             41 	.area _ISEG
                             42 ;--------------------------------------------------------
                             43 ; bit data
                             44 ;--------------------------------------------------------
                             45 	.area _BSEG
                             46 ;--------------------------------------------------------
                             47 ; external ram data
                             48 ;--------------------------------------------------------
                             49 	.area _XSEG
                             50 ;--------------------------------------------------------
                             51 ; global & static initialisations
                             52 ;--------------------------------------------------------
                             53 	.area _GSINIT
                             54 	.area _GSFINAL
                             55 	.area _GSINIT
                             56 ;	set_sprite_palette.c 4
                             57 ;	genAssign
                             58 ;	AOP_HL for _i
   0000 21 00 00             59 	ld	hl,#_i
   0003 36 00                60 	ld	(hl),#0x00
                             61 ;	set_sprite_palette.c 10
                             62 ;	set_sprite_palette.c 63
                             63 ;	genArrayInit
                             64 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0005 21 01 00             65 	ld	hl,#_smile
   0008 CD 00 00             66 	call	__initrleblock
   000B 08                   67 	.db	8
   000C 0F 0F 30 30 40 40    68 	.db	0x0F, 0x0F, 0x30, 0x30, 0x40, 0x40, 0x40, 0x40
        40 40
   0014 F4 84                69 	.db	-12,0x84
   0016 14                   70 	.db	20
   0017 80 80 80 80 44 44    71 	.db	0x80, 0x80, 0x80, 0x80, 0x44, 0x44, 0x43, 0x43
        43 43
   001F 30 30 0F 0F F0 F0    72 	.db	0x30, 0x30, 0x0F, 0x0F, 0xF0, 0xF0, 0x0C, 0x0C
        0C 0C
   0027 02 02 02 02          73 	.db	0x02, 0x02, 0x02, 0x02
   002B F4 21                74 	.db	-12,0x21
   002D 14                   75 	.db	20
   002E 01 01 01 01 22 22    76 	.db	0x01, 0x01, 0x01, 0x01, 0x22, 0x22, 0xC2, 0xC2
        C2 C2
   0036 0C 0C F0 F0 0F 0F    77 	.db	0x0C, 0x0C, 0xF0, 0xF0, 0x0F, 0x0F, 0x30, 0x30
        30 30
   003E 40 40 40 40          78 	.db	0x40, 0x40, 0x40, 0x40
   0042 F4 84                79 	.db	-12,0x84
   0044 14                   80 	.db	20
   0045 80 80 80 80 44 44    81 	.db	0x80, 0x80, 0x80, 0x80, 0x44, 0x44, 0x43, 0x43
        43 43
   004D 30 30 0F 0F F0 F0    82 	.db	0x30, 0x30, 0x0F, 0x0F, 0xF0, 0xF0, 0x0C, 0x0C
        0C 0C
   0055 02 02 02 02          83 	.db	0x02, 0x02, 0x02, 0x02
   0059 FA 01                84 	.db	-6,0x01
   005B 02                   85 	.db	2
   005C F9 F9                86 	.db	0xF9, 0xF9
   005E F8 01                87 	.db	-8,0x01
   0060 08                   88 	.db	8
   0061 22 22 C2 C2 0C 0C    89 	.db	0x22, 0x22, 0xC2, 0xC2, 0x0C, 0x0C, 0xF0, 0xF0
        F0 F0
   0069 00                   90 	.db	0
                             91 ;	set_sprite_palette.c 30
                             92 ;	set_sprite_palette.c 63
                             93 ;	genArrayInit
                             94 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   006A 21 81 00             95 	ld	hl,#_sprite_palette
   006D CD 00 00             96 	call	__initrleblock
   0070 10                   97 	.db	16
   0071 00 00 E0 00 00 7C    98 	.db	0x00, 0x00, 0xE0, 0x00, 0x00, 0x7C, 0x15, 0x54
        15 54
   0079 00 00 FF 7F 4A 29    99 	.db	0x00, 0x00, 0xFF, 0x7F, 0x4A, 0x29, 0x00, 0x00
        00 00
   0081 00                  100 	.db	0
                            101 ;	set_sprite_palette.c 35
                            102 ;	set_sprite_palette.c 63
                            103 ;	genArrayInit
                            104 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0082 21 91 00            105 	ld	hl,#_bkg_palette
   0085 CD 00 00            106 	call	__initrleblock
   0088 05                  107 	.db	5
   0089 15 54 00 7C E0      108 	.db	0x15, 0x54, 0x00, 0x7C, 0xE0
   008E FB 00               109 	.db	-5,0x00
   0090 06                  110 	.db	6
   0091 4A 29 FF 7F 00 00   111 	.db	0x4A, 0x29, 0xFF, 0x7F, 0x00, 0x00
   0097 00                  112 	.db	0
                            113 ;--------------------------------------------------------
                            114 ; Home
                            115 ;--------------------------------------------------------
                            116 	.area _HOME
                            117 	.area _CODE
                            118 ;--------------------------------------------------------
                            119 ; code
                            120 ;--------------------------------------------------------
                            121 	.area _CODE
                            122 ;	set_sprite_palette.c 40
                            123 ;	genLabel
                            124 ;	genFunction
                            125 ;	---------------------------------
                            126 ; Function main
                            127 ; ---------------------------------
   0000                     128 ___main_start:
   0000                     129 _main:
   0000 E8 FD               130 	lda	sp,-3(sp)
                            131 ;	set_sprite_palette.c 43
                            132 ;	genIpush
                            133 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0002 21 91 00            134 	ld	hl,#_bkg_palette
   0005 E5                  135 	push	hl
                            136 ;	genIpush
   0006 21 00 02            137 	ld	hl,#0x0200
   0009 E5                  138 	push	hl
                            139 ;	genCall
   000A CD 00 00            140 	call	_set_bkg_palette
   000D E8 04               141 	lda	sp,4(sp)
                            142 ;	set_sprite_palette.c 45
                            143 ;	genAssign
   000F 01 40 FF            144 	ld	bc,#0xFF40
                            145 ;	genAssign
                            146 ;	AOP_STK for _main_sloc0_1_0
   0012 F8 01               147 	lda	hl,1(sp)
   0014 36 40               148 	ld	(hl),#0x40
   0016 23                  149 	inc	hl
   0017 36 FF               150 	ld	(hl),#0xFF
                            151 ;	genPointerGet
                            152 ;	AOP_STK for _main_sloc0_1_0
                            153 ;	AOP_STK for _main_sloc1_1_0
   0019 2B                  154 	dec	hl
   001A 5E                  155 	ld	e,(hl)
   001B 23                  156 	inc	hl
   001C 56                  157 	ld	d,(hl)
   001D 1A                  158 	ld	a,(de)
   001E 2B                  159 	dec	hl
   001F 2B                  160 	dec	hl
                            161 ;	genOr
                            162 ;	AOP_STK for _main_sloc1_1_0
   0020 77                  163 	ld      (hl),a
   0021 7F                  164 	ld      a,a
   0022 F6 04               165 	or	a,#0x04
                            166 ;	genAssign (pointer)
   0024 02                  167 	ld	(bc),a
                            168 ;	set_sprite_palette.c 46
                            169 ;	genIpush
                            170 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0025 21 01 00            171 	ld	hl,#_smile
   0028 E5                  172 	push	hl
                            173 ;	genIpush
   0029 21 00 08            174 	ld	hl,#0x0800
   002C E5                  175 	push	hl
                            176 ;	genCall
   002D CD 00 00            177 	call	_set_sprite_data
   0030 E8 04               178 	lda	sp,4(sp)
                            179 ;	set_sprite_palette.c 47
                            180 ;	genIpush
                            181 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0032 21 00 00            182 	ld	hl,#0x0000
   0035 E5                  183 	push	hl
                            184 ;	genCall
   0036 CD 00 00            185 	call	_set_sprite_tile
   0039 E8 02               186 	lda	sp,2(sp)
                            187 ;	set_sprite_palette.c 48
                            188 ;	genIpush
                            189 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   003B 21 4B 4B            190 	ld	hl,#0x4B4B
   003E E5                  191 	push	hl
                            192 ;	genIpush
   003F 3E 00               193 	ld	a,#0x00
   0041 F5                  194 	push	af
   0042 33                  195 	inc	sp
                            196 ;	genCall
   0043 CD 00 00            197 	call	_move_sprite
   0046 E8 03               198 	lda	sp,3(sp)
                            199 ;	set_sprite_palette.c 49
                            200 ;	genIpush
                            201 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0048 21 01 02            202 	ld	hl,#0x0201
   004B E5                  203 	push	hl
                            204 ;	genCall
   004C CD 00 00            205 	call	_set_sprite_tile
   004F E8 02               206 	lda	sp,2(sp)
                            207 ;	set_sprite_palette.c 50
                            208 ;	genIpush
                            209 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0051 21 53 4B            210 	ld	hl,#0x4B53
   0054 E5                  211 	push	hl
                            212 ;	genIpush
   0055 3E 01               213 	ld	a,#0x01
   0057 F5                  214 	push	af
   0058 33                  215 	inc	sp
                            216 ;	genCall
   0059 CD 00 00            217 	call	_move_sprite
   005C E8 03               218 	lda	sp,3(sp)
                            219 ;	set_sprite_palette.c 52
                            220 ;	genAssign
   005E 01 40 FF            221 	ld	bc,#0xFF40
                            222 ;	genAssign
                            223 ;	AOP_STK for _main_sloc0_1_0
   0061 F8 01               224 	lda	hl,1(sp)
   0063 36 40               225 	ld	(hl),#0x40
   0065 23                  226 	inc	hl
   0066 36 FF               227 	ld	(hl),#0xFF
                            228 ;	genPointerGet
                            229 ;	AOP_STK for _main_sloc0_1_0
                            230 ;	AOP_STK for _main_sloc1_1_0
   0068 2B                  231 	dec	hl
   0069 5E                  232 	ld	e,(hl)
   006A 23                  233 	inc	hl
   006B 56                  234 	ld	d,(hl)
   006C 1A                  235 	ld	a,(de)
   006D 2B                  236 	dec	hl
   006E 2B                  237 	dec	hl
                            238 ;	genOr
                            239 ;	AOP_STK for _main_sloc1_1_0
   006F 77                  240 	ld      (hl),a
   0070 7F                  241 	ld      a,a
   0071 F6 02               242 	or	a,#0x02
                            243 ;	genAssign (pointer)
   0073 02                  244 	ld	(bc),a
                            245 ;	set_sprite_palette.c 55
                            246 ;	genAssign
                            247 ;	AOP_HL for _i
   0074 21 00 00            248 	ld	hl,#_i
   0077 36 01               249 	ld	(hl),#0x01
                            250 ;	set_sprite_palette.c 56
                            251 ;	genIpush
                            252 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0079 21 C8 00            253 	ld	hl,#0x00C8
   007C E5                  254 	push	hl
                            255 ;	genCall
   007D CD 00 00            256 	call	_delay
   0080 E8 02               257 	lda	sp,2(sp)
                            258 ;	set_sprite_palette.c 59
                            259 ;	genIpush
                            260 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0082 21 91 00            261 	ld	hl,#_bkg_palette
   0085 E5                  262 	push	hl
                            263 ;	genIpush
   0086 21 01 02            264 	ld	hl,#0x0201
   0089 E5                  265 	push	hl
                            266 ;	genCall
   008A CD 00 00            267 	call	_set_bkg_palette
   008D E8 04               268 	lda	sp,4(sp)
                            269 ;	set_sprite_palette.c 60
                            270 ;	genAssign
   008F 01 40 FF            271 	ld	bc,#0xFF40
                            272 ;	genAssign
                            273 ;	AOP_STK for _main_sloc0_1_0
   0092 F8 01               274 	lda	hl,1(sp)
   0094 36 40               275 	ld	(hl),#0x40
   0096 23                  276 	inc	hl
   0097 36 FF               277 	ld	(hl),#0xFF
                            278 ;	genPointerGet
                            279 ;	AOP_STK for _main_sloc0_1_0
                            280 ;	AOP_STK for _main_sloc1_1_0
   0099 2B                  281 	dec	hl
   009A 5E                  282 	ld	e,(hl)
   009B 23                  283 	inc	hl
   009C 56                  284 	ld	d,(hl)
   009D 1A                  285 	ld	a,(de)
   009E 2B                  286 	dec	hl
   009F 2B                  287 	dec	hl
                            288 ;	genOr
                            289 ;	AOP_STK for _main_sloc1_1_0
   00A0 77                  290 	ld      (hl),a
   00A1 7F                  291 	ld      a,a
   00A2 F6 01               292 	or	a,#0x01
                            293 ;	genAssign (pointer)
   00A4 02                  294 	ld	(bc),a
                            295 ;	genLabel
   00A5                     296 00101$:
                            297 ;	genEndFunction
   00A5 E8 03               298 	lda	sp,3(sp)
   00A7 C9                  299 	ret
   00A8                     300 ___main_end:
                            301 	.area _CODE
ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 1.

Symbol Table

  0 ___main_end                        00A8 R
  0 ___main_start                      0000 R
    __initrleblock                     **** GX
  1 _bkg_palette                       0091 GR
    _delay                             **** GX
  1 _i                                 0000 GR
  0 _main                              0000 GR
    _move_sprite                       **** GX
    _set_bkg_palette                   **** GX
    _set_sprite_data                   **** GX
    _set_sprite_tile                   **** GX
  1 _smile                             0001 GR
  1 _sprite_palette                    0081 GR

ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 2.

Area Table

   0 _CODE                              size   A8   flags 0
   1 _DATA                              size   A1   flags 0
   2 _OVERLAY                           size    0   flags 0
   3 _ISEG                              size    0   flags 0
   4 _BSEG                              size    0   flags 0
   5 _XSEG                              size    0   flags 0
   6 _GSINIT                            size   98   flags 0
   7 _GSFINAL                           size    0   flags 0
   8 _HOME                              size    0   flags 0
